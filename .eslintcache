[{"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/index.js":"1","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/layouts/Admin.js":"2","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/Manager.js":"3","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/User.js":"4","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Login/Auth.js":"5","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/SuperAdmin.js":"6","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Landing/Landing.js":"7","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/constants.js":"8","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/routes.js":"9","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerNavbar.js":"10","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerFooter.js":"11","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerSidebar.js":"12","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/UserNavebar.js":"13","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/UserSidebar.js":"14","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Login/AuthNavbar.js":"15","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Login/AuthFooter.js":"16","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/Bars/Footer.js":"17","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/Bars/Navbar.js":"18","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/Bars/Sidebar.js":"19","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/UserFooter.js":"20","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Shared/ViewStandard.js":"21","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/UserIndex.js":"22","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerWorkflows.js":"23","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerStandards.js":"24","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerSubscriptions.js":"25","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerProfile.js":"26","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerDocuments.js":"27","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerIndex.js":"28","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerArticles.js":"29","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerUsers.js":"30","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/SuperAdminSubscriptions.js":"31","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/SuperAdminStandards.js":"32","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/SuperAdminIndex.js":"33","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/SuperAdminClients.js":"34","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/Views/Audit.js":"35","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/Views/Profile.js":"36","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/Views/Document.js":"37","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/Views/Workflows.js":"38","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/Views/SuperAdminViewStandard.js":"39","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/Views/SuperAdminViewClient.js":"40","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/views/examples/Login.js":"41","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/views/examples/Register.js":"42","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Shared/ViewArticle.js":"43","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Shared/ViewWorkflow.js":"44","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Shared/ViewDocument.js":"45","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/Views/SuperAdminViewArticle.js":"46","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/Headers/EmptyHeader.js":"47","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/Headers/EmptyHeader.js":"48","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/Headers/ProfileHeader.js":"49","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/Headers/DashboardHeader.js":"50","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/Headers/DashboardHeader.js":"51","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/Headers/DashboardHeader.js":"52"},{"size":1218,"mtime":1611695432510,"results":"53","hashOfConfig":"54"},{"size":1969,"mtime":1611495487042,"results":"55","hashOfConfig":"54"},{"size":1913,"mtime":1608970985620,"results":"56","hashOfConfig":"54"},{"size":1969,"mtime":1609548342684,"results":"57","hashOfConfig":"54"},{"size":8766,"mtime":1611664427291,"results":"58","hashOfConfig":"54"},{"size":1825,"mtime":1611495487038,"results":"59","hashOfConfig":"54"},{"size":26360,"mtime":1611701269581,"results":"60","hashOfConfig":"54"},{"size":123,"mtime":1608970985632,"results":"61","hashOfConfig":"54"},{"size":6061,"mtime":1611495487043,"results":"62","hashOfConfig":"54"},{"size":3378,"mtime":1611495487035,"results":"63","hashOfConfig":"54"},{"size":1628,"mtime":1608970985621,"results":"64","hashOfConfig":"54"},{"size":7355,"mtime":1611495487036,"results":"65","hashOfConfig":"54"},{"size":3369,"mtime":1611495487041,"results":"66","hashOfConfig":"54"},{"size":8970,"mtime":1611495487041,"results":"67","hashOfConfig":"54"},{"size":3351,"mtime":1611667914428,"results":"68","hashOfConfig":"54"},{"size":1683,"mtime":1608970985618,"results":"69","hashOfConfig":"54"},{"size":1614,"mtime":1611495487037,"results":"70","hashOfConfig":"54"},{"size":3376,"mtime":1611664427301,"results":"71","hashOfConfig":"54"},{"size":7322,"mtime":1611495487038,"results":"72","hashOfConfig":"54"},{"size":1623,"mtime":1608970985628,"results":"73","hashOfConfig":"54"},{"size":4661,"mtime":1611664427299,"results":"74","hashOfConfig":"54"},{"size":9218,"mtime":1611664427306,"results":"75","hashOfConfig":"54"},{"size":16295,"mtime":1611664427298,"results":"76","hashOfConfig":"54"},{"size":4821,"mtime":1611664427296,"results":"77","hashOfConfig":"54"},{"size":3404,"mtime":1611664427296,"results":"78","hashOfConfig":"54"},{"size":9685,"mtime":1611664427295,"results":"79","hashOfConfig":"54"},{"size":14049,"mtime":1611664427294,"results":"80","hashOfConfig":"54"},{"size":28787,"mtime":1611664427294,"results":"81","hashOfConfig":"54"},{"size":9451,"mtime":1611664427293,"results":"82","hashOfConfig":"54"},{"size":17417,"mtime":1611664427297,"results":"83","hashOfConfig":"54"},{"size":16093,"mtime":1611664427304,"results":"84","hashOfConfig":"54"},{"size":12748,"mtime":1611664427303,"results":"85","hashOfConfig":"54"},{"size":8170,"mtime":1611664427302,"results":"86","hashOfConfig":"54"},{"size":13347,"mtime":1611664427302,"results":"87","hashOfConfig":"54"},{"size":4610,"mtime":1611664427307,"results":"88","hashOfConfig":"54"},{"size":9636,"mtime":1611664427309,"results":"89","hashOfConfig":"54"},{"size":5040,"mtime":1611664427308,"results":"90","hashOfConfig":"54"},{"size":6034,"mtime":1611664427309,"results":"91","hashOfConfig":"54"},{"size":10799,"mtime":1611664427305,"results":"92","hashOfConfig":"54"},{"size":8393,"mtime":1611664427305,"results":"93","hashOfConfig":"54"},{"size":4829,"mtime":1608970985635,"results":"94","hashOfConfig":"54"},{"size":5336,"mtime":1608970985636,"results":"95","hashOfConfig":"54"},{"size":16389,"mtime":1611664427298,"results":"96","hashOfConfig":"54"},{"size":19638,"mtime":1611664427300,"results":"97","hashOfConfig":"54"},{"size":2865,"mtime":1610787851266,"results":"98","hashOfConfig":"54"},{"size":11108,"mtime":1611664427304,"results":"99","hashOfConfig":"54"},{"size":602,"mtime":1608970985619,"results":"100","hashOfConfig":"54"},{"size":269,"mtime":1608970985627,"results":"101","hashOfConfig":"54"},{"size":736,"mtime":1608970985620,"results":"102","hashOfConfig":"54"},{"size":4044,"mtime":1611495487040,"results":"103","hashOfConfig":"54"},{"size":4880,"mtime":1611495487034,"results":"104","hashOfConfig":"54"},{"size":4865,"mtime":1611495487038,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"9zh209",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"108"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"108"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"108"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"108"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/index.js",[],["239","240"],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/layouts/Admin.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/Manager.js",["241"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport ManagerNavbar from \"components/Manager/ManagerNavbar.js\";\n// import AdminFooter from \"components/Footers/AdminFooter.js\";\nimport ManagerSidebar from \"components/Manager/ManagerSidebar.js\";\nimport ManagerFooter from \"components/Manager/ManagerFooter.js\"\n\nimport routes from \"routes.js\";\nimport ViewStandard from \"components/Shared/ViewStandard\";\n\nclass Manager extends React.Component {\n\tcomponentDidUpdate(e) {\n\t\tdocument.documentElement.scrollTop = 0;\n\t\tdocument.scrollingElement.scrollTop = 0;\n\t\tthis.refs.mainContent.scrollTop = 0;\n\t}\n\tgetRoutes = routes => {\n\t\treturn routes.map((prop, key) => {\n\t\t\tif (prop.layout === \"/manager\" || prop.layout === \"/manager/view\") {\n\t\t\t\treturn (\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath={prop.layout + prop.path}\n\t\t\t\t\t\tcomponent={prop.component}\n\t\t\t\t\t\tkey={key}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t});\n\t};\n\tgetBrandText = path => {\n\t\tfor (let i = 0; i < routes.length; i++) {\n\t\t\tif (\n\t\t\t\tthis.props.location.pathname.indexOf(\n\t\t\t\t\troutes[i].layout + routes[i].path\n\t\t\t\t) !== -1\n\t\t\t) {\n\t\t\t\treturn routes[i].name;\n\t\t\t}\n\t\t}\n\t\treturn \"Brand\";\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ManagerSidebar\n\t\t\t\t\t{...this.props}\n\t\t\t\t\troutes={routes}\n\t\t\t\t\tlogo={{\n\t\t\t\t\t\tinnerLink: \"/manager/index\",\n\t\t\t\t\t\timgSrc: require(\"assets/img/brand/argon-react.png\"),\n\t\t\t\t\t\timgAlt: \"...\"\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<div className=\"main-content\" ref=\"mainContent\">\n\t\t\t\t\t<ManagerNavbar\n\t\t\t\t\t\t{...this.props}\n\t\t\t\t\t\tbrandText={this.getBrandText(this.props.location.pathname)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{this.getRoutes(routes)}\n\t\t\t\t\t\t<Redirect from=\"*\" to=\"/manager/index\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t\t<Container fluid>\n\t\t\t\t\t\t<ManagerFooter />\n\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Manager;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/User.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Login/Auth.js",["242","243","244","245","246","247","248"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\n// reactstrap components\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Row,\n  Col,\n  Spinner\n} from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Login/AuthNavbar.js\";\nimport AuthFooter from \"components/Login/AuthFooter.js\";\nimport { constants } from '../../constants.js';\n\nclass Auth extends React.Component {\n\n\n  constructor(prop) {\n    super(prop);\n    this.state = {\n      valid: 0,\n      loggedIn: 1,\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n\n  componentDidMount() {\n    //Check if auth token in valid\n    let userId = reactLocalStorage.get('userId', true);\n    let token = reactLocalStorage.get('authToken', true);\n\n    if (token != null && userId != null) {\n      const data = {\n        \"token\": \"\" + token,\n        \"userId\": userId\n      }\n      axios.post(constants[\"apiUrl\"] + '/login/validate', data)\n        .then((res) => {\n          let data = res.data;\n          if (data.valid == true) {\n            this.setState({ loggedIn: 1 });\n            let userType = reactLocalStorage.get('userType', true);\n            if (userType == 1)\n              this.props.history.push(\"/user/index\");\n            else\n              this.props.history.push(\"/manager/index\");\n          } else {\n            this.setState({ loggedIn: 0 });\n          }\n\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n          this.setState({ loggedIn: 0 });\n        });\n    } else {\n      this.setState({ loggedIn: 0 });\n    }\n\n\n    // document.body.classList.add(\"bg-default\");\n  }\n  componentWillUnmount() {\n    document.body.classList.remove(\"bg-default\");\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  }\n  handleEmail = (event) => {\n    this.setState({ email: event.target.value });\n    // console.log(this.state.email);\n  }\n  handlePass = (event) => {\n    this.setState({ password: event.target.value });\n    // console.log(this.state.password);\n  }\n\n  userlogin = () => {\n    //Api call time\n    const data = {\n      \"email\": \"\" + this.state.email,\n      \"password\": \"\" + this.state.password\n    }\n    axios.post(constants[\"apiUrl\"] + '/login', data)\n      .then((res) => {\n        let data = res.data;\n        if (data.login == true) {\n          reactLocalStorage.setObject('currentUser', data.user);\n          reactLocalStorage.set('authToken', data.user.auth_token);\n          reactLocalStorage.set('userId', data.user.id);\n          reactLocalStorage.set('clientId', data.user.client_id);\n          reactLocalStorage.set('userType', data.user.user_type);\n\n          if (data.user.user_type == 1) {\n            this.props.history.push(\"/user/index\");\n          } else if (data.user.user_type == 2) {\n            this.props.history.push(\"/manager/index\");\n          } else {\n            this.props.history.push(\"/master/index\");\n          }\n        } else {\n          this.setState({ valid: 1 });\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          valid: 1\n        })\n        console.warn(JSON.stringify(error));\n      });\n\n    // if (this.state.email === \"user@gmail.com\" && this.state.password === \"password\") {\n\n    // };\n    // if (this.state.email === \"manager@gmail.com\" && this.state.password === \"password\") {\n    //   this.props.history.push(\"/manager/index\");\n    // }\n    // this.setState({\n    //   valid: 1\n    // })\n\n  };\n  render() {\n    return (\n      <>\n        <div className=\"main-content\">\n          <AuthNavbar />\n          <div className=\"header bg-gradient-info py-7 py-lg-8\">\n            <Container>\n              <div className=\"header-body text-center mb-7\">\n                <Row className=\"justify-content-center\">\n                  <Col lg=\"5\" md=\"6\">\n                    <h1 className=\"text-white\">Welcome to Assent360</h1>\n                    <p className=\"text-black text-light\">\n                      Please login with your account details\n                    </p>\n                  </Col>\n\n                </Row>\n              </div>\n            </Container>\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-default\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div>\n          </div>\n          {/* Page content */}\n          <Container className=\"mt--8 pb-5\">\n            <Row className=\"justify-content-center\">\n              <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                  <CardBody className=\"px-lg-5 py-lg-5\">\n                    {this.state.loggedIn == 0 ?\n                      <Form role=\"form\">\n                        <FormGroup className=\"mb-3\">\n                          {this.state.valid === 1 && <p style={{ color: 'red', textAlign: 'center' }}>Invalid Credentials! Please try again.</p>}\n                          {this.state.valid === 0 && <p style={{ color: 'red', textAlign: 'center' }}></p>}\n                          <InputGroup className=\"input-group-alternative\">\n                            <InputGroupAddon addonType=\"prepend\">\n                              <InputGroupText>\n                                <i className=\"ni ni-email-83\" />\n                              </InputGroupText>\n                            </InputGroupAddon>\n                            <Input placeholder=\"Email\" type=\"email\" autoComplete=\"new-email\" onChange={this.handleEmail}\n                              defaultValue={this.state.email} />\n                          </InputGroup>\n                        </FormGroup>\n                        <FormGroup>\n                          <InputGroup className=\"input-group-alternative\">\n                            <InputGroupAddon addonType=\"prepend\">\n                              <InputGroupText>\n                                <i className=\"ni ni-lock-circle-open\" />\n                              </InputGroupText>\n                            </InputGroupAddon>\n                            <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\"\n                              onChange={this.handlePass} defaultValue={this.state.password} />\n                          </InputGroup>\n                        </FormGroup>\n                        <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                          <input\n                            className=\"custom-control-input\"\n                            id=\" customCheckLogin\"\n                            type=\"checkbox\"\n                          />\n                          <label\n                            className=\"custom-control-label\"\n                            htmlFor=\" customCheckLogin\"\n                          >\n                            <span className=\"text-muted\">Remember me</span>\n                          </label>\n                        </div>\n                        <div className=\"text-center\">\n                          <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={this.userlogin}>\n                            Sign in\n                          </Button>\n                        </div>\n                      </Form>\n                      :\n                      <div className=\"text-center\">\n                        <Spinner st color=\"primary\" />\n                      </div>\n                    }\n                  </CardBody>\n                </Card>\n                <Row className=\"mt-3\">\n                {this.state.loggedIn == 0 ?\n                  <Col xs=\"6\">\n                    <a\n                      className=\"text-light\"\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                    >\n                      <small>Forgot password?</small>\n                    </a>\n                  </Col>\n                  : null }\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n        <AuthFooter />\n      </>\n    );\n  }\n}\n\nexport default Auth;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/SuperAdmin.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Landing/Landing.js",["249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266"],"/*! Developed by Alinon */\nimport React from \"react\";\n\nimport 'assets/landing/css/bootstrap.min.scoped.css';\n\nimport 'assets/landing/css/slick.scoped.css';\nimport 'assets/landing/css/magnific-popup.scoped.css';\nimport 'assets/landing/css/LineIcons.scoped.css';\nimport 'assets/landing/css/default.scoped.css';\n\nimport 'assets/landing/css/style.scoped.css';\n\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends React.Component {\n\tcomponentDidMount(e) {\n\n\t\tconst script1 = document.createElement(\"script\");\n\t\tscript1.src = \"assets/landing/js/vendor/modernizr-3.6.0.min.js\";\n\t\tscript1.async = true;\n\t\tscript1.onload = () => this.scriptLoaded();\n\t\tdocument.body.appendChild(script1);\n\n\t\tconst script2 = document.createElement(\"script\");\n\t\tscript2.src = \"assets/landing/js/vendor/jquery-1.12.4.min.js\";\n\t\tscript2.async = true;\n\t\tscript2.onload = () => this.scriptLoaded();\n\t\tdocument.body.appendChild(script2);\n\n\t\tconst script3 = document.createElement(\"script\");\n\t\tscript3.src = \"assets/landing/js/bootstrap.min.js\";\n\t\tscript3.async = true;\n\t\tscript3.onload = () => this.scriptLoaded();\n\t\tdocument.body.appendChild(script3);\n\n\t\tconst script4 = document.createElement(\"script\");\n\t\tscript4.src = \"assets/landing/js/popper.min.js\";\n\t\tscript4.async = true;\n\t\tscript4.onload = () => this.scriptLoaded();\n\t\tdocument.body.appendChild(script4);\n\n\t\tconst script5 = document.createElement(\"script\");\n\t\tscript5.src = \"assets/landing/js/imagesloaded.pkgd.min.js\";\n\t\tscript5.async = true;\n\t\tscript5.onload = () => this.scriptLoaded();\n\t\tdocument.body.appendChild(script5);\n\n\t\tconst script6 = document.createElement(\"script\");\n\t\tscript6.src = \"assets/landing/js/jquery.easing.min.js\";\n\t\tscript6.async = true;\n\t\tscript6.onload = () => this.scriptLoaded();\n\t\tdocument.body.appendChild(script6);\n\n\t\tconst script7 = document.createElement(\"script\");\n\t\tscript7.src = \"assets/landing/js/scrolling-nav.js\";\n\t\tscript7.async = true;\n\t\tscript7.onload = () => this.scriptLoaded();\n\t\tdocument.body.appendChild(script7);\n\n\t\tconst script8 = document.createElement(\"script\");\n\t\tscript8.src = \"assets/landing/js/slick.min.js\";\n\t\tscript8.async = true;\n\t\tscript8.onload = () => this.scriptLoaded();\n\t\tdocument.body.appendChild(script8);\n\n\t\tconst script9 = document.createElement(\"script\");\n\t\tscript9.src = \"assets/landing/js/main.js\";\n\t\tscript9.async = true;\n\t\tscript9.onload = () => this.scriptLoaded();\n\t\tdocument.body.appendChild(script9);\n\t}\n\n\tscriptLoaded() {\n\t\twindow.A.sort();\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\n\t\t\t\t{/* <!--====== HEADER ONE PART START ======--> */}\n\n\t\t\t\t<header className=\"header-area\">\n\n\t\t\t\t\t<div className=\"navbar-area navbar-one navbar-transparent\">\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col-lg-12\">\n\t\t\t\t\t\t\t\t\t<nav className=\"navbar navbar-expand-lg\">\n\t\t\t\t\t\t\t\t\t\t<a className=\"navbar-brand\" href=\"#\">\n\t\t\t\t\t\t\t\t\t\t\t<img style={{ maxWidth: '150px', height: '75px' }} src={require(\"assets/landing/images/logo.png\")} alt=\"Logo\"></img>\n\t\t\t\t\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarOne\" aria-controls=\"navbarOne\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"toggler-icon\"></span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"toggler-icon\"></span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"toggler-icon\"></span>\n\t\t\t\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"collapse navbar-collapse sub-menu-bar\" id=\"navbarOne\">\n\t\t\t\t\t\t\t\t\t\t\t<ul className=\"navbar-nav m-auto\">\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"nav-item active\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"page-scroll\" href=\"#home\">Home</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"page-scroll\" href=\"#about\">About</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"page-scroll\" href=\"#pricing\">Pricing</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"page-scroll\" href=\"#contact\">Contact</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"navbar-btn d-none d-sm-inline-block\">\n\t\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"light\" to={{ pathname: '/login' }}>Login</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* </Link><a className=\"light\" href=\"#\">Login</a></li> */}\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"home\" className=\"header-content-area d-flex align-items-center\">\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col-lg-12\">\n\t\t\t\t\t\t\t\t\t<div className=\"header-wrapper\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"header-content\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"header-title\">Assent 360</h3>\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"text\">Compliance Management System. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ornare leo tellus, ut semper erat accumsan nec. Etiam fermentum felis ut odio gravida tempus. Phasellus eu porttitor neque, porttitor laoreet neque. Mauris vitae turpis fringilla, imperdiet nulla eget, ullamcorper sapien. Curabitur ut metus suscipit, imperdiet justo ut, fringilla mauris. Proin dolor nulla, consectetur a dolor vitae, tempor tempor sem. Maecenas ornare tincidunt tincidun</p>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"header-btn rounded-buttons\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"main-btn rounded-one\" href=\"https://google.com\">Purchase Now</a>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"header-shape\">\n\t\t\t\t\t\t\t<img src={require(\"assets/landing/images/header-shape.svg\")} alt=\"shape\"></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\n\t\t\t\t{/* <!--====== HEADER ONE PART ENDS ======--> */}\n\n\t\t\t\t{/* <!--====== FEATRES PART START ======--> */}\n\n\t\t\t\t<section id=\"features\" className=\"features-area pt-60 pb-100\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t\t\t\t<div className=\"col-lg-4 col-md-7 col-sm-9\">\n\t\t\t\t\t\t\t\t<div className=\"single-features text-center mt-40\">\n\t\t\t\t\t\t\t\t\t<div className=\"features-icon\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"lni-school-compass\"></i>\n\t\t\t\t\t\t\t\t\t\t<img className=\"shape\" src={require(\"assets/landing/images/f-shape-1.svg\")} alt=\"Shape\"></img>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"features-content\">\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"features-title\"><a href=\"#\">Feature 1</a></h4>\n\t\t\t\t\t\t\t\t\t\t<p className=\"text\">Short description about the feature!</p>\n\t\t\t\t\t\t\t\t\t\t<div className=\"features-btn rounded-buttons\">\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"main-btn rounded-one\" href=\"#\">KNOW MORE</a>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-lg-4 col-md-7 col-sm-9\">\n\t\t\t\t\t\t\t\t<div className=\"single-features text-center mt-40\">\n\t\t\t\t\t\t\t\t\t<div className=\"features-icon\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"lni-construction\"></i>\n\t\t\t\t\t\t\t\t\t\t<img className=\"shape\" src={require(\"assets/landing/images/f-shape-1.svg\")} alt=\"Shape\"></img>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"features-content\">\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"features-title\"><a href=\"#\">Feature 1</a></h4>\n\t\t\t\t\t\t\t\t\t\t<p className=\"text\">Short description about the feature!</p>\n\t\t\t\t\t\t\t\t\t\t<div className=\"features-btn rounded-buttons\">\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"main-btn rounded-one\" href=\"#\">KNOW MORE</a>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-lg-4 col-md-7 col-sm-9\">\n\t\t\t\t\t\t\t\t<div className=\"single-features text-center mt-40\">\n\t\t\t\t\t\t\t\t\t<div className=\"features-icon\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"lni-cup\"></i>\n\t\t\t\t\t\t\t\t\t\t<img className=\"shape\" src={require(\"assets/landing/images/f-shape-1.svg\")} alt=\"Shape\"></img>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"features-content\">\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"features-title\"><a href=\"#\">Feature 1</a></h4>\n\t\t\t\t\t\t\t\t\t\t<p className=\"text\">Short description about the feature!</p>\n\t\t\t\t\t\t\t\t\t\t<div className=\"features-btn rounded-buttons\">\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"main-btn rounded-one\" href=\"#\">KNOW MORE</a>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t{/* <!--====== FEATRES PART ENDS ======--> */}\n\n\t\t\t\t{/* <!--====== ABOUT THREE PART START ======--> */}\n\n\t\t\t\t<section id=\"about\" className=\"about-area pt-70 pb-100\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<div className=\"about-feature mt-30\">\n\t\t\t\t\t\t\t\t\t<div className=\"about-feature-image\">\n\t\t\t\t\t\t\t\t\t\t<img src={require(\"assets/landing/images/about.png\")} alt=\"feature\"></img>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"about-feature-content\">\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"feature-title\">The best compliance management software in the world</h2>\n\t\t\t\t\t\t\t\t\t\t<p className=\"text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ornare leo tellus, ut semper erat accumsan nec. Etiam fermentum felis ut odio gravida tempus. Phasellus eu porttitor neque</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<div className=\"about-feature-items d-sm-flex mt-30\">\n\t\t\t\t\t\t\t\t\t<div className=\"feature-items-icon\">\n\t\t\t\t\t\t\t\t\t\t<img src={require(\"assets/landing/images/feature-icon-1.png\")} alt=\"Icon\"></img>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"feature-items-content media-body\">\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"items-title\">Feature 1</h5>\n\t\t\t\t\t\t\t\t\t\t<p className=\"text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ornare leo tellus, ut semper erat accumsan nec. Etiam fermentum felis ut odio gravida tempus. Phasellus eu porttitor neque</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"about-feature-items d-sm-flex mt-30\">\n\t\t\t\t\t\t\t\t\t<div className=\"feature-items-icon\">\n\t\t\t\t\t\t\t\t\t\t<img src={require(\"assets/landing/images/feature-icon-2.png\")} alt=\"Icon\"></img>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"feature-items-content media-body\">\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"items-title\">Feature 2</h5>\n\t\t\t\t\t\t\t\t\t\t<p className=\"text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ornare leo tellus, ut semper erat accumsan nec. Etiam fermentum felis ut odio gravida tempus. Phasellus eu porttitor neque</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"about-feature-items d-sm-flex mt-30\">\n\t\t\t\t\t\t\t\t\t<div className=\"feature-items-icon\">\n\t\t\t\t\t\t\t\t\t\t<img src={require(\"assets/landing/images/feature-icon-3.png\")} alt=\"Icon\"></img>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"feature-items-content media-body\">\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"items-title\">Feature 3</h5>\n\t\t\t\t\t\t\t\t\t\t<p className=\"text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ornare leo tellus, ut semper erat accumsan nec. Etiam fermentum felis ut odio gravida tempus. Phasellus eu porttitor neque</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"about-feature-items d-sm-flex mt-30\">\n\t\t\t\t\t\t\t\t\t<div className=\"feature-items-icon\">\n\t\t\t\t\t\t\t\t\t\t<img src={require(\"assets/landing/images/feature-icon-4.png\")} alt=\"Icon\"></img>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"feature-items-content media-body\">\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"items-title\">Feature 4</h5>\n\t\t\t\t\t\t\t\t\t\t<p className=\"text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ornare leo tellus, ut semper erat accumsan nec. Etiam fermentum felis ut odio gravida tempus. Phasellus eu porttitor neque</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t{/* <!--====== ABOUT THREE PART ENDS ======--> */}\n\n\t\t\t\t{/* <!--====== PRICING START ======--> */}\n\n\t\t\t\t<section id=\"pricing\" className=\"pricing-area pt-95 pb-100\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t\t\t\t<div className=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<div className=\"section-title text-center pb-20\">\n\t\t\t\t\t\t\t\t\t<h4 className=\"title\">Our Pricing Plan</h4>\n\t\t\t\t\t\t\t\t\t<p className=\"text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t\t\t\t<div className=\"col-lg-4 col-md-7 col-sm-9\">\n\t\t\t\t\t\t\t\t<div className=\"pricing mt-40\">\n\t\t\t\t\t\t\t\t\t<div className=\"pricing-baloon\">\n\t\t\t\t\t\t\t\t\t\t<img src={require(\"assets/landing/images/baloon.svg\")} alt=\"baloon\"></img>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"pricing-header\">\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"sub-title\">Basic</h5>\n\t\t\t\t\t\t\t\t\t\t<span className=\"price\">$ 4.99</span>\n\t\t\t\t\t\t\t\t\t\t<p className=\"year\">per month</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"pricing-list\">\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-check-mark-circle\"></i> Detail</li>\n\t\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-check-mark-circle\"></i> Detail</li>\n\t\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-check-mark-circle\"></i> Detail</li>\n\t\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-check-mark-circle\"></i> Detail</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"pricing-btn rounded-buttons text-center\">\n\t\t\t\t\t\t\t\t\t\t<a className=\"main-btn rounded-one\" href=\"#\">GET STARTED</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/* <div className=\"bottom-shape\">\n\t\t\t\t\t\t\t\t\t\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 350 112.35\"><defs><style>.color-2{fill:#0067f4;isolation:isolate;}.cls-1{opacity:0.1;}.cls-2{opacity:0.2;}.cls-3{opacity:0.4;}.cls-4{opacity:0.6;}</style></defs><title>bottom-part1</title><g><g data-name=\"Group 747\"><path data-name=\"Path 294\" className=\"cls-1 color-2\" d=\"M0,24.21c120-55.74,214.32,2.57,267,0S349.18,7.4,349.18,7.4V82.35H0Z\" transform=\"translate(0 0)\" /><path data-name=\"Path 297\" className=\"cls-2 color-2\" d=\"M350,34.21c-120-55.74-214.32,2.57-267,0S.82,17.4.82,17.4V92.35H350Z\" transform=\"translate(0 0)\" /><path data-name=\"Path 296\" className=\"cls-3 color-2\" d=\"M0,44.21c120-55.74,214.32,2.57,267,0S349.18,27.4,349.18,27.4v74.95H0Z\" transform=\"translate(0 0)\" /><path data-name=\"Path 295\" className=\"cls-4 color-2\" d=\"M349.17,54.21c-120-55.74-214.32,2.57-267,0S0,37.4,0,37.4v74.95H349.17Z\" transform=\"translate(0 0)\" /></g></g></svg>\n\t\t\t\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"col-lg-4 col-md-7 col-sm-9\">\n\t\t\t\t\t\t\t\t<div className=\"pricing mt-40\">\n\t\t\t\t\t\t\t\t\t<div className=\"pricing-baloon\">\n\t\t\t\t\t\t\t\t\t\t<img src={require(\"assets/landing/images/baloon.svg\")} alt=\"baloon\"></img>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"pricing-header\">\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"sub-title\">Pro</h5>\n\t\t\t\t\t\t\t\t\t\t<span className=\"price\">$ 7.99</span>\n\t\t\t\t\t\t\t\t\t\t<p className=\"year\">per month</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"pricing-list\">\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-check-mark-circle\"></i> Detail</li>\n\t\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-check-mark-circle\"></i> Detail</li>\n\t\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-check-mark-circle\"></i> Detail</li>\n\t\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-check-mark-circle\"></i> Detail</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"pricing-btn rounded-buttons text-center\">\n\t\t\t\t\t\t\t\t\t\t<a className=\"main-btn rounded-one\" href=\"#\">GET STARTED</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/* <div className=\"bottom-shape\">\n\t\t\t\t\t\t\t\t\t\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 350 112.35\"><defs><style>.color-2{fill:#0067f4;isolation:isolate;}.cls-1{opacity:0.1;}.cls-2{opacity:0.2;}.cls-3{opacity:0.4;}.cls-4{opacity:0.6;}</style></defs><title>bottom-part1</title><g><g data-name=\"Group 747\"><path data-name=\"Path 294\" className=\"cls-1 color-2\" d=\"M0,24.21c120-55.74,214.32,2.57,267,0S349.18,7.4,349.18,7.4V82.35H0Z\" transform=\"translate(0 0)\" /><path data-name=\"Path 297\" className=\"cls-2 color-2\" d=\"M350,34.21c-120-55.74-214.32,2.57-267,0S.82,17.4.82,17.4V92.35H350Z\" transform=\"translate(0 0)\" /><path data-name=\"Path 296\" className=\"cls-3 color-2\" d=\"M0,44.21c120-55.74,214.32,2.57,267,0S349.18,27.4,349.18,27.4v74.95H0Z\" transform=\"translate(0 0)\" /><path data-name=\"Path 295\" className=\"cls-4 color-2\" d=\"M349.17,54.21c-120-55.74-214.32,2.57-267,0S0,37.4,0,37.4v74.95H349.17Z\" transform=\"translate(0 0)\" /></g></g></svg>\n\t\t\t\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"col-lg-4 col-md-7 col-sm-9\">\n\t\t\t\t\t\t\t\t<div className=\"pricing mt-40\">\n\t\t\t\t\t\t\t\t\t<div className=\"pricing-baloon\">\n\t\t\t\t\t\t\t\t\t\t<img src={require(\"assets/landing/images/baloon.svg\")} alt=\"baloon\"></img>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"pricing-header\">\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"sub-title\">Enterprise</h5>\n\t\t\t\t\t\t\t\t\t\t<span className=\"price\">$ 9.99</span>\n\t\t\t\t\t\t\t\t\t\t<p className=\"year\">per month</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"pricing-list\">\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-check-mark-circle\"></i> Detail</li>\n\t\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-check-mark-circle\"></i> Detail</li>\n\t\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-check-mark-circle\"></i> Detail</li>\n\t\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-check-mark-circle\"></i> Detailt</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"pricing-btn rounded-buttons text-center\">\n\t\t\t\t\t\t\t\t\t\t<a className=\"main-btn rounded-one\" href=\"#\">GET STARTED</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/* <div className=\"bottom-shape\">\n\t\t\t\t\t\t\t\t\t\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 350 112.35\"><defs><style>.color-2{fill:#0067f4;isolation:isolate;}.cls-1{opacity:0.1;}.cls-2{opacity:0.2;}.cls-3{opacity:0.4;}.cls-4{opacity:0.6;}</style></defs><title>bottom-part1</title><g><g data-name=\"Group 747\"><path data-name=\"Path 294\" className=\"cls-1 color-2\" d=\"M0,24.21c120-55.74,214.32,2.57,267,0S349.18,7.4,349.18,7.4V82.35H0Z\" transform=\"translate(0 0)\" /><path data-name=\"Path 297\" className=\"cls-2 color-2\" d=\"M350,34.21c-120-55.74-214.32,2.57-267,0S.82,17.4.82,17.4V92.35H350Z\" transform=\"translate(0 0)\" /><path data-name=\"Path 296\" className=\"cls-3 color-2\" d=\"M0,44.21c120-55.74,214.32,2.57,267,0S349.18,27.4,349.18,27.4v74.95H0Z\" transform=\"translate(0 0)\" /><path data-name=\"Path 295\" className=\"cls-4 color-2\" d=\"M349.17,54.21c-120-55.74-214.32,2.57-267,0S0,37.4,0,37.4v74.95H349.17Z\" transform=\"translate(0 0)\" /></g></g></svg>\n\t\t\t\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t{/* <!--====== PRICING ENDS ======--> */}\n\n\t\t\t\t{/* <!--====== TESTIMONIAL PART START ======--> */}\n\n\t\t\t\t<section className=\"testimonial-area pt-95 pb-100\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t\t\t\t<div className=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<div className=\"section-title text-center pb-20\">\n\t\t\t\t\t\t\t\t\t<h4 className=\"title\">Testimonial</h4>\n\t\t\t\t\t\t\t\t\t<p className=\"text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ornare leo tellus, ut semper erat accumsan nec. Etiam fermentum felis ut odio gravida tempus. Phasellus eu porttitor neque,</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"row testimonial-active\">\n\t\t\t\t\t\t\t<div className=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<div className=\"single-testimonial mt-30\">\n\t\t\t\t\t\t\t\t\t<div className=\"testimonial-author d-sm-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"author-image\">\n\t\t\t\t\t\t\t\t\t\t\t<img src={require(\"assets/landing/images/author-1.jpg\")} alt=\"Author\"></img>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"author-name media-body\">\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"name\">Name 1</h6>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"sub-title\">Description 1</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"testimonial-text\">\n\t\t\t\t\t\t\t\t\t\t<p className=\"text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse porta diam magna, eget ornare nisl pellentesque a. Curabitur tincidunt sollicitudin lacus</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<div className=\"single-testimonial mt-30\">\n\t\t\t\t\t\t\t\t\t<div className=\"testimonial-author d-sm-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"author-image\">\n\t\t\t\t\t\t\t\t\t\t\t<img src={require(\"assets/landing/images/author-2.jpg\")} alt=\"Author\"></img>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"author-name media-body\">\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"name\">Name 2</h6>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"sub-title\">Description 2</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"testimonial-text\">\n\t\t\t\t\t\t\t\t\t\t<p className=\"text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse porta diam magna, eget ornare nisl pellentesque a. Curabitur tincidunt sollicitudin lacus</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<div className=\"single-testimonial mt-30\">\n\t\t\t\t\t\t\t\t\t<div className=\"testimonial-author d-sm-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"author-image\">\n\t\t\t\t\t\t\t\t\t\t\t<img src={require(\"assets/landing/images/author-3.jpg\")} alt=\"Author\"></img>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"author-name media-body\">\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"name\">Name 3</h6>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"sub-title\">Description 3</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"testimonial-text\">\n\t\t\t\t\t\t\t\t\t\t<p className=\"text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse porta diam magna, eget ornare nisl pellentesque a. Curabitur tincidunt sollicitudin lacus</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t{/* <!--====== TESTIMONIAL PART ENDS ======--> */}\n\n\t\t\t\t{/* <!--====== CONTACT PART START ======--> */}\n\n\t\t\t\t<section id=\"contact\" className=\"contact-area pt-95 pb-100\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t\t\t\t<div className=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<div className=\"section-title text-center pb-20\">\n\t\t\t\t\t\t\t\t\t<h4 className=\"title\">Get in touch</h4>\n\t\t\t\t\t\t\t\t\t<p className=\"text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse porta diam magna, eget ornare nisl pellentesque a.</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<div className=\"contact mt-30\">\n\t\t\t\t\t\t\t\t\t<h4 className=\"contact-title\">We love to hear from you. Let's talk?</h4>\n\t\t\t\t\t\t\t\t\t<p className=\"text\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ullam unde repellendus delectus facilis quia consequatur maxime perferendis! Sequi, modi consequatur. <br></br> <br></br> Stop wasting time and money designing and managing a website that doesn’t get results. Happiness guaranteed!</p>\n\t\t\t\t\t\t\t\t\t<ul className=\"contact-info\">\n\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-money-location\"></i> 1234 Audin, USD</li>\n\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-phone-handset\"></i> 009-215-5596</li>\n\t\t\t\t\t\t\t\t\t\t<li><i className=\"lni-envelope\"></i> hello@assent360.com</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<div className=\"contact-form form-style-one mt-15\">\n\t\t\t\t\t\t\t\t\t<form id=\"contact-form\" action=\"assets/landing/contact.php\" method=\"post\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"form-input mt-15\">\n\t\t\t\t\t\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-items default\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input name=\"name\" type=\"text\" placeholder=\"Name\"></input>\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"lni-user\"></i>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"form-input mt-15\">\n\t\t\t\t\t\t\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-items default\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input name=\"email\" type=\"text\" placeholder=\"Email\"></input>\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"lni-envelope\"></i>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"form-input mt-15\">\n\t\t\t\t\t\t\t\t\t\t\t<label>Message</label>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-items default\">\n\t\t\t\t\t\t\t\t\t\t\t\t<textarea name=\"message\" placeholder=\"Message\"></textarea>\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"lni-pencil-alt\"></i>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<p className=\"form-message\"></p>\n\t\t\t\t\t\t\t\t\t\t<div className=\"form-input standard-buttons mt-20\">\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"main-btn standard-two\" type=\"submit\">Submit</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t{/* <!--====== CONTACT PART ENDS ======--> */}\n\n\t\t\t\t{/* <!--====== FOOTER PART START ======--> */}\n\n\t\t\t\t<footer id=\"footer\" className=\"footer-area\">\n\t\t\t\t\t<div className=\"footer-widget pt-70 pb-100\">\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col-lg-12\">\n\t\t\t\t\t\t\t\t\t<div className=\"footer-logo-support d-md-flex align-items-end justify-content-between\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"footer-logo d-flex align-items-end pt-30\">\n\t\t\t\t\t\t\t\t\t\t\t<a href=\"index.html\"><img src={require(\"assets/landing/images/footer-logo.png\")} alt=\"Logo\"></img></a>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col-xl-6 col-lg-4 col-sm-12\">\n\t\t\t\t\t\t\t\t\t<div className=\"footer-support \">\n\t\t\t\t\t\t\t\t\t\t<span className=\"number\">09-215-5596</span>\n\t\t\t\t\t\t\t\t\t\t<span className=\"mail\">hello@assent360.com</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<ul className=\"social\">\n\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"lni-facebook-filled\"></i></a></li>\n\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"lni-twitter-original\"></i></a></li>\n\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"lni-instagram-original\"></i></a></li>\n\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"lni-linkedin-original\"></i></a></li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-xl-2 col-lg-2 col-sm-4\">\n\t\t\t\t\t\t\t\t\t<div className=\"footer-link\">\n\t\t\t\t\t\t\t\t\t\t<h6 className=\"footer-title\">Company</h6>\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\">About</a></li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-xl-2 col-lg-3 col-sm-4\">\n\t\t\t\t\t\t\t\t\t<div className=\"footer-link\">\n\t\t\t\t\t\t\t\t\t\t<h6 className=\"footer-title\">Pricing</h6>\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\">Pricing</a></li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-xl-2 col-lg-3 col-sm-4\">\n\t\t\t\t\t\t\t\t\t<div className=\"footer-link\">\n\t\t\t\t\t\t\t\t\t\t<h6 className=\"footer-title\">Help & Support</h6>\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\">Terms & Conditions</a></li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"footer-copyright\">\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col-lg-12\">\n\t\t\t\t\t\t\t\t\t<div className=\"copyright text-center\">\n\t\t\t\t\t\t\t\t\t\t<p className=\"text\">Copyrights | <a rel=\"nofollow\" href=\"http://alinon.online\">Alinon</a></p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\n\t\t\t\t{/* <!--====== FOOTER PART ENDS ======--> */}\n\n\t\t\t\t{/* <!--====== BACK TOP TOP PART START ======--> */}\n\n\t\t\t\t<a href=\"#\" className=\"back-to-top\"><i className=\"lni-chevron-up\"></i></a>\n\n\t\t\t\t{/* <!--====== BACK TOP TOP PART ENDS ======--> */}\n\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Landing;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/constants.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/routes.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerNavbar.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerFooter.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerSidebar.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/UserNavebar.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/UserSidebar.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Login/AuthNavbar.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Login/AuthFooter.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/Bars/Footer.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/Bars/Navbar.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/Bars/Sidebar.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/UserFooter.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Shared/ViewStandard.js",["267","268","269"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\n\n// reactstrap components\nimport {\n\tButton,\n\tCard,\n\tCardHeader,\n\tTable,\n\tContainer,\n\tRow,\n\tCol,\n\tSpinner,\n\tCardBody\n} from \"reactstrap\";\n\nimport EmptyHeader from \"components/Manager/Headers/EmptyHeader.js\";\n// import User from \"components/User/User\";\n// import Roles from \"./Popups/Roles.js\"\n\nclass ViewStandard extends React.Component {\n\n\tstandardId = this.props.match.params.standardId;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tstandard: null,\n\t\t\tarticles: [],\n\t\t\tloading: true\n\t\t};\n\t}\n\n\thandleClick = () => {\n\n\t}\n\ttoggleModal = state => {\n\t\tconsole.log(state);\n\t\tthis.setState({\n\t\t\t[state]: !this.state[state]\n\t\t});\n\t};\n\n\tcomponentDidMount() {\n\t\t//Check if auth token in valid\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\n\t\tlet type = reactLocalStorage.get('userType', true);\n\n\t\tif (type != 3) {\n      \n\t\t\tif (clientId != null && userId != null) {\n\t\t\t\tconst data = {\n\t\t\t\t\t\"standardId\": this.standardId,\n\t\t\t\t\t\"clientId\": clientId,\n\t\n\t\t\t\t}\n\t\t\t\taxios.post(constants[\"apiUrl\"] + '/standards/get', data)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tlet data = res.data;\n\t\t\t\t\t\t//console.warn(JSON.stringify(data));\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tarticles: data.articles,\n\t\t\t\t\t\t\tstandard: data.standard,\n\t\t\t\t\t\t\tloading: false\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//TODO: go back to login\n\t\t\t}\n\t\t\t\n\n\t\t} else {\n\t\t\tthis.props.history.push(\"/login\" + this.articleId);\n\t\t}\n\n\t\t//console.warn('user ' + userId + 'client ' + clientId);\n\n\t\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<EmptyHeader />\n\t\t\t\t{/* Page content */}\n\t\t\t\t<Container className=\"mt--7\" fluid>\n\t\t\t\t\t<Row className=\"mt-5 justify-content-center\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div style={{ borderColor: 'black' }} className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\" style={{ marginBottom: 10 }}>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h1 className=\"mb-0\">{this.state.standard == null ? \"\" : this.state.standard.name}</h1>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0\">{this.state.standard == null ? \"\" : this.state.standard.description}</h4>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<Row className=\"mt-5\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">{\"Standard \" + this.standardId}</h3>\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div style={{ borderColor: 'black' }} className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\">\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">CheckList Count</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Assigned To</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Due Date</th>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Standards</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Progress</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.articles.map(article => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{article.name}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{article.checklistCount}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{article.assignedTo == null ? \"-\" : article.assignedTo.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>-</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{article.standard.id}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{article.progress ? Number.isInteger(article.progress) ? article.progress + '%' : article.progress.toFixed(2) + '%' : '-' }\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default ViewStandard;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/UserIndex.js",["270","271","272","273"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\nimport { Link } from \"react-router-dom\";\n\n\nimport {\n\tButton,\n\tCard,\n\tCardHeader,\n\tCardBody,\n\tTable,\n\tContainer,\n\tRow,\n\tCol,\n\tSpinner\n} from \"reactstrap\";\n\nimport Header from \"components/User/Headers/DashboardHeader.js\";\n\nclass UserIndex extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpendArticles: 0,\n\t\t\tcompArticles: 0,\n\t\t\tassignedDocs: 0,\n\t\t\tarticles: [],\n\t\t\tdocuments: [],\n\t\t\tassignedWorkflows: [],\n\t\t\tloading: true\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t//Check if auth token in valid\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\t\tlet type = reactLocalStorage.get('userType', true);\n\n\t\tif (type == 1) {\n\t\t\tif (clientId != null && userId != null) {\n\t\t\t\tconst data = {\n\t\t\t\t\t\"clientId\": clientId,\n\t\t\t\t\t\"userId\": userId\n\t\t\t\t}\n\t\t\t\taxios.post(constants[\"apiUrl\"] + '/dashboard/get', data)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tlet data = res.data;\n\t\t\t\t\t\t//console.warn(JSON.stringify(data));\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tpendArticles: data.pendingArticles,\n\t\t\t\t\t\t\tcompArticles: data.completedArticles,\n\t\t\t\t\t\t\tassignedDocs: data.assignedDocuments,\n\t\t\t\t\t\t\tarticles: data.assignedArticles,\n\t\t\t\t\t\t\tdocuments: data.documents,\n\t\t\t\t\t\t\tassignedWorkflows: data.assignedWorkflows,\n\t\t\t\t\t\t\tloading: false\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.props.history.push(\"/login\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.props.history.push(\"/login\");\n\t\t}\n\t}\n\n\tacceptDocument(index) {\n\t\tthis.state.documents[index].accepted = true;\n\t\tthis.forceUpdate();\n\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\n\t\tif (clientId != null && userId != null) {\n\t\t\tlet data = new FormData();\n\n\t\t\tdata.append(\"clientId\", clientId);\n\t\t\tdata.append(\"userId\", userId);\n\t\t\tdata.append(\"documentId\", this.state.documents[index].id);\n\n\t\t\taxios.post(constants[\"apiUrl\"] + '/documents/accept', data)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tlet data = res.data;\n\t\t\t\t\tconsole.warn(JSON.stringify(data));\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Header\n\t\t\t\t\tpendArticles={this.state.pendArticles}\n\t\t\t\t\tcompArticles={this.state.compArticles}\n\t\t\t\t\tassignedDocs={this.state.assignedDocs}\n\t\t\t\t/>\n\t\t\t\t{/* Page content */}\n\t\t\t\t<Container className=\"mt--7\" fluid>\n\t\t\t\t\t<Row className=\"mt-5\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"7\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Assigned Articles</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/user/audit',\n\t\t\t\t\t\t\t\t\t\t\t}} style={{ paddingRight: 5 }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tSee All\n                        \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div style={{ borderColor: 'black' }} className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\" responsive>\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Assigned By</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Due By</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Standard</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Progress</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.articles.map(a => {\n\t\t\t\t\t\t\t\t\t\t\t\t{ this.state.pathname = '/user/view/article/' + a.id }\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{a.name}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{a.assignedBy.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>-</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{a.standard.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{Number.isInteger(a.progress) ? a.progress : a.progress.toFixed(2)}%\n                      \t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: this.state.pathname,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"Food Quality 1.3\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tView\n                               \t\t\t\t\t\t\t\t \t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xl=\"5\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Assigned Documents</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/user/docs',\n\t\t\t\t\t\t\t\t\t\t\t}} style={{ paddingRight: 5 }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tSee All\n                        \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div style={{ borderColor: 'black' }} className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\" responsive>\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">File Size</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Assigned By</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\" scope=\"col\">Accepted</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\" scope=\"col\">File</th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.documents.map((doc, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{doc.name}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{doc.size} KB</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th >{doc.assignedBy ? doc.assignedBy : '-'}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{doc.accepted ? <i class=\"fas fa-check\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: <Button color=\"success\" href=\"#pablo\" onClick={() => this.acceptDocument(index)} size=\"sm\"> Accept </Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/user/view/document/' + doc.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tView\n                             \t\t\t\t\t\t\t\t\t </Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"mt-5\">\n\t\t\t\t\t\t<Col xl>\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Assigned Workflows</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/user/workflow',\n\t\t\t\t\t\t\t\t\t\t\t}} style={{ paddingRight: 5 }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tSee All\n                        \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div style={{ borderColor: 'black' }} className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\" responsive>\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Assigned By</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Due By</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Standard</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Progress</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.assignedWorkflows.map(w => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{w.name}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{w.assignedBy ? w.assignedBy.name : \"-\"}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>-</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{Number.isInteger(w.progress) ? w.progress : w.progress.toFixed(2)}%\n                      \t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: 'user/view/document/1'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tView\n                              \t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default UserIndex;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerWorkflows.js",["274","275","276","277","278","279","280","281","282","283","284","285","286"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\nimport routes from \"routes.js\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Table,\n  Container,\n  Row,\n  Col,\n  Modal,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Spinner,\n  UncontrolledDropdown\n} from \"reactstrap\";\n\nimport EmptyHeader from \"components/Manager/Headers/EmptyHeader.js\";\n\nclass ManagerWorkflows extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      addModal: false,\n      assignModal: false,\n      name: null,\n      desc: null,\n      workflows: [],\n      users: [],\n      index: null,\n      username: 'Select User',\n      removeConfirm: false,\n      assignId: null,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    //Check if auth token in valid\n    let userId = reactLocalStorage.get('userId', true);\n    let clientId = reactLocalStorage.get('clientId', true);\n\n    let type = reactLocalStorage.get('userType', true);\n    if (type == 2) {\n      if (clientId != null && userId != null) {\n        const data = {\n          \"clientId\": clientId,\n        }\n        axios.post(constants[\"apiUrl\"] + '/workflows/getAll', data)\n          .then((res) => {\n            let data = res.data;\n            console.warn(JSON.stringify(data));\n            this.setState({\n              workflows: data.workflows,\n              loading: false\n            })\n          })\n          .catch((error) => {\n            console.warn(JSON.stringify(error));\n          });\n  \n      } else {\n        //TODO: go back to login\n      }\n\t\t\n\n\t\t} else {\n\t\tthis.props.history.push(\"/login\");\n\t\t}\n\n    \n\n    \n  }\n\n  openAssignModal = (id) => {\n    this.setState({\n      assignModal: true,\n      index: id\n    });\n\n    let clientId = reactLocalStorage.get('clientId', true);\n\n    //console.warn('user ' + userId + 'client ' + clientId);\n\n    if (clientId != null) {\n      const data = {\n        \"clientId\": clientId,\n      }\n      axios.post(constants[\"apiUrl\"] + '/user/get', data)\n        .then((res) => {\n          let data = res.data;\n          console.warn(JSON.stringify(data));\n          this.setState({\n            users: data.users,\n          })\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n\n\n    }\n  }\n\n  closeAssignModal = () => {\n    this.setState({\n      assignModal: false\n    })\n  }\n\n  handleSelect = (username, userId) => {\n    this.setState({\n      username: username,\n      assignId: userId\n    })\n\n  }\n\n  handleAssign = () => {\n\n    console.warn(\"This is response\")\n    console.warn(this.state.assignId)\n    if (this.state.assignId != null) {\n      const data = {\n        \"workflowId\": this.state.index,\n        \"userId\": this.state.assignId,\n      }\n\n      axios.post(constants[\"apiUrl\"] + '/workflows/assign', data)\n        .then((res) => {\n          let data = res.data;\n          \n\n          console.warn(JSON.stringify(data));\n          if (data.done == '1') {\n            this.closeAssignModal();\n            let index = this.state.workflows.findIndex( element => element.id == this.state.index);\n            if( index >= 0){\n              let w = this.state.workflows;\n              w[index] = data.workflow;\n              this.setState({\n                workflows: w\n              })\n            }\n            \n            this.forceUpdate()\n          }\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n    }\n  }\n\n\n\n  openAddModal = () => {\n    this.setState({\n      addModal: true\n    });\n  }\n\n  closeAddModal = () => {\n    this.setState({\n      addModal: false,\n      name: null,\n      desc: null\n    });\n\n  }\n\n  handleName = (event) => {\n    this.setState({\n      name: event.target.value\n    })\n  }\n\n  handleDesc = (event) => {\n    this.setState({\n      desc: event.target.value\n    })\n  }\n\n  handleAdd = () => {\n\n    console.warn(this.state.desc)\n\n    if (this.state.desc != null && this.state.name != null) {\n      let clientId = reactLocalStorage.get('clientId', true);\n      const data = {\n        \"clientId\": clientId,\n        \"name\": this.state.name,\n        \"description\": this.state.desc\n      }\n      axios.post(constants[\"apiUrl\"] + '/workflows/addWorkflow', data)\n        .then((res) => {\n          let data = res.data;\n          const tempworkflow = {\n            \"name\": data.workflow.name,\n            \"client_id\": data.workflow.client_id,\n            \"created_at\": data.workflow.created_at,\n            \"description\": data.workflow.description,\n            \"id\": data.workflow.id,\n            \"updated_at\": data.workflow.updated_at,\n            \"user_id\": data.workflow.user_id,\n            \"progress\": 0\n          }\n          console.warn((data));\n          let temp = this.state.workflows;\n          temp.push(tempworkflow)\n          this.setState({\n            workflows : temp,\n          })\n\n          this.forceUpdate()\n          this.closeAddModal()\n\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n    }\n\n  }\n\n  removeAssign = (workflowId, userId, id) => {\n    let clientId = reactLocalStorage.get('clientId', true);\n    const data = {\n      \"workflowId\": workflowId,\n      \"userId\": userId\n    }\n    axios.post(constants[\"apiUrl\"] + '/workflows/removeAssignment', data)\n      .then((res) => {\n        let data = res.data;\n        console.warn(JSON.stringify(data));\n        let index = this.state.workflows.findIndex( element => element.id == workflowId);\n            if( index >= 0){\n              let w = this.state.workflows;\n              w[index].user = null\n              w[index].user_id = null\n              this.setState({\n                workflows: w\n              })\n              console.warn(w)\n            }\n            \n            this.forceUpdate()\n      })\n      .catch((error) => {\n        console.warn(JSON.stringify(error));\n      });\n  }\n\n  removeWorkflow = (workflowId) => {\n    const data = {\n      \"workflowId\": workflowId,\n    }\n    axios.post(constants[\"apiUrl\"] + '/workflows/removeWorkflow', data)\n      .then((res) => {\n        let data = res.data;\n        console.warn(JSON.stringify(data));\n        let temp = this.state.workflows\n        let filter = temp.filter(workflow => workflow.id != workflowId)\n        console.warn(filter)\n        this.setState({\n          workflows: filter\n        })\n\n        this.forceUpdate()\n      })\n      .catch((error) => {\n        console.warn(JSON.stringify(error));\n      });\n  }\n\n\n  render() {\n    return (\n      <>\n        <EmptyHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Workflows</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"\"\n                        onClick={() => this.openAddModal()}\n                        size=\"sm\"\n                      >\n                        Add Workflow\n                      </Button>\n                      <Modal\n                        className=\"modal-dialog-centered\"\n                        isOpen={this.state.addModal}\n                        defaultValue={this.state.addModal}\n                        toggle={() => this.closeAddModal()}\n                      >\n                        <div className=\"modal-header\">\n                          <h2 className=\"modal-title\" id=\"assignModelLabel\">\n\n                          </h2>\n                          <button\n                            aria-label=\"Close\"\n                            className=\"close\"\n                            data-dismiss=\"modal\"\n                            type=\"button\"\n                            onClick={() => this.closeAddModal()}\n                          >\n                            <span aria-hidden={true}>×</span>\n                          </button>\n                        </div>\n                        <div className=\"modal-body\">\n                          <form>\n                            <div className=\"form-group\">\n                              <label for=\"recipient-name\" defaultValue={this.state.name} class=\"col-form-label\" >Name:</label>\n                              <input type=\"text\" class=\"form-control\" id=\"recipient-name\" onChange={this.handleName}></input>\n                            </div>\n                            <div class=\"form-group\">\n                              <label for=\"message-text\" class=\"col-form-label\" defaultValue={this.state.desc}>About:</label>\n                              <textarea class=\"form-control\" id=\"message-text\" id=\"message-text\" onChange={this.handleDesc}></textarea>\n                            </div>\n                          </form>\n                        </div>\n                        <div className=\"modal-footer\">\n                          <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeAddModal()}>\n                            Cancel\n                                          </Button>\n                          <Button color=\"success\" type=\"button\" onClick={() => this.handleAdd()}>\n                            Add\n                                          </Button>\n                        </div>\n                      </Modal>\n                    </div>\n                  </Row>\n                </CardHeader>\n                {this.state.loading ?\n                  <CardBody>\n                    <div style={{ borderColor: 'black' }} className=\"text-center\">\n                      <Spinner st color=\"primary\" />\n                    </div>\n                  </CardBody>\n                  :\n                  <Table className=\"align-items-center table-flush\" responsive>\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Assigned To</th>\n                        <th scope=\"col\">Due Date</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Progress</th>\n                        <th scope=\"col\"></th>\n                        <th scope=\"col\"></th>\n                        <th scope=\"col\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.workflows.map((workflow, index) => {\n                        return (\n                          <tr>\n                            <th scope=\"row\">\n                              {workflow.name}\n                            </th>\n                            <td>\n                              {workflow.user_id == null ? \"-\" : workflow.user.name}\n                            </td>\n                            <td>\n                              -\n                          </td>\n                            <td>\n                              {workflow.description}\n                            </td>\n                            <td>\n                              <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                              {Number.isInteger(workflow.progress) ? workflow.progress : workflow.progress.toFixed(2)}%\n                          </td>\n                            <td>\n                              <Link to={{\n                                pathname: '/manager/view/workflow/' + workflow.id,\n                                state: {\n                                  name: \"Food Quality 1.3\"\n                                }\n                              }}>\n                                <Button color=\"primary\" size=\"sm\">\n                                  View\n                                  </Button>\n                              </Link>\n                            </td>\n                            <td>\n                              {workflow.user_id == null ?\n\n                                <Button color=\"success\" onClick={() => this.openAssignModal(workflow.id)} size=\"sm\">\n                                  Assign\n                            </Button>\n                                :\n                                <Button color=\"danger\" onClick={() => this.removeAssign(workflow.id, workflow.user.id, index)} size=\"sm\">\n                                  Unassign\n                            </Button>}\n\n                            </td>\n                            <td>\n                            <td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.removeWorkflow(workflow.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span color=\"danger\" aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n                            </td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                    <Modal\n                      className=\"modal-dialog-centered\"\n                      isOpen={this.state.assignModal}\n                      defaultValue={this.state.index}\n                      toggle={() => this.closeAssignModal()}\n                    >\n                      <div className=\"modal-header\">\n                        <h2 className=\"modal-title\" id=\"assignModelLabel\">\n                          Workflow {this.state.index}\n                        </h2>\n                        <button\n                          aria-label=\"Close\"\n                          className=\"close\"\n                          data-dismiss=\"modal\"\n                          type=\"button\"\n                          onClick={() => this.closeAssignModal()}\n                        >\n                          <span aria-hidden={true}>×</span>\n                        </button>\n                      </div>\n                      <div className=\"modal-body\">\n                        <Row className=\"justify-content-md-center\">\n                          <Col xl=\"auto\">\n                            {this.state.users != null ?\n                              <UncontrolledDropdown>\n                                <DropdownToggle caret>\n                                  {this.state.username}\n                                </DropdownToggle>\n                                <DropdownMenu container=\"body\">\n                                  {this.state.users.map((user, index) => {\n                                    return (\n                                      <DropdownItem onClick={() => this.handleSelect(user.name, user.id)} key={index}>\n                                        {user.name}\n                                      </DropdownItem>\n                                    )\n                                  })}\n                                </DropdownMenu>\n                              </UncontrolledDropdown>\n\n                              :\n                              <div>Loading...</div>\n                            }\n                          </Col>\n                        </Row>\n                      </div>\n                      <div className=\"modal-footer\">\n                        <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeAssignModal()}>\n                          Cancel\n                                    </Button>\n                        <Button color=\"success\" type=\"button\" onClick={() => this.handleAssign()}>\n                          Assign\n                                    </Button>\n                      </div>\n                    </Modal>\n                  </Table>\n                }\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default ManagerWorkflows;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerStandards.js",["287","288"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Table,\n  Container,\n  Row,\n  Col,\n  Spinner\n} from \"reactstrap\";\n\nimport EmptyHeader from \"components/Manager/Headers/EmptyHeader.js\";\n\nclass ManagerStandards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      standards: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    //Check if auth token in valid\n    let userId = reactLocalStorage.get('userId', true);\n    let clientId = reactLocalStorage.get('clientId', true);\n\n    let type = reactLocalStorage.get('userType', true);\n\n\t\tif (type == 2) {\n      if (clientId != null && userId != null) {\n        const data = {\n          \"clientId\": clientId,\n          \"userId\": userId\n        }\n        axios.post(constants[\"apiUrl\"] + '/standards/getAll', data)\n          .then((res) => {\n            let data = res.data;\n            console.warn(JSON.stringify(data));\n            this.setState({\n              standards: data.standards,\n              loading: false\n            })\n          })\n          .catch((error) => {\n            console.warn(JSON.stringify(error));\n          });\n      } else {\n        //TODO: go back to login\n      }\n\t\t\n\n\t\t} else {\n\t\tthis.props.history.push(\"/login\");\n\t\t}\n    //console.warn('user ' + userId + 'client ' + clientId);\n\n   \n  }\n\n  render() {\n    return (\n      <>\n        <EmptyHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row className=\"mt-5\">\n            <Col xl>\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Current Standards</h3>\n                    </div>\n                  </Row>\n                </CardHeader>\n                {this.state.loading ?\n                  <CardBody>\n                    <div style={{ borderColor: 'black' }} className=\"text-center\">\n                      <Spinner st color=\"primary\" />\n                    </div>\n                  </CardBody>\n                  :\n                  <Table className=\"align-items-center table-flush\" responsive>\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Article Count</th>\n                        <th scope=\"col\">Details</th>\n                        <th scope=\"col\">Progress</th>\n                        <th scope=\"col\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.standards.map(standard => {\n                        this.state.pathname = '/manager/view/standard/' + standard.id\n                        return (\n                          <tr>\n                            <th scope=\"row\">\n                              {standard.name}\n                            </th>\n                            <td>\n                              {standard.articleCount}\n                            </td>\n                            <td style={{ maxWidth: 150 }}>\n                              <text style={{ whiteSpace: 'pre-wrap', overflowWrap: 'break-word' }}>\n                                {standard.description}\n                              </text>\n                            </td>\n                            <td>\n                              <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                              {Number.isInteger(standard.progress) ? standard.progress : standard.progress.toFixed(2)}%\n                          </td>\n                            <td>\n                              <Link to={{\n                                pathname: this.state.pathname,\n                                state: {\n                                  name: \"Food Quality 1.3\"\n                                }\n                              }}>\n                                <Button\n                                  color=\"primary\"\n                                  size=\"sm\"\n                                >\n                                  View\n                                </Button>\n                              </Link>\n                            </td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </Table>\n                }\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default ManagerStandards;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerSubscriptions.js",["289","290","291"],"/*! Developed by Alinon */\nimport React from \"react\";\n\n\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Table,\n  Container,\n  Row,\n  Col,\n  Spinner\n} from \"reactstrap\";\n\nimport EmptyHeader from \"components/Manager/Headers/EmptyHeader.js\";\n\nclass ManagerSubscriptions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subscriptions: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    //Check if auth token in valid\n    let userId = reactLocalStorage.get('userId', true);\n    let clientId = reactLocalStorage.get('clientId', true);\n\n    //console.warn('user ' + userId + 'client ' + clientId);\n\n    let type = reactLocalStorage.get('userType', true);\n\n\t\tif (type == 2) {\n      \n      if (clientId != null && userId != null) {\n        const data = {\n          \"clientId\": clientId\n        }\n        axios.post(constants[\"apiUrl\"] + '/subscriptions/get', data)\n          .then((res) => {\n            let data = res.data;\n            console.warn(JSON.stringify(data));\n            this.setState({\n              subscriptions: data.subscriptions,\n              loading: false\n            })\n          })\n          .catch((error) => {\n            console.warn(JSON.stringify(error));\n          });\n\n      } else {\n        //TODO: go back to login\n      }\n\t\t\n\n\t\t} else {\n\t\tthis.props.history.push(\"/login\");\n\t\t}\n\n  }\n  render() {\n    return (\n      <>\n        <EmptyHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Subscriptions</h3>\n                    </div>\n                  </Row>\n                </CardHeader>\n                {this.state.loading ?\n                  <CardBody>\n                    <div style={{ borderColor: 'black' }} className=\"text-center\">\n                      <Spinner st color=\"primary\" />\n                    </div>\n                  </CardBody>\n                  :\n                  <Table className=\"align-items-center table-flush\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Subscribed On</th>\n                        <th scope=\"col\">Version</th>\n                        <th scope=\"col\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.subscriptions.map(subs => {\n                        return (\n                          <tr scope=\"row\">\n                            <th>{subs.standard.name}</th>\n                            <td>{subs.notes}</td>\n                            <td>{subs.standard.version}</td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </Table>\n                }\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default ManagerSubscriptions;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerProfile.js",["292"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport axios from 'axios';\nimport { constants } from '../../constants';\nimport { reactLocalStorage } from 'reactjs-localstorage';\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Col,\n  Button,\n  Modal,\n  Spinner\n} from \"reactstrap\";\n// core components\n\nimport Header from \"components/Manager/Headers/ProfileHeader.js\";\n\nclass ManagerProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      userModal: false,\n      loading: true,\n      username: '',\n      password: '',\n      email: '',\n      about: '',\n    }\n  }\n\n  componentDidMount() {\n    let userId = reactLocalStorage.get('userId', true);\n\n    let type = reactLocalStorage.get('userType', true);\n\n\t\tif (type == 2) {\n      if (userId != null) {\n        const data = {\n          \"userId\": userId\n        }\n        axios.post(constants[\"apiUrl\"] + '/user/getUser', data)\n          .then((res) => {\n            let data = res.data;\n            this.setState({\n              user: data.user,\n              loading: false\n            })\n          })\n          .catch((error) => {\n            console.warn(JSON.stringify(error));\n          });\n      } else {\n        //TODO: go back to login\n      }\n\t\t\n\n\t\t} else {\n\t\tthis.props.history.push(\"/login\");\n\t\t}\n    \n  }\n  toggleModal = state => {\n    this.setState({\n      [state]: !this.state[state],\n      username: this.state.user.name,\n      email: this.state.user.email,\n      about: this.state.user.about,\n    });\n    console.log(this.state.user)\n  };\n\n  handlePassword = (event) => {\n    this.setState({\n      password: event.target.value\n    })\n  }\n\n  handleUserEmail = (event) => {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handleUserName = (event) => {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  handleAbout = (event) => {\n    this.setState({\n      about: event.target.value\n    });\n  }\n\n  handleEditProfile = () => {\n    let userId = reactLocalStorage.get('userId', true);\n    let clientId = reactLocalStorage.get('clientId', true);\n\n    if (clientId != null && userId != null) {\n      let data;\n      if (this.state.password === '') {\n        data = {\n          \"about\": \"\" + this.state.about,\n          \"name\": \"\" + this.state.username,\n          \"userId\": \"\" + userId\n        }\n      }\n      else {\n        data = {\n          \"about\": \"\" + this.state.about,\n          \"name\": \"\" + this.state.username,\n          \"password\": \"\" + this.state.password,\n          \"userId\": \"\" + userId\n        }\n      }\n\n      axios.post(constants[\"apiUrl\"] + '/user/update', data)\n        .then((res) => {\n          let data = res.data;\n          console.log(JSON.stringify(data));\n          this.setState({\n            username: '',\n            password: '',\n            email: '',\n            about: '',\n            user: data.user\n          })\n          this.toggleModal(\"userModal\");\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row className=\"justify-content-center\">\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"5\">\n              <Card className=\"card-profile shadow\">\n                {this.state.loading ?\n                  <CardBody>\n                    <div style={{ borderColor: 'black' }} className=\"text-center\">\n                      <Spinner st color=\"primary\" />\n                    </div>\n                  </CardBody>\n                  :\n                  <>\n                    <Row className=\"justify-content-center\">\n                      <Col className=\"order-lg-2\" lg=\"3\">\n                        <div className=\"card-profile-image\">\n                          <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                            {this.state.user.profile_image === null ?\n                              <img\n                                alt=\"...\"\n                                className=\"rounded-circle\"\n                                src={require(\"assets/img/default/defaultProfile.png\")}\n                              />\n                              :\n                              <img\n                                alt=\"...\"\n                                className=\"rounded-circle\"\n                                src={require(\"assets/img/default/defaultProfile.jpg\")}\n                              />\n                            }\n                          </a>\n                        </div>\n                      </Col>\n                    </Row>\n                    <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                    </CardHeader>\n                    <CardBody className=\"pt-0 pt-md-4\">\n                      <Row>\n                        <div className=\"col\">\n                          <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                            <div>\n                              <span className=\"heading\"></span>\n                              <span className=\"description\"></span>\n                            </div>\n                            <div>\n                              <span className=\"heading\"></span>\n                              <span className=\"description\"></span>\n                            </div>\n                            <div>\n                              <span className=\"heading\"></span>\n                              <span className=\"description\"></span>\n                            </div>\n                          </div>\n                        </div>\n                      </Row>\n                      <div className=\"text-center\">\n                        <h1>\n                          {this.state.user.name}\n                        </h1>\n                        <div className=\"h5 font-weight-300\">\n                          <i className=\"ni location_pin mr-2\" />\n                          {this.state.user.email}\n                        </div>\n                        <div className=\"h5 mt-5\">\n                          <i className=\"ni business_briefcase-24 mr-2\"></i>\n                          {this.state.user.about}\n                        </div>\n                        <div className=\"\">\n                          <i className=\"ni business_briefcase-24 mr-2\" />\n                          <span class=\"badge badge-primary\">Manager</span>\n\n                          <span class=\"badge badge-primary\">Doctor</span>\n\n                          <span class=\"badge badge-primary\">HealthExpert</span>\n                        </div>\n                        <hr className=\"my-4\" />\n                        <Button color=\"primary\" onClick={() => this.toggleModal(\"userModal\")} size=\"m\" >\n                          Edit Profile\n                    </Button>\n                      </div>\n                    </CardBody>\n                  </>\n                }\n                <Modal\n                  className=\"modal-dialog-centered\"\n                  isOpen={this.state.userModal}\n                  toggle={() => this.toggleModal(\"userModal\")}\n                >\n                  <div className=\"modal-header\">\n                    <h2 className=\"modal-title\" id=\"userModalLabel\">\n                      Edit Profile\n                          </h2>\n                    <button aria-label=\"Close\" className=\"close\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.toggleModal(\"userModal\")} >\n                      <span aria-hidden={true}>×</span>\n                    </button>\n                  </div>\n                  <div className=\"modal-body\">\n                    <form>\n                      <div class=\"form-group\">\n                        <label for=\"recipient-name\" class=\"col-form-label\" >Name:</label>\n                        <input type=\"text\" class=\"form-control\" id=\"recipient-name\" defaultValue={this.state.user.name} onChange={this.handleUserName}></input>\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"recipient-name\" class=\"col-form-label\" >Email:</label>\n                        <input type=\"text\" class=\"form-control\" id=\"recipient-name\" defaultValue={this.state.user.email} onChange={this.handleUserEmail}></input>\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"message-text\" class=\"col-form-label\">About:</label>\n                        <textarea class=\"form-control\" id=\"message-text\" defaultValue={this.state.user.about} onChange={this.handleAbout}></textarea>\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"recipient-name\" class=\"col-form-label\" >Password:</label>\n                        <input type=\"text\" class=\"form-control\" id=\"recipient-name\" defaultValue={this.state.user.password} onChange={this.handlePassword}></input>\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"modal-footer\">\n                    <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.toggleModal(\"userModal\")}>\n                      Cancel\n                      </Button>\n                    <Button color=\"success\" type=\"button\" onClick={this.handleEditProfile}>\n                      Save\n                      </Button>\n                  </div>\n                </Modal>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default ManagerProfile;","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerDocuments.js",["293","294","295","296"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\n\nimport {\n\tButton,\n\tCard,\n\tCardHeader,\n\tCardBody,\n\tTable,\n\tContainer,\n\tRow,\n\tModal,\n\tCol,\n\tDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem,\n\tSpinner\n} from \"reactstrap\";\n\n\nimport Header from \"components/Manager/Headers/EmptyHeader.js\";\n\nclass ManagerDocuments extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdocumentModel: false,\n\t\t\troleModel: false,\n\t\t\tdocuments: [],\n\t\t\troles: [],\n\t\t\tuploadDocument: null,\n\t\t\tloading: true,\n\t\t\tdocumentIndex: null,\n\t\t\tcurrentRole: null,\n\t\t\ttempRoles: [],\n\t\t\tremovedRoles: [],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t//Check if auth token in valid\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\n\t\tlet type = reactLocalStorage.get('userType', true);\n\n\t\tif (type == 2) {\n\t\t\tif (clientId != null && userId != null) {\n\t\t\t\tconst data = {\n\t\t\t\t\t\"clientId\": clientId,\n\t\t\t\t\t\"userId\": userId\n\t\t\t\t}\n\t\t\t\taxios.post(constants[\"apiUrl\"] + '/documents/getUploaded', data)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tlet data = res.data;\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tdocuments: data.documents,\n\t\t\t\t\t\t\tloading: false\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t\t});\n\t\t\t\taxios.post(constants[\"apiUrl\"] + '/roles/all', data)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tlet data = res.data;\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\troles: data.roles,\n\t\t\t\t\t\t\tloading: false\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//TODO: go back to login\n\t\t\t}\n\t\t\n\n\t\t} else {\n\t\tthis.props.history.push(\"/login\");\n\t\t}\n\n\t\t//console.warn('user ' + userId + 'client ' + clientId);\n\n\t\t\n\t}\n\n\ttoggleModal = state => {\n\t\tconsole.log(state);\n\t\tthis.setState({\n\t\t\t[state]: !this.state[state]\n\t\t});\n\t};\n\n\thandleDocumentName = (event) => {\n\t\tthis.setState({ documentName: event.target.value });\n\t\t//console.warn(this.state.documentName)\n\t}\n\n\thandleDocumentDesc = (event) => {\n\t\tthis.setState({ documentDesc: event.target.value });\n\t}\n\n\tchooseFile = (event) => {\n\t\tthis.setState({\n\t\t\tuploadDocument: event.target.files[0]\n\t\t});\n\t}\n\n\ttoggleDropdown = (state) => {\n\t\tthis.setState({\n\t\t\t[state]: !this.state[state]\n\t\t});\n\t};\n\n\tselectRole = (role) => {\n\t\tlet updatedRemovedRoles = this.state.removedRoles.filter(function (r) { return r.id !== role.id; });\n\t\tlet temp = [...this.state.tempRoles];\n\n\t\ttemp.push(role);\n\t\tconsole.log('inside the if');\n\t\tthis.setState({\n\t\t\ttempRoles: temp,\n\t\t\tremovedRoles: updatedRemovedRoles\n\t\t})\n\t}\n\n\ttoggleRoleModal = (state, index = null) => {\n\t\tthis.setState({\n\t\t\t[state]: !this.state[state],\n\t\t\tdocumentIndex: index,\n\t\t\ttempRoles: [...this.state.documents[index].userRoles]\n\t\t});\n\t};\n\n\tcloseRoleModal = () => {\n\t\tthis.setState({\n\t\t\tcurrentRole: null,\n\t\t\troleModel: false,\n\t\t\tdocumentIndex: null,\n\t\t\ttempRoles: [],\n\t\t\tremovedRoles: []\n\t\t})\n\t}\n\n\n\tremoveRole = (role, index) => {\n\t\tlet removedRoles;\n\t\tlet updatedRoles = [...this.state.tempRoles];\n\t\tupdatedRoles.splice(index, 1);\n\n\t\tremovedRoles = [...this.state.removedRoles];\n\t\tremovedRoles.push(role);\n\n\t\tthis.setState({\n\t\t\tremovedRoles: removedRoles,\n\t\t\ttempRoles: updatedRoles\n\t\t})\n\t}\n\n\tupdateRoles = () => {\n\t\tlet updatedDocs = [];\n\t\tif (this.state.tempRoles.length != 0) {\n\t\t\tthis.state.tempRoles.forEach(role => {\n\t\t\t\tif (!this.state.documents[this.state.documentIndex].userRoles.some( r => r.id === role.id )) {\n\t\t\t\t\tconst data = new FormData();\n\t\t\t\t\tdata.append(\"documentId\", this.state.documents[this.state.documentIndex].id);\n\t\t\t\t\tdata.append(\"roleId\", role.id);\n\t\t\t\t\tupdatedDocs = [...this.state.documents];\n\t\t\t\t\tupdatedDocs[this.state.documentIndex].userRoles.push(role);\n\n\t\t\t\t\taxios.post(constants[\"apiUrl\"] + '/documents/addRole', data)\n\t\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\t\tlet data = res.data;\n\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tcurrentRole: null,\n\t\t\t\t\t\t\t\troleModel: false,\n\t\t\t\t\t\t\t\tdocumentIndex: null,\n\t\t\t\t\t\t\t\tdocuments: updatedDocs,\n\t\t\t\t\t\t\t\ttempRoles: [],\n\t\t\t\t\t\t\t\tremovedRoles: []\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// updatedDocs = [];\n\t\tif (this.state.removedRoles.length != 0) {\n\t\t\tthis.state.removedRoles.forEach(role => {\n\t\t\t\tconst data = new FormData();\n\t\t\t\tdata.append(\"documentId\", this.state.documents[this.state.documentIndex].id);\n\t\t\t\tdata.append(\"roleId\", role.id);\n\t\t\t\tupdatedDocs = [...this.state.documents];\n\t\t\t\tupdatedDocs[this.state.documentIndex].userRoles = updatedDocs[this.state.documentIndex].userRoles.filter(function (r) { return r.id !== role.id; });\n\n\t\t\t\taxios.post(constants[\"apiUrl\"] + '/documents/removeRole', data)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tlet data = res.data;\n\t\t\t\t\t\tconsole.warn(JSON.stringify(data));\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tcurrentRole: null,\n\t\t\t\t\t\t\troleModel: false,\n\t\t\t\t\t\t\tdocumentIndex: null,\n\t\t\t\t\t\t\tdocuments: updatedDocs,\n\t\t\t\t\t\t\ttempRoles: [],\n\t\t\t\t\t\t\tremovedRoles: []\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tcurrentRole: null,\n\t\t\t\troleModel: false,\n\t\t\t\tdocumentIndex: null,\n\t\t\t\ttempRoles: [],\n\t\t\t\tremovedRoles: []\n\t\t\t})\n\t\t}\n\t}\n\n\tremoveRole = (role, index) => {\n\t\tlet removedRoles;\n\t\tlet updatedRoles = [...this.state.tempRoles];\n\t\tupdatedRoles.splice(index, 1);\n\n\t\tremovedRoles = [...this.state.removedRoles];\n\t\tremovedRoles.push(role);\n\n\t\tthis.setState({\n\t\t\tremovedRoles: removedRoles,\n\t\t\ttempRoles: updatedRoles\n\t\t})\n\t}\n\n\thandleUpload = () => {\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\n\t\t//console.warn('user ' + userId + 'client ' + clientId);\n\n\n\t\tif (clientId != null && userId != null) {\n\t\t\tlet data = new FormData();\n\n\t\t\tdata.append(\"clientId\", clientId);\n\t\t\tdata.append(\"userId\", userId);\n\t\t\tdata.append(\"name\", this.state.documentName);\n\t\t\tdata.append(\"description\", this.state.documentDesc);\n\t\t\tdata.append(\"file\", this.state.uploadDocument);\n\n\t\t\taxios.post(constants[\"apiUrl\"] + '/documents/upload', data)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t});\n\t\t}\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Header />\n\t\t\t\t<Container className=\"mt--7\" fluid>\n\t\t\t\t\t<Row className=\"mt-5\">\n\t\t\t\t\t\t<Col xl>\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Uploaded Documents</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/manager/docs',\n\t\t\t\t\t\t\t\t\t\t\t}} style={{ paddingRight: 5 }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tSee All\n                        \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" onClick={() => this.toggleModal(\"documentModel\")} size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\tAdd Document\n                      \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\" responsive>\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Size</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Uploaded On</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Accepted</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Assigned Roles</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.documents.map((doc, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t// const date = moment(doc.updated_at).format('DD MMM, YYYY');\n\t\t\t\t\t\t\t\t\t\t\t\tconst date = new Date(doc.updated_at).toLocaleString();\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{doc.name}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{doc.size} KB</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mr-2\">{date}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{doc.acceptedCount}/{doc.acceptedTotal}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{doc.userRoles.map(role => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4><span className=\"badge badge-primary\">{role.name}</span></h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.toggleRoleModal(\"roleModel\", index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n                              \t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/manager/view/document/' + doc.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tView\n                                \t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"modal-dialog-centered\"\n\t\t\t\t\t\t\t\t\t\t\tisOpen={this.state.roleModel}\n\t\t\t\t\t\t\t\t\t\t\ttoggle={() => this.closeRoleModal(\"roleModel\")}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"modal-title\" id=\"roleModelLabel\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd/Remove Role\n                          \t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeRoleModal(\"roleModel\")}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.documentIndex != null ? this.state.tempRoles.map((role, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col key={index} sm=\"auto\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4><span class=\"badge badge-primary\">{role.name}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button aria-label=\"Close\" className=\"close\" data-dismiss=\"modal\" type=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"badge badge-warning\" onClick={() => this.removeRole(role, index)} aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col xl=\"auto\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown isOpen={this.state.toggleDropdown} toggle={() => this.toggleDropdown(\"toggleDropdown\")}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownToggle caret>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.currentRole == null ? <>Select Role</> : this.state.currentRole.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.roles.map((role, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.tempRoles.some(r => r.id === role.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem disabled key={index} onClick={() => this.selectRole(role)}>{role.name}</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem key={index} onClick={() => this.selectRole(role)}>{role.name}</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeRoleModal()}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n                          </Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={() => this.updateRoles()} color=\"success\" type=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tSave\n                          </Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\tclassName=\"modal-dialog-centered\"\n\t\t\t\t\t\t\t\t\tisOpen={this.state.documentModel}\n\t\t\t\t\t\t\t\t\ttoggle={() => this.toggleModal(\"documentModel\")}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"modal-title\" id=\"documentModelLabel\">\n\t\t\t\t\t\t\t\t\t\t\tAdd Document\n                          \t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.toggleModal(\"documentModel\")}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"recipient-name\" class=\"col-form-label\">Name:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"recipient-name\" onChange={this.handleDocumentName}></input>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"message-text\" class=\"col-form-label\" onChange={this.handleDocumentDesc}>Description:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\" id=\"message-text\"></textarea>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"file\" name=\"file\" onChange={e => this.chooseFile(e)} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.toggleModal(\"documentModel\")}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tCancel\n                          \t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" type=\"button\" onClick={this.handleUpload}>\n\t\t\t\t\t\t\t\t\t\t\tUpload\n                          \t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default ManagerDocuments;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerIndex.js",["297","298","299","300","301","302"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\n\n// reactstrap components\nimport {\n\tButton,\n\tCard,\n\tCardHeader,\n\tTable,\n\tContainer,\n\tRow,\n\tModal,\n\tCol,\n\tDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem,\n\tSpinner\n} from \"reactstrap\";\n\nimport Header from \"components/Manager/Headers/DashboardHeader.js\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport { createPrinter } from \"typescript\";\n// import Roles from \"./Popups/Roles.js\"\n\nclass ManagerIndex extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdocumentModel: false,\n\t\t\troleModel: false,\n\t\t\tuserModal: false,\n\t\t\tuserEditModal: false,\n\t\t\ttoggleDropdown: false,\n\t\t\ttotalUsers: 0,\n\t\t\tpendAudits: 0,\n\t\t\tcompAudits: 0,\n\t\t\tsubsStandards: 0,\n\t\t\tstandards: [],\n\t\t\tdocuments: [],\n\t\t\tarticles: [],\n\t\t\tworkflows: [],\n\t\t\troles: [],\n\t\t\ttempRoles: [],\n\t\t\tremovedRoles: [],\n\t\t\tusers: [],\n\t\t\tuser: null,\n\t\t\tdocumentName: '',\n\t\t\tdocumentDesc: '',\n\t\t\tdocumentIndex: null,\n\t\t\tuserIndex: null,\n\t\t\tuploadDocument: null,\n\t\t\tcurrentRole: null,\n\t\t\tloading: true,\n\t\t\tabout: '',\n\t\t\tname: '',\n\t\t\tpassword: '',\n\t\t\temail: ''\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t//Check if auth token in valid\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\n\t\tlet type = reactLocalStorage.get('userType', true);\n\n\t\tif (type == 2) {\n\t\t\tif (clientId != null && userId != null) {\n\t\t\t\tconst data = {\n\t\t\t\t\t\"clientId\": clientId,\n\t\t\t\t\t\"userId\": userId\n\t\t\t\t}\n\t\t\t\taxios.post(constants[\"apiUrl\"] + '/dashboard/get', data)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tlet data = res.data;\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\ttotalUsers: data.totalUsers,\n\t\t\t\t\t\t\tpendAudits: data.pendingArticles,\n\t\t\t\t\t\t\tcompAudits: data.completedArticles,\n\t\t\t\t\t\t\tsubsStandards: data.subscribedStandards,\n\t\t\t\t\t\t\tstandards: data.standards,\n\t\t\t\t\t\t\tdocuments: data.documents,\n\t\t\t\t\t\t\tarticles: data.articles,\n\t\t\t\t\t\t\tworkflows: data.workflows,\n\t\t\t\t\t\t\tusers: data.users,\n\t\t\t\t\t\t\troles: data.roles,\n\t\t\t\t\t\t\tloading: false\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//TODO: go back to login\n\t\t\t}\n\t\t\n\n\t\t} else {\n\t\tthis.props.history.push(\"/login\");\n\t\t}\n\n\t\t\n\t}\n\n\ttoggleModal = (state) => {\n\t\tthis.setState({\n\t\t\t[state]: !this.state[state],\n\t\t});\n\t};\n\n\ttoggleEditModal = state => {\n\t\tthis.setState({\n\t\t\t[state]: !this.state[state],\n\t\t\tname: this.state.user.name,\n\t\t\temail: this.state.user.email,\n\t\t\tabout: this.state.user.about,\n\t\t});\n\t};\n\n\ttoggleRoleModal = (state, index) => {\n\t\tthis.setState({\n\t\t\t[state]: !this.state[state],\n\t\t\tdocumentIndex: index,\n\t\t\ttempRoles: [...this.state.documents[index].userRoles]\n\t\t});\n\t};\n\n\ttoggleUserModal = (state, index = null) => {\n\t\tthis.setState({\n\t\t\t[state]: !this.state[state],\n\t\t\tuserIndex: index,\n\t\t\tuser: this.state.users[index]\n\t\t});\n\t};\n\n\n\tcloseRoleModal = () => {\n\t\tthis.setState({\n\t\t\tcurrentRole: null,\n\t\t\troleModel: false,\n\t\t\tdocumentIndex: null,\n\t\t\ttempRoles: [],\n\t\t\tremovedRoles: []\n\t\t})\n\t}\n\n\ttoggleDropdown = (state) => {\n\t\tthis.setState({\n\t\t\t[state]: !this.state[state]\n\t\t});\n\t};\n\n\thandleDocumentName = (event) => {\n\t\tthis.setState({ documentName: event.target.value });\n\t}\n\n\thandleDocumentDesc = (event) => {\n\t\tthis.setState({ documentDesc: event.target.value });\n\t}\n\n\tchooseFile = (event) => {\n\t\tthis.setState({\n\t\t\tuploadDocument: event.target.files[0]\n\t\t});\n\t}\n\n\thandlePassword = (event) => {\n\t\tthis.setState({\n\t\t\tpassword: event.target.value\n\t\t})\n\t}\n\n\thandleUserEmail = (event) => {\n\t\tthis.setState({\n\t\t\temail: event.target.value\n\t\t});\n\t}\n\n\thandleUserName = (event) => {\n\t\tthis.setState({\n\t\t\tname: event.target.value\n\t\t});\n\t}\n\n\thandleAbout = (event) => {\n\t\tthis.setState({\n\t\t\tabout: event.target.value\n\t\t});\n\t}\n\n\thandleEditProfile = () => {\n\t\tlet userId = this.state.user.id;\n\n\t\tif (userId != null) {\n\t\t\tlet data;\n\t\t\tif (this.state.password === '') {\n\t\t\t\tdata = {\n\t\t\t\t\t\"about\": \"\" + this.state.about,\n\t\t\t\t\t\"name\": \"\" + this.state.name,\n\t\t\t\t\t\"userId\": \"\" + userId\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdata = {\n\t\t\t\t\t\"about\": \"\" + this.state.about,\n\t\t\t\t\t\"name\": \"\" + this.state.name,\n\t\t\t\t\t\"password\": \"\" + this.state.password,\n\t\t\t\t\t\"userId\": \"\" + userId\n\t\t\t\t}\n\t\t\t}\n\n\t\t\taxios.post(constants[\"apiUrl\"] + '/user/update', data)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tlet data = res.data;\n\t\t\t\t\tconsole.warn(JSON.stringify(data));\n\t\t\t\t\tlet users = [...this.state.users];\n\t\t\t\t\tusers[this.state.userIndex] = data.user;\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tname: '',\n\t\t\t\t\t\tpassword: '',\n\t\t\t\t\t\temail: '',\n\t\t\t\t\t\tabout: '',\n\t\t\t\t\t\tusers: users,\n\t\t\t\t\t\tuser: data.user\n\t\t\t\t\t})\n\t\t\t\t\t// this.forceUpdate();\n\t\t\t\t\tthis.toggleEditModal(\"userEditModal\");\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t});\n\t\t}\n\t}\n\n\tdeleteUser = (index) => {\n\t\tlet userId = this.state.users[index].id;\n\n\t\tif (userId != null) {\n\t\t\tlet data = {\n\t\t\t\t\"userId\": userId\n\t\t\t}\n\n\t\t\taxios.post(constants[\"apiUrl\"] + '/user/delete', data)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tlet data = res.data;\n\t\t\t\t\t//console.warn(JSON.stringify(data));\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t});\n\t\t}\n\t}\n\n\tupdateRoles = () => {\n\t\tlet updatedDocs = [];\n\t\tif (this.state.tempRoles.length != 0) {\n\t\t\tthis.state.tempRoles.forEach(role => {\n\t\t\t\tif (!this.state.documents[this.state.documentIndex].userRoles.some( r => r.id === role.id )) {\n\t\t\t\t\tconst data = new FormData();\n\t\t\t\t\tdata.append(\"documentId\", this.state.documents[this.state.documentIndex].id);\n\t\t\t\t\tdata.append(\"roleId\", role.id);\n\t\t\t\t\tupdatedDocs = [...this.state.documents];\n\t\t\t\t\tupdatedDocs[this.state.documentIndex].userRoles.push(role);\n\n\t\t\t\t\taxios.post(constants[\"apiUrl\"] + '/documents/addRole', data)\n\t\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\t\tlet data = res.data;\n\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tcurrentRole: null,\n\t\t\t\t\t\t\t\troleModel: false,\n\t\t\t\t\t\t\t\tdocumentIndex: null,\n\t\t\t\t\t\t\t\tdocuments: updatedDocs,\n\t\t\t\t\t\t\t\ttempRoles: [],\n\t\t\t\t\t\t\t\tremovedRoles: []\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// updatedDocs = [];\n\t\tif (this.state.removedRoles.length != 0) {\n\t\t\tthis.state.removedRoles.forEach(role => {\n\t\t\t\tconst data = new FormData();\n\t\t\t\tdata.append(\"documentId\", this.state.documents[this.state.documentIndex].id);\n\t\t\t\tdata.append(\"roleId\", role.id);\n\t\t\t\tupdatedDocs = [...this.state.documents];\n\t\t\t\tupdatedDocs[this.state.documentIndex].userRoles = updatedDocs[this.state.documentIndex].userRoles.filter(function (r) { return r.id !== role.id; });\n\n\t\t\t\taxios.post(constants[\"apiUrl\"] + '/documents/removeRole', data)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tlet data = res.data;\n\t\t\t\t\t\tconsole.warn(JSON.stringify(data));\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tcurrentRole: null,\n\t\t\t\t\t\t\troleModel: false,\n\t\t\t\t\t\t\tdocumentIndex: null,\n\t\t\t\t\t\t\tdocuments: updatedDocs,\n\t\t\t\t\t\t\ttempRoles: [],\n\t\t\t\t\t\t\tremovedRoles: []\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tcurrentRole: null,\n\t\t\t\troleModel: false,\n\t\t\t\tdocumentIndex: null,\n\t\t\t\ttempRoles: [],\n\t\t\t\tremovedRoles: []\n\t\t\t})\n\t\t}\n\t}\n\t\n\tselectRole = (role) => {\n\t\tlet updatedRemovedRoles = this.state.removedRoles.filter(function (r) { return r.id !== role.id; });\n\t\tlet temp = [...this.state.tempRoles];\n\n\t\ttemp.push(role);\n\t\tconsole.log('inside the if');\n\t\tthis.setState({\n\t\t\ttempRoles: temp,\n\t\t\tremovedRoles: updatedRemovedRoles\n\t\t})\n\t}\n\n\tremoveRole = (role, index) => {\n\t\tlet removedRoles;\n\t\tlet updatedRoles = [...this.state.tempRoles];\n\t\tupdatedRoles.splice(index, 1);\n\n\t\tremovedRoles = [...this.state.removedRoles];\n\t\tremovedRoles.push(role);\n\n\t\tthis.setState({\n\t\t\tremovedRoles: removedRoles,\n\t\t\ttempRoles: updatedRoles\n\t\t})\n\t}\n\n\thandleUpload = () => {\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\n\t\tif (clientId != null && userId != null) {\n\t\t\tlet data = new FormData();\n\n\t\t\tdata.append(\"clientId\", clientId);\n\t\t\tdata.append(\"userId\", userId);\n\t\t\tdata.append(\"name\", this.state.documentName);\n\t\t\tdata.append(\"description\", this.state.documentDesc);\n\t\t\tdata.append(\"file\", this.state.uploadDocument);\n\n\t\t\taxios.post(constants[\"apiUrl\"] + '/documents/upload', data)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tdocumentName: '',\n\t\t\tdocumentDesc: '',\n\t\t\tuploadDocument: null,\n\t\t\tdocumentModel: false,\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Header\n\t\t\t\t\ttotalUsers={this.state.totalUsers}\n\t\t\t\t\tcompAudits={this.state.compAudits}\n\t\t\t\t\tpendAudits={this.state.pendAudits}\n\t\t\t\t\tsubsStandards={this.state.subsStandards}\n\t\t\t\t/>\n\t\t\t\t{/* Page content */}\n\t\t\t\t<Container className=\"mt--7\" fluid>\n\t\t\t\t\t<Row className=\"mt-5\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"7\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Current Standards</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/manager/standards',\n\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"Food Quality 1.3\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"success\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tSee All\n                        \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\" responsive>\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Article Count</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Details</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Progress</th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.standards.map((e, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{e.name}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{e.articleCount}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<text style={{ whiteSpace: 'pre-wrap', overflowWrap: 'break-word' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{e.description}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{Number.isInteger(e.progress) ? e.progress : e.progress.toFixed(2)}%\n                         \t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xl=\"5\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Uploaded Documents</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/manager/docs',\n\t\t\t\t\t\t\t\t\t\t\t}} style={{ paddingRight: 5 }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tSee All\n                        \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" onClick={() => this.toggleModal(\"documentModel\")} size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\tAdd Document\n                      \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\" responsive>\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Size</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Uploaded On</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Accepted</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Assigned Roles</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.documents.map((doc, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t// const date = moment(doc.updated_at).format('DD MMM, YYYY');\n\t\t\t\t\t\t\t\t\t\t\t\tconst date = new Date(doc.updated_at).toLocaleString();\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{doc.name}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{doc.size} KB</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mr-2\">{date}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{doc.acceptedCount}/{doc.acceptedTotal}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{doc.userRoles.map(role => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4><span className=\"badge badge-primary\">{role.name}</span></h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" onClick={() => this.toggleRoleModal(\"roleModel\", index)} size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n                              \t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/manager/view/document/' + doc.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tView\n                                \t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"modal-dialog-centered\"\n\t\t\t\t\t\t\t\t\t\t\tisOpen={this.state.roleModel}\n\t\t\t\t\t\t\t\t\t\t\ttoggle={() => this.closeRoleModal(\"roleModel\")}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"modal-title\" id=\"roleModelLabel\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd/Remove Role\n                          \t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeRoleModal(\"roleModel\")}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.documentIndex != null ? this.state.tempRoles.map((role, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col key={index} sm=\"auto\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4><span class=\"badge badge-primary\">{role.name}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button aria-label=\"Close\" className=\"close\" data-dismiss=\"modal\" type=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"badge badge-warning\" onClick={() => this.removeRole(role, index)} aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col xl=\"auto\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown isOpen={this.state.toggleDropdown} toggle={() => this.toggleDropdown(\"toggleDropdown\")}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownToggle caret>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.currentRole == null ? <>Select Role</> : this.state.currentRole.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.roles.map((role, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.tempRoles.some(r => r.id === role.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem disabled key={index} onClick={() => this.selectRole(role)}>{role.name}</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem key={index} onClick={() => this.selectRole(role)}>{role.name}</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeRoleModal()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n                          \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={() => this.updateRoles()} color=\"success\" type=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tSave\n                          \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\tclassName=\"modal-dialog-centered\"\n\t\t\t\t\t\t\t\t\tisOpen={this.state.documentModel}\n\t\t\t\t\t\t\t\t\ttoggle={() => this.toggleModal(\"documentModel\")}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"modal-title\" id=\"documentModelLabel\">\n\t\t\t\t\t\t\t\t\t\t\tAdd Document\n                          \t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.toggleModal(\"documentModel\")}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"recipient-name\" class=\"col-form-label\">Name:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"recipient-name\" onChange={this.handleDocumentName}></input>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"message-text\" class=\"col-form-label\" onChange={this.handleDocumentDesc}>Description:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\" id=\"message-text\"></textarea>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"file\" name=\"file\" onChange={e => this.chooseFile(e)} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.toggleModal(\"documentModel\")}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tCancel\n                          </Button>\n\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" type=\"button\" onClick={this.handleUpload}>\n\t\t\t\t\t\t\t\t\t\t\tUpload\n                          </Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"mt-5\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Articles</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/manager/articles',\n\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"Food Quality 1.3\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tSee All\n                        \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\" responsive>\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Assigned To</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Due Date</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Standards</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Progress</th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.articles.map(a => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{a.name}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{a.assignedTo ? a.assignedTo.name : \"-\"}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>-</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{a.standard.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{Number.isInteger(a.progress) ? a.progress : a.progress.toFixed(2)}%\n                          \t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"mt-5\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Workflows</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/manager/workflows',\n\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"Food Quality 1.3\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tSee All\n                        \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\" responsive>\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Assigned To</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Due Date</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Progress</th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.workflows.map(w => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{w.name}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{w.user_id == null ? \"-\" : w.user.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>-</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{Number.isInteger(w.progress) ? w.progress : w.progress.toFixed(2)}%\n                      \t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"mt-5\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Users</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/manager/users',\n\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"Food Quality 1.3\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tSee All\n                        \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\" responsive>\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Role</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Assigned Workflows</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Assigned Articles</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.users.map((user, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{user.name}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3><span className=\"badge badge-primary\"> Reception</span></h3>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{user.assignedWorkflows}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{user.assignedArticles}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" onClick={() => this.toggleUserModal('userModal', index)} size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tView\n                              \t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"warning\" onClick={() => this.deleteUser(index)} size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n                              \t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\tclassName=\"modal-dialog-centered\"\n\t\t\t\t\t\t\t\t\tisOpen={this.state.userModal}\n\t\t\t\t\t\t\t\t\ttoggle={() => this.toggleUserModal(\"userModal\")}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-header-centered\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-profile-image\">\n\t\t\t\t\t\t\t\t\t\t\t<a href=\"#pablo\" onClick={e => e.preventDefault()}>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.user != null ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"...\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-circle\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={require(\"assets/img/default/defaultProfile.png\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"...\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-circle\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={require(\"assets/img/default/defaultProfile.jpg\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<button aria-label=\"Close\" className=\"close\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.toggleUserModal(\"userModal\")}>\n\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\" style={{ paddingTop: 100 }}>\n\t\t\t\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.userIndex != null ? this.state.users[this.state.userIndex].name : null}\n\t\t\t\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"h5 font-weight-300\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"ni location_pin mr-2\" />\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.userIndex != null ? this.state.users[this.state.userIndex].email : null}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"h5 mt-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"ni business_briefcase-24 mr-2\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.userIndex != null ? this.state.users[this.state.userIndex].about : null}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"ni business_briefcase-24 mr-2\" />\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"badge badge-primary\">Manager</span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"badge badge-primary\">Doctor</span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"badge badge-primary\">HealthExpert</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.toggleEditModal(\"userEditModal\")}>\n\t\t\t\t\t\t\t\t\t\t\tEdit\n                    \t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button color=\"warning\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.toggleUserModal(\"userModal\")}>\n\t\t\t\t\t\t\t\t\t\t\tClose\n                    \t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\tclassName=\"modal-dialog-centered\"\n\t\t\t\t\t\t\t\t\tisOpen={this.state.userEditModal}\n\t\t\t\t\t\t\t\t\ttoggle={() => this.toggleEditModal(\"userEditModal\")}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"modal-title\" id=\"userModalLabel\">\n\t\t\t\t\t\t\t\t\t\t\tEdit Profile\n                         \t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t<button aria-label=\"Close\" className=\"close\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.toggleEditModal(\"userEditModal\")} >\n\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t\t{this.state.user != null ?\n\t\t\t\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"recipient-name\" class=\"col-form-label\" >Name:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"recipient-name\" defaultValue={this.state.user.name} onChange={this.handleUserName}></input>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"recipient-name\" class=\"col-form-label\" >Email:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"recipient-name\" defaultValue={this.state.user.email} onChange={this.handleUserEmail}></input>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"message-text\" class=\"col-form-label\">About:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\" id=\"message-text\" defaultValue={this.state.user.about} onChange={this.handleAbout}></textarea>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"recipient-name\" class=\"col-form-label\" >Password:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"recipient-name\" defaultValue={this.state.user.password} onChange={this.handlePassword}></input>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t<Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.toggleEditModal(\"userEditModal\")}>\n\t\t\t\t\t\t\t\t\t\t\tCancel\n                      \t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" type=\"button\" onClick={this.handleEditProfile}>\n\t\t\t\t\t\t\t\t\t\t\tSave\n                      \t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default ManagerIndex;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerArticles.js",["303","304","305","306","307","308","309","310","311","312"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\n\nimport routes from \"routes.js\";\n// reactstrap components\nimport {\n\tButton,\n\tCard,\n\tCardHeader,\n\tCardBody,\n\tTable,\n\tContainer,\n\tRow,\n\tCol,\n\tModal,\n\tDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem,\n\tSpinner,\n\tUncontrolledDropdown\n} from \"reactstrap\";\n\nimport EmptyHeader from \"components/Manager/Headers/EmptyHeader.js\";\n// import User from \"components/User/User\";\n// import Roles from \"./Popups/Roles.js\"\n\nclass ManagerArticles extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tassignModel: false,\n\t\t\troleModel: false,\n\t\t\ttoggleDropdown: false,\n\t\t\tmodelName: '',\n\t\t\tname: \"None\",\n\t\t\tassignArticleId: 0,\n\t\t\tassignUserId: 0,\n\t\t\tarticles: [],\n\t\t\tselected: 'Select User',\n\t\t\tusers: null,\n\t\t\tindex: 0,\n\t\t\tarticleIndex: null,\n\t\t\tloading: true\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\n\n\t\t//Check if auth token in valid\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\n\t\tlet type = reactLocalStorage.get('userType', true);\n\n\t\tif (type == 2) {\n\t\t\tif (clientId != null && userId != null) {\n\t\t\t\tconst data = {\n\t\t\t\t\t\"clientId\": clientId,\n\t\t\t\t}\n\t\t\t\taxios.post(constants[\"apiUrl\"] + '/articles/getAllManager', data)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tlet data = res.data;\n\t\t\t\t\t\t// console.warn(JSON.stringify(data));\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tarticles: data.articles,\n\t\t\t\t\t\t\tloading: false\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\t//TODO: go back to login\n\t\t\t}\n\t\t\n\n\t\t} else {\n\t\tthis.props.history.push(\"/login\");\n\t\t}\n\n\t\t//console.warn('user ' + userId + 'client ' + clientId);\n\n\t\t\n\t}\n\n\thandleSelect = (username, userId) => {\n\t\tthis.setState({\n\t\t\tselected: username,\n\t\t\tassignUserId: userId,\n\n\t\t});\n\t}\n\n\thandleAssign = () => {\n\t\tlet managerId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\t\tif (this.state.assignArticleId != 0) {\n\t\t\tconst data = {\n\t\t\t\t\"clientId\": clientId,\n\t\t\t\t\"articleId\": this.state.assignArticleId,\n\t\t\t\t\"userId\": this.state.assignUserId,\n\t\t\t\t\"managerId\": managerId\n\t\t\t}\n\t\t\taxios.post(constants[\"apiUrl\"] + '/articles/assign', data)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tlet data = res.data;\n\t\t\t\t\tconsole.warn(JSON.stringify(data));\n\n\t\t\t\t\tlet index = this.state.articles.findIndex(element => element.id == this.state.assignArticleId);\n\n\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\tlet w = this.state.articles;\n\t\t\t\t\t\tw[index] = data.article;\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tarticles: w\n\t\t\t\t\t\t})\n\t\t\t\t\t\tconsole.warn(data)\n\t\t\t\t\t\tthis.forceUpdate()\n\t\t\t\t\t\tthis.closeModal();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t});\n\t\t}\n\t}\n\n\topenModal = (state, id, index) => {\n\t\tthis.setState({\n\t\t\t[state]: !this.state[state],\n\t\t\tassignArticleId: id,\n\t\t\tarticleIndex: index\n\t\t});\n\n\n\t\tif (this.state[state] == false) {\n\t\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\n\t\t\t//console.warn('user ' + userId + 'client ' + clientId);\n\n\t\t\tif (clientId != null && userId != null) {\n\t\t\t\tconst data = {\n\t\t\t\t\t\"clientId\": clientId,\n\t\t\t\t}\n\t\t\t\taxios.post(constants[\"apiUrl\"] + '/user/get', data)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tlet data = res.data;\n\t\t\t\t\t\t// console.warn(JSON.stringify(data));\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tusers: data.users,\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\t// To do\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tusers: null,\n\t\t\t});\n\t\t}\n\n\t};\n\n\tcloseModal = () => {\n\t\tthis.setState({\n\t\t\tassignModel: false,\n\t\t\tassignUserId: 0,\n\t\t\tusername: 'Select User',\n\t\t\tassignArticleId: 0,\n\t\t\tarticleIndex: null,\n\t\t\tselected: 'Select User'\n\t\t});\n\t}\n\n\tremoveAssign = (articleId, userId, index) => {\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\t\tconst data = {\n\t\t\t\"clientId\": clientId,\n\t\t\t\"articleId\": articleId,\n\t\t\t\"userId\": userId\n\t\t}\n\t\taxios.post(constants[\"apiUrl\"] + '/articles/removeAssignment', data)\n\t\t\t.then((res) => {\n\t\t\t\tlet data = res.data;\n\n\t\t\t\tlet index = this.state.articles.findIndex(element => element.id == articleId);\n\t\t\t\tconsole.warn(data);\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tlet w = this.state.articles;\n\t\t\t\t\tw[index].assignedTo = null\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tarticles: w\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.forceUpdate()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t});\n\t}\n\n\nrender() {\n\treturn (\n\t\t<>\n\t\t\t<EmptyHeader />'\n\t\t\t{/* Page content */}\n\t\t\t<Container className=\"mt--7\" fluid>\n\t\t\t\t<Row className=\"mt-5\">\n\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Articles</h3>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t<div style={{ borderColor: 'black' }} className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\" responsive>\n\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Checklist Count</th>\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Assigned To</th>\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Due Date</th>\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Standards</th>\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Progress</th>\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody>\n\n\t\t\t\t\t\t\t\t\t\t{this.state.articles.map((article, index) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{article.name}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{article.checklistCount}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{article.assignedTo == null ? \"-\" : article.assignedTo.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>-</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mr-2\">{article.standard.id}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{Number.isInteger(article.progress) ? article.progress : article.progress.toFixed(2)}%\n                          \t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/manager/view/article/' + article.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"Food Quality 1.3\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tView\n                                \t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{article.assignedTo == null ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" onClick={() => this.openModal(\"assignModel\", article.id, index)} size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAssign\n                          \t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"danger\" onClick={() => this.removeAssign(article.id, article.assignedTo.id, index)} size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUnassign\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\t\tclassName=\"modal-dialog-centered\"\n\t\t\t\t\t\t\t\t\t\tisOpen={this.state.assignModel}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={this.state.index}\n\t\t\t\t\t\t\t\t\t\ttoggle={() => this.closeModal()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"modal-title\" id=\"assignModelLabel\">\n\t\t\t\t\t\t\t\t\t\t\t\tArticle {this.state.assignArticleId}\n\t\t\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeModal()}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Col xl=\"auto\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.users != null ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<UncontrolledDropdown>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownToggle caret>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.selected}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownMenu container=\"body\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.users.map((user, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem onClick={() => this.handleSelect(user.name, user.id, this.state.assignArticleId)} key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{user.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</UncontrolledDropdown>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>Loading...</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t\t<Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeModal()}>\n\t\t\t\t\t\t\t\t\t\t\t\tCancel\n                              \t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" type=\"button\" onClick={() => this.handleAssign()}>\n\t\t\t\t\t\t\t\t\t\t\t\tAssign\n                              \t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n}\n\nexport default ManagerArticles;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/ManagerUsers.js",["313","314","315"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\n\n// reactstrap components\nimport {\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Modal,\n  Table,\n  Button,\n  Container,\n  Spinner\n} from \"reactstrap\";\n\nimport Header from \"components/Manager/Headers/EmptyHeader.js\";\n\nclass ManagerUsers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userModel: false,\n      userViewModel: false,\n      userEditModal: false,\n      users: [],\n      user: null,\n      userPassword: '',\n      userName: '',\n      userMail: '',\n      loading: true,\n      userIndex: null,\n      email: '',\n      about: ''\n    };\n  }\n\n  componentDidMount() {\n    //Check if auth token in valid\n    let userId = reactLocalStorage.get('userId', true);\n    let clientId = reactLocalStorage.get('clientId', true);\n\n    let type = reactLocalStorage.get('userType', true);\n\n\t\tif (type == 2) {\n      \n      if (clientId != null && userId != null) {\n        const data = {\n          \"clientId\": clientId,\n          \"userId\": userId\n        }\n        axios.post(constants[\"apiUrl\"] + '/user/getAll', data)\n          .then((res) => {\n            let data = res.data;\n            console.warn(JSON.stringify(data));\n            this.setState({\n              users: data.users,\n              loading: false\n            })\n          })\n          .catch((error) => {\n            console.warn(JSON.stringify(error));\n          });\n      } else {\n        //TODO: go back to login\n      }\n\t\t\n\n\t\t} else {\n\t\tthis.props.history.push(\"/login\");\n\t\t}\n\n    //console.warn('user ' + userId + 'client ' + clientId);\n\n    \n  }\n\n  toggleModal = state => {\n    console.log(state);\n    this.setState({\n      [state]: !this.state[state]\n    });\n  };\n\n  toggleEditModal = state => {\n    this.setState({\n      [state]: !this.state[state],\n      userName: this.state.user.name,\n      email: this.state.user.email,\n      about: this.state.user.about,\n    });\n    console.log(this.state.user)\n  };\n\n  handlePassword = (event) => {\n    this.setState({\n      password: event.target.value\n    })\n  }\n\n  handleUserEmail = (event) => {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handleUserName = (event) => {\n    this.setState({\n      userName: event.target.value\n    });\n  }\n\n  handleAbout = (event) => {\n    this.setState({\n      about: event.target.value\n    });\n  }\n\n  handleUserName = (event) => {\n    this.setState({ userName: event.target.value });\n  }\n\n  makeid = (length) => {\n    var result = '';\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    //console.warn(result)\n    return result;\n  }\n\n  handlePassword = (event) => {\n    this.setState({ userPassword: this.makeid(10) })\n  }\n\n  handleUserEmail = (event) => {\n    this.setState({ userMail: event.target.value });\n  }\n\n  toggleUserModal = (state, index = null) => {\n    this.setState({\n      [state]: !this.state[state],\n      userIndex: index,\n      user: this.state.users[index]\n    });\n  }\n\n  handleEditProfile = () => {\n\t\tlet userId = this.state.user.id;\n\n\t\tif (userId != null) {\n\t\t\tlet data;\n\t\t\tif (this.state.password === '') {\n\t\t\t\tdata = {\n\t\t\t\t\t\"about\": \"\" + this.state.about,\n\t\t\t\t\t\"name\": \"\" + this.state.userName,\n\t\t\t\t\t\"userId\": \"\" + userId\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdata = {\n\t\t\t\t\t\"about\": \"\" + this.state.about,\n\t\t\t\t\t\"name\": \"\" + this.state.userName,\n\t\t\t\t\t\"password\": \"\" + this.state.password,\n\t\t\t\t\t\"userId\": \"\" + userId\n\t\t\t\t}\n\t\t\t}\n\n\t\t\taxios.post(constants[\"apiUrl\"] + '/user/update', data)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tlet data = res.data;\n\t\t\t\t\tconsole.warn(JSON.stringify(data));\n\t\t\t\t\tlet users = [...this.state.users];\n\t\t\t\t\tusers[this.state.userIndex] = data.user;\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tuserName: '',\n\t\t\t\t\t\tpassword: '',\n\t\t\t\t\t\temail: '',\n\t\t\t\t\t\tabout: '',\n\t\t\t\t\t\tusers: users,\n\t\t\t\t\t\tuser: data.user\n\t\t\t\t\t})\n\t\t\t\t\t// this.forceUpdate();\n\t\t\t\t\tthis.toggleEditModal(\"userEditModal\");\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t});\n\t\t}\n\t}\n\n  handleAddUser = () => {\n    //console.warn('new');\n    let userId = reactLocalStorage.get('userId', true);\n    let clientId = reactLocalStorage.get('clientId', true);\n\n    if (clientId != null && userId != null) {\n\n\n      const data = {\n        \"email\": \"\" + this.state.userMail,\n        \"name\": \"\" + this.state.userName,\n        \"password\": \"\" + this.state.userPassword,\n        \"clientId\": \"\" + clientId\n      }\n\n      axios.post(constants[\"apiUrl\"] + '/user/create', data)\n        .then((res) => {\n          let data = res.data;\n          //console.warn(JSON.stringify(data));\n          this.setState({\n            userName: '',\n            userPassword: '',\n            userMail: '',\n\n          })\n          this.toggleModal(\"userModel\");\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n    }\n  }\n\n  deleteUser = (index) => {\n\t\tlet userId = this.state.users[index].id;\n\n\t\tif (userId != null) {\n\t\t\tlet data = {\n\t\t\t\t\"userId\": userId\n\t\t\t}\n\n\t\t\taxios.post(constants[\"apiUrl\"] + '/user/delete', data)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tlet data = res.data;\n\t\t\t\t\t//console.warn(JSON.stringify(data));\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t});\n\t\t}\n\t}\n\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Users</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"success\"\n                        onClick={() => this.toggleModal(\"userModel\")}\n                        size=\"md\"\n                      >\n                        Add User\n                      </Button>\n                      <Modal\n                        className=\"modal-dialog-centered\"\n                        isOpen={this.state.userModel}\n                        toggle={() => this.toggleModal(\"userModel\")}\n                      >\n                        <div className=\"modal-header\">\n                          <h2 className=\"modal-title\" id=\"userModelLabel\">\n                            Add User\n                          </h2>\n                          <button\n                            aria-label=\"Close\"\n                            className=\"close\"\n                            data-dismiss=\"modal\"\n                            type=\"button\"\n                            onClick={() => this.toggleModal(\"userModelModel\")}\n                          >\n                            <span aria-hidden={true}>×</span>\n                          </button>\n                        </div>\n                        <div className=\"modal-body\">\n                          <form>\n                            <div class=\"form-group\">\n                              <label for=\"recipient-name\" defaultValue={this.state.userName} class=\"col-form-label\" >Name:</label>\n                              <input type=\"text\" class=\"form-control\" id=\"recipient-name\" onChange={this.handleUserName}></input>\n                            </div>\n                            <div class=\"form-group\">\n                              <label for=\"recipient-name\" defaultValue={this.state.userMail} class=\"col-form-label\" >Email:</label>\n                              <input type=\"text\" class=\"form-control\" id=\"recipient-name\" onChange={this.handleUserEmail}></input>\n                            </div>\n                            <div class=\"form-group\">\n                              <label for=\"message-text\" class=\"col-form-label\">About:</label>\n                              <textarea class=\"form-control\" id=\"message-text\"></textarea>\n                            </div>\n                            <Row>\n                              <Col sm={{ size: \"auto\" }}>\n                                <label for=\"recipient-name\" class=\"col-form-label\">Password:</label>\n                              </Col>\n                              <Col>\n                                <div className=\"align-items-center\">\n                                  <Button color=\"primary\" type=\"button\" onClick={this.handlePassword}>\n                                    Auto Generate\n                                </Button>\n                                  <text class=\"px-3\">   {this.state.userPassword} </text>\n\n                                </div>\n                              </Col>\n                            </Row>\n                          </form>\n                        </div>\n                        <div className=\"modal-footer\">\n                          <Button\n                            color=\"secondary\"\n                            data-dismiss=\"modal\"\n                            type=\"button\"\n                            onClick={() => this.toggleModal(\"userModel\")}\n                          >\n                            Cancel\n                          </Button>\n                          <Button color=\"success\" type=\"button\" onClick={this.handleAddUser}>\n                            Save\n                          </Button>\n                        </div>\n                      </Modal>\n                    </div>\n                  </Row>\n                </CardHeader>\n                {this.state.loading ?\n                  <CardBody>\n                    <div style={{ borderColor: 'black' }} className=\"text-center\">\n                      <Spinner st color=\"primary\" />\n                    </div>\n                  </CardBody>\n                  :\n                  <Table className=\"align-items-center table-flush\" responsive>\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Role</th>\n                        <th scope=\"col\">Assigned Workflow</th>\n                        <th scope=\"col\">Assigned Article</th>\n                        <th scope=\"col\"></th>\n                        <th scope=\"col\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.users.map((user, index) => {\n                        return (\n                          <tr key={index}>\n                            <th scope=\"row\">{user.name}</th>\n                            <td>\n                              <h4><span className=\"badge badge-primary\">Engineer</span></h4>\n                            </td>\n                            <td>{user.assignedWorkflows}</td>\n                            <td>{user.assignedArticles}</td>\n                            <td>\n                              <Button color=\"primary\" size=\"sm\" onClick={() => this.toggleUserModal('userViewModel', index)}>\n                                View\n                              </Button>\n                            </td>\n                            <td>\n                              <Button color=\"warning\" onClick={() => this.deleteUser(index)} size=\"sm\">\n                                Delete\n                              </Button>\n                            </td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </Table>\n                }\n              </Card>\n              <Modal\n                className=\"modal-dialog-centered\"\n                isOpen={this.state.userViewModel}\n                toggle={() => this.toggleUserModal(\"userViewModel\")}\n              >\n                <div className=\"modal-header-centered\">\n                  <div className=\"card-profile-image\">\n                    <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                      {/* {this.state.user.profile_image === null ? */}\n                      <img\n                        alt=\"...\"\n                        className=\"rounded-circle\"\n                        src={require(\"assets/img/default/defaultProfile.png\")}\n                      />\n                      {/* :\n                          <img\n                            alt=\"...\"\n                            className=\"rounded-circle\"\n                            src={require(\"assets/img/default/defaultProfile.jpg\")}\n                          />\n                        } */}\n                    </a>\n                  </div>\n                  <button aria-label=\"Close\" className=\"close\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.toggleUserModal(\"userViewModel\")}>\n                    <span aria-hidden={true}>×</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"text-center\" style={{ paddingTop: 100 }}>\n                    <h1>\n                      {this.state.userIndex != null ? this.state.users[this.state.userIndex].name : null}\n                    </h1>\n                    <div className=\"h5 font-weight-300\">\n                      <i className=\"ni location_pin mr-2\" />\n                      {this.state.userIndex != null ? this.state.users[this.state.userIndex].email : null}\n                    </div>\n                    <div className=\"h5 mt-5\">\n                      <i className=\"ni business_briefcase-24 mr-2\"></i>\n                      {this.state.userIndex != null ? this.state.users[this.state.userIndex].about : null}\n                    </div>\n                    <div className=\"\">\n                      <i className=\"ni business_briefcase-24 mr-2\" />\n                      <span class=\"badge badge-primary\">Manager</span>\n\n                      <span class=\"badge badge-primary\">Doctor</span>\n\n                      <span class=\"badge badge-primary\">HealthExpert</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <Button color=\"primary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.toggleEditModal(\"userEditModal\")}>\n                    Edit\n                  </Button>\n                  <Button color=\"warning\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.toggleUserModal(\"userViewModel\")}>\n                    Close\n                  </Button>\n                </div>\n              </Modal>\n              <Modal\n                className=\"modal-dialog-centered\"\n                isOpen={this.state.userEditModal}\n                toggle={() => this.toggleEditModal(\"userEditModal\")}\n              >\n                <div className=\"modal-header\">\n                  <h2 className=\"modal-title\" id=\"userModalLabel\">\n                    Edit Profile\n                         \t\t\t\t</h2>\n                  <button aria-label=\"Close\" className=\"close\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.toggleEditModal(\"userEditModal\")} >\n                    <span aria-hidden={true}>×</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  {this.state.user != null ?\n                    <form>\n                      <div class=\"form-group\">\n                        <label for=\"recipient-name\" class=\"col-form-label\" >Name:</label>\n                        <input type=\"text\" class=\"form-control\" id=\"recipient-name\" defaultValue={this.state.user.name} onChange={this.handleUserName}></input>\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"recipient-name\" class=\"col-form-label\" >Email:</label>\n                        <input type=\"text\" class=\"form-control\" id=\"recipient-name\" defaultValue={this.state.user.email} onChange={this.handleUserEmail}></input>\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"message-text\" class=\"col-form-label\">About:</label>\n                        <textarea class=\"form-control\" id=\"message-text\" defaultValue={this.state.user.about} onChange={this.handleAbout}></textarea>\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"recipient-name\" class=\"col-form-label\" >Password:</label>\n                        <input type=\"text\" class=\"form-control\" id=\"recipient-name\" defaultValue={this.state.user.password} onChange={this.handlePassword}></input>\n                      </div>\n                    </form>\n                    : null\n                  }\n                </div>\n                <div className=\"modal-footer\">\n                  <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.toggleEditModal(\"userEditModal\")}>\n                    Cancel\n                  </Button>\n                  <Button color=\"success\" type=\"button\" onClick={this.handleEditProfile}>\n                    Save\n                  </Button>\n                </div>\n              </Modal>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default ManagerUsers;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/SuperAdminSubscriptions.js",["316","317","318"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\n\n// reactstrap components\nimport {\n    Col,\n    Card,\n    CardHeader,\n    CardBody,\n    Row,\n    Modal,\n    Table,\n    Button,\n    Container,\n    Spinner,\n    Dropdown,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle\n} from \"reactstrap\";\n\nimport Header from \"components/Manager/Headers/EmptyHeader.js\";\n\nclass SuperAdminSubscriptions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toggleClient: false,\n            toggleStandard: false,\n            loading: true,\n            addModal: false,\n            subscriptions: [],\n            clients: [],\n            standards: [],\n            description: \"-\",\n            currentStandard: null,\n            currentClient: null,\n        };\n    }\n\n    componentDidMount() {\n\n        let type = reactLocalStorage.get('userType', true);\n\n        if (type == 3) {\n            axios.post(constants[\"apiUrl\"] + '/admin/getSubscriptions')\n            .then((res) => {\n                let data = res.data;\n                this.setState({\n                    subscriptions: data.subscriptions,\n                    loading: false\n                })\n            })\n            .catch((error) => {\n                console.warn(JSON.stringify(error));\n            });\n\n            axios.post(constants[\"apiUrl\"] + '/admin/getClients')\n                .then((res) => {\n                    let data = res.data;\n                    this.setState({\n                        clients: data.clients,\n                        loading: false\n                    })\n                })\n                .catch((error) => {\n                    console.warn(JSON.stringify(error));\n                });\n\n            axios.post(constants[\"apiUrl\"] + '/admin/getStandards')\n                .then((res) => {\n                    let data = res.data;\n                    console.log(data);\n                    this.setState({\n                        standards: data.standards,\n                        loading: false\n                    })\n                })\n                .catch((error) => {\n                    console.warn(JSON.stringify(error));\n                });\n\n        } else {\n          this.props.history.push(\"/login\");\n        }\n\n        \n    }\n\n    toggleDropdown = (state) => {\n        this.setState({\n            [state]: !this.state[state]\n        });\n    };\n\n    openAddModal = () => {\n        this.setState({\n            addModal: true,\n        })\n    }\n\n    closeAddModal = () => {\n        this.setState({\n            addModal: false,\n            currentClient: null,\n            currentStandard: null,\n            description: '-'\n        })\n    }\n\n    handleDesc = (event) => {\n        this.setState({ description: event.target.value });\n    }\n\n    selectStandard = (standard) => {\n        this.setState({\n            currentStandard: standard\n        })\n    }\n\n    selectClient = (client) => {\n        this.setState({\n            currentClient: client\n        })\n    }\n\n    handleDeleteSub = (subscription, index) => {\n        let subscriptionId = subscription.id;\n        console.log(subscriptionId)\n        if (subscriptionId != null) {\n            const data = {\n                'subscriptionId': '' + subscriptionId\n            }\n            \n            let updatedSubscriptions = [...this.state.subscriptions];\n            updatedSubscriptions.splice(index, 1); \n\n            axios.post(constants[\"apiUrl\"] + '/admin/deleteSubcription', data)\n                .then((res) => {\n                    let data = res.data;\n                    this.setState({\n                        subscriptions: updatedSubscriptions\n                    })\n                })\n                .catch((error) => {\n                    console.warn(JSON.stringify(error));\n                });\n        }\n    }\n\n    handleAdd = () => {\n        if (this.state.currentStandard != null && this.state.currentClient != null) {\n            let standardId = this.state.currentStandard.id;\n            let clientId = this.state.currentClient.id;\n\n            const data = {\n                \"clientId\": clientId,\n                \"standardId\": standardId,\n                \"notes\": this.state.description\n            }\n            axios.post(constants[\"apiUrl\"] + '/admin/addSubscription', data)\n                .then((res) => {\n                    let data = res.data;\n                    data.sub.client = this.state.currentClient;\n                    data.sub.standard = this.state.currentStandard;\n                    let updatedSubscriptions = [...this.state.subscriptions];\n                    updatedSubscriptions.push(data.sub);\n                    console.log(data);\n                    this.setState({\n                        subscriptions: updatedSubscriptions\n                    })\n                    this.forceUpdate();\n                    this.closeAddModal();\n                })\n                .catch((error) => {\n                    console.warn(JSON.stringify(error));\n                });\n        }\n    }\n\n\n\n\n\n    render() {\n        return (\n            <>\n                <Header />\n                {/* Page content */}\n                <Container className=\"mt--7\" fluid>\n                    <Row className=\"mt-5\">\n                        <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n                            <Card className=\"shadow\">\n                                <CardHeader className=\"border-0\">\n                                    <Row className=\"align-items-center\">\n                                        <div className=\"col\">\n                                            <h3 className=\"mb-0\">Subscriptions</h3>\n                                        </div>\n                                        <div className=\"col text-right\">\n                                            <Button color=\"success\" onClick={() => this.openAddModal()} size=\"md\">\n                                                Add Subscription\n                                            </Button>\n                                        </div>\n                                    </Row>\n                                </CardHeader>\n                                {this.state.loading ?\n                                    <CardBody>\n                                        <div style={{ borderColor: 'black' }} className=\"text-center\">\n                                            <Spinner st color=\"primary\" />\n                                        </div>\n                                    </CardBody>\n                                    :\n                                    <Table className=\"align-items-center table-flush\" responsive>\n                                        <thead className=\"thead-light\">\n                                            <tr>\n                                                <th scope=\"col\">Standard</th>\n                                                <th scope=\"col\">Client</th>\n                                                <th scope=\"col\">Details</th>\n                                                <th scope=\"col\"></th>\n                                                {/* <th scope=\"col\">Assigned Article</th> */}\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.subscriptions.map((sub, index) => {\n                                                return (\n                                                    <tr key={index}>\n                                                        <th scope=\"row\">\n                                                            {sub.standard.name}\n                                                        </th>\n                                                        <td>\n                                                            {sub.client.name}\n                                                        </td>\n                                                        <td style={{ maxWidth: 150 }}>\n                                                            <text style={{ whiteSpace: 'pre-wrap', overflowWrap: 'break-word' }}>\n                                                                {sub.notes ? sub.notes : '-'}\n                                                            </text>\n                                                        </td>\n                                                        {/* <td>\n                                                            <Link to={{\n                                                                pathname: '/master/view/client/' + 2,\n                                                            }}>\n                                                                <Button color=\"primary\" size=\"sm\">\n                                                                    View\n                                                        </Button>\n                                                            </Link>\n                                                        </td> */}\n                                                        <td>\n                                                            <Button color=\"danger\" onClick={() => this.handleDeleteSub(sub, index)} size=\"sm\">\n                                                                Delete\n                                                            </Button>\n                                                        </td>\n\n                                                    </tr>\n                                                )\n                                            })}\n                                        </tbody>\n                                    </Table>\n                                }\n                            </Card>\n                            <Modal\n                                className=\"modal-dialog-centered\"\n                                isOpen={this.state.addModal}\n                                defaultValue={this.state.addModal}\n                                toggle={() => this.closeAddModal()}\n                            >\n                                <div className=\"modal-header\">\n                                    <h2 className=\"modal-title\" id=\"assignModelLabel\">\n                                        Add New Subscription\n                                            </h2>\n                                    <button aria-label=\"Close\" className=\"close\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeAddModal()}>\n                                        <span aria-hidden={true}>×</span>\n                                    </button>\n                                </div>\n                                <div className=\"modal-body\">\n                                    <Row className=\"justify-content-md-center\">\n                                        <Col xl=\"auto\">\n                                            <Dropdown isOpen={this.state.toggleStandard} toggle={() => this.toggleDropdown(\"toggleStandard\")}>\n                                                <DropdownToggle caret>\n                                                    {this.state.currentStandard == null ? <>Select Standard</> : this.state.currentStandard.name}\n                                                </DropdownToggle>\n                                                <DropdownMenu>\n                                                    {this.state.standards.map((standard, index) => {\n                                                        return (\n                                                            <DropdownItem key={index} onClick={() => this.selectStandard(standard)}>{standard.name}</DropdownItem>\n                                                        )\n                                                    })}\n                                                    {/* {this.state.roles.map((role, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.tempRoles.some(r => r.id === role.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem disabled key={index} onClick={() => this.selectRole(role)}>{role.name}</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem key={index} onClick={() => this.selectRole(role)}>{role.name}</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})} */}\n                                                </DropdownMenu>\n                                            </Dropdown>\n                                        </Col>\n                                        <Col xl=\"auto\">\n                                            <Dropdown isOpen={this.state.toggleClient} toggle={() => this.toggleDropdown(\"toggleClient\")}>\n                                                <DropdownToggle caret>\n                                                    {/* Select */}\n                                                    {this.state.currentClient == null ? <>Select Client</> : this.state.currentClient.name}\n                                                </DropdownToggle>\n                                                <DropdownMenu>\n                                                    {this.state.clients.map((client, index) => {\n                                                        return (\n                                                            <DropdownItem key={index} onClick={() => this.selectClient(client)}>{client.name}</DropdownItem>\n                                                        )\n                                                    })}\n                                                    {/* {this.state.roles.map((role, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.tempRoles.some(r => r.id === role.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem disabled key={index} onClick={() => this.selectRole(role)}>{role.name}</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem key={index} onClick={() => this.selectRole(role)}>{role.name}</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})} */}\n                                                </DropdownMenu>\n                                            </Dropdown>\n                                        </Col>\n                                    </Row>\n                                    <Row style={{ paddingTop: '25px' }} className=\"justify-content-md-center\">\n                                        <Col xl>\n                                            <form>\n                                                <div class=\"form-group\">\n                                                    <label for=\"recipient-name\" class=\"col-form-label\">Notes:</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"recipient-name\" onChange={this.handleDesc}></input>\n                                                </div>\n                                            </form>\n                                        </Col>\n                                    </Row>\n                                </div>\n                                <div className=\"modal-footer\">\n                                    <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeAddModal()}>\n                                        Cancel\n                                    </Button>\n                                    <Button color=\"success\" type=\"button\" onClick={() => this.handleAdd()}>\n                                        Add\n                                    </Button>\n                                </div>\n                            </Modal>\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        );\n    }\n}\n\nexport default SuperAdminSubscriptions;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/SuperAdminStandards.js",["319","320","321","322","323","324","325","326"],"/*! Developed by Alinon */\nimport React, { version } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Table,\n  Container,\n  Row,\n  Col,\n  Spinner,\n  Modal\n} from \"reactstrap\";\n\nimport EmptyHeader from \"components/Manager/Headers/EmptyHeader.js\";\n\nclass SuperAdminStandards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      standards: [],\n      loading: false,\n      addModal: false,\n      name: null,\n      desc: null,\n      version: null,\n      index: null,\n      editModal: false,\n    };\n  }\n\n  componentDidMount() {\n\n    let type = reactLocalStorage.get('userType', true);\n\n    if (type == 3) {\n      axios.post(constants[\"apiUrl\"] + '/admin/getStandards')\n      .then((res) => {\n        let data = res.data;\n        this.setState({\n          standards: data.standards,\n          loading: false\n        })\n      })\n      .catch((error) => {\n        console.warn(JSON.stringify(error));\n      });\n    }\n    else {\n      this.props.history.push(\"/login\")\n    }\n    \n  }\n\n  openAddModal = () => {\n    this.setState({\n      addModal: true,\n    })\n  }\n\n  closeAddModal = () => {\n    this.setState({\n      addModal: false,\n      name: null,\n      description: null,\n      version: null,\n    })\n  }\n\n  handleName = (event) => {\n    this.setState({\n      name: event.target.value\n    })\n\n  }\n\n  handleDesc = (event) => {\n    this.setState({\n      desc: event.target.value\n    })\n  }\n\n  handleVersion = (event) => {\n    this.setState({\n      version: event.target.value\n    })\n    \n  }\n\n  handleAdd = () => {\n\n    if (this.state.name != null && this.state.desc != null & this.state.version != null) {\n      const data = {\n        \"name\": this.state.name,\n        \"description\": this.state.desc,\n        \"version\": this.state.version\n      }\n      axios.post(constants[\"apiUrl\"] + '/admin/addStandard', data)\n        .then((res) => {\n          let data = res.data;\n          console.warn(res.data)\n          let temp = this.state.standards\n          temp.push(data.standard)\n          this.setState({\n            standards: temp,\n          })\n          this.closeAddModal()\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n    }\n    \n    \n  }\n\n  handleRemove = (id) => {\n    const data = {\n      \"standardId\" : id\n    }\n    axios.post(constants[\"apiUrl\"] + '/admin/deleteStandard', data)\n        .then((res) => {\n          let data = res.data;\n          console.warn(res.data)\n          if (data.done == 1) {\n            let temp = this.state.standards.filter(standard => standard.id != id)\n            this.setState({\n              standards: temp\n            })\n            this.forceUpdate()\n          }\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n  }\n\n  openEditModal = (id) => {\n    let temp = this.state.standards.filter(standard => standard.id == id)\n    this.setState({\n      index: temp[0].id,\n      name: temp[0].name,\n      desc: temp[0].description,\n      version: temp[0].version,\n      editModal: true,\n    })\n\n    this.forceUpdate()\n  }\n\n  closeEditModal = () => {\n    this.setState({\n      name: null,\n      desc: null,\n      version: null,\n      editModal: false\n    })\n  }\n\n  handleEdit = () => {\n    const data = {\n      \"name\": this.state.name,\n      \"description\": this.state.desc,\n      \"version\": this.state.version,\n      \"standardId\": this.state.index,\n    }\n\n    axios.post(constants[\"apiUrl\"] + '/admin/editStandard', data)\n        .then((res) => {\n          let data = res.data;\n          console.warn(res.data)\n          let index = this.state.standards.findIndex(standard => standard.id == data.standard.id)\n          let temp = this.state.standards\n          temp[index].name = data.standard.name\n          temp[index].description = data.standard.description\n          temp[index].version = data.standard.version\n          this.setState({\n            standards: temp\n          })\n          this.forceUpdate()\n          this.closeEditModal()\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n\n  }\n\n  render() {\n    return (\n      <>\n        <EmptyHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row className=\"mt-5\">\n            <Col xl>\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Current Standards</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button color=\"success\" onClick={() => this.openAddModal()} size=\"md\">\n                        Add Standard\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                {this.state.loading ?\n                  <CardBody>\n                    <div style={{ borderColor: 'black' }} className=\"text-center\">\n                      <Spinner st color=\"primary\" />\n                    </div>\n                  </CardBody>\n                  :\n                  <Table className=\"align-items-center table-flush\" responsive>\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Article Count</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Version</th>\n                        <th scope=\"col\"></th>\n                        \n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.standards.map((standard, index) => {\n                        return (\n                          <tr key={index}>\n                            <th style={{width: 80}} scope=\"row\">\n                              {standard.name}\n                            </th>\n                            <td className=\"col text-center\" style={{width: 30}}>\n                              {standard.articleCount ? standard.articleCount : \"-\"}\n                            </td>\n                            <td style={{ maxWidth: 150 }}>\n                              <text style={{ whiteSpace: 'pre-wrap', overflowWrap: 'break-word' }}>\n                                {standard.description ? standard.description : '-'}\n                              </text>\n                            </td>\n                            <td style={{width: 30}}>\n                              {standard.version}\n                            </td>\n                            <td style={{width: 40}}>\n                              <Link to={{\n                                pathname: '/master/view/standard/' + standard.id,\n                              }}>\n                                <Button color=\"primary\" size=\"sm\">\n                                  View\n                                </Button>\n                              </Link>\n                              <Button style={{marginLeft:10}} color=\"primary\" size=\"sm\" onClick={() => this.openEditModal(standard.id)}>\n                                  Edit\n                              </Button>\n                              <Button color=\"danger\" size=\"sm\" onClick={() => this.handleRemove(standard.id)}>\n                                Delete\n                              </Button>\n                              </td>\n                          </tr>\n                        )\n                      })}\n\n                    </tbody>\n                  </Table>\n                }\n              </Card>\n              <Modal\n                className=\"modal-dialog-centered\"\n                isOpen={this.state.addModal}\n                defaultValue={this.state.addModal}\n                toggle={() => this.closeAddModal()}\n              >\n                <div className=\"modal-header\">\n                  <h2 className=\"modal-title\" id=\"assignModelLabel\">\n                    Add New Standard\n                                </h2>\n                  <button\n                    aria-label=\"Close\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    type=\"button\"\n                    onClick={() => this.closeAddModal()}\n                  >\n                    <span aria-hidden={true}>×</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <form>\n                    <div className=\"form-group\">\n                      <label for=\"recipient-name\" defaultValue={this.state.name} class=\"col-form-label\" >Name:</label>\n                      <input type=\"text\" class=\"form-control\" id=\"recipient-name\" onChange={this.handleName}></input>\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"message-text\" class=\"col-form-label\" defaultValue={this.state.desc}>Description:</label>\n                      <textarea class=\"form-control\" id=\"message-text\" id=\"message-text\" onChange={this.handleDesc}></textarea>\n                    </div>\n                    <div className=\"form-group\">\n                      <label for=\"recipient-version\" defaultValue={this.state.version} class=\"col-form-label\" >Version</label>\n                      <input type=\"number\" class=\"form-control\" id=\"recipient-version\" onChange={this.handleVersion}></input>\n                    </div>\n                  </form>\n                </div>\n                <div className=\"modal-footer\">\n                  <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeAddModal()}>\n                    Cancel\n                                                </Button>\n                  <Button color=\"success\" type=\"button\" onClick={() => this.handleAdd()}>\n                    Add\n                                                </Button>\n                </div>\n              </Modal>\n              <Modal\n                className=\"modal-dialog-centered\"\n                isOpen={this.state.editModal}\n                defaultValue={this.state.editModal}\n                toggle={() => this.EditAddModal()}\n              >\n                <div className=\"modal-header\">\n                  <h2 className=\"modal-title\" id=\"assignModelLabel\">\n                    Add New Standard\n                                </h2>\n                  <button\n                    aria-label=\"Close\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    type=\"button\"\n                    onClick={() => this.closeEditModal()}\n                  >\n                    <span aria-hidden={true}>×</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <form>\n                    <div className=\"form-group\">\n                      <label for=\"recipient-name\" defaultValue={this.state.name} class=\"col-form-label\" >Name:</label>\n                      <input type=\"text\" class=\"form-control\" id=\"recipient-name\" value={this.state.name} onChange={this.handleName}></input>\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"message-text\" class=\"col-form-label\" defaultValue={this.state.desc}>Description:</label>\n                      <textarea class=\"form-control\" id=\"message-text\" value={this.state.desc} id=\"message-text\" onChange={this.handleDesc}></textarea>\n                    </div>\n                    <div className=\"form-group\">\n                      <label for=\"recipient-version\" defaultValue={this.state.version} class=\"col-form-label\" >Version</label>\n                      <input type=\"number\" class=\"form-control\" value = {this.state.version} id=\"recipient-version\" onChange={this.handleVersion}></input>\n                    </div>\n                  </form>\n                </div>\n                <div className=\"modal-footer\">\n                  <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeEditModal()}>\n                    Cancel\n                                                </Button>\n                  <Button color=\"success\" type=\"button\" onClick={() => this.handleEdit()}>\n                    Save\n                                                </Button>\n                </div>\n              </Modal>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default SuperAdminStandards;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/SuperAdminIndex.js",["327","328","329","330","331","332","333","334"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\n\n// reactstrap components\nimport {\n\tButton,\n\tCard,\n\tCardHeader,\n\tTable,\n\tContainer,\n\tRow,\n\tModal,\n\tCol,\n\tDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem,\n\tSpinner\n} from \"reactstrap\";\n\nimport DashboardHeader from \"components/SuperAdmin/Headers/DashboardHeader.js\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport { createPrinter } from \"typescript\";\nimport EmptyHeader from \"components/Manager/Headers/EmptyHeader.js\";\n// import Roles from \"./Popups/Roles.js\"\n\nclass SuperAdminIndex extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdocumentModel: false,\n\t\t\troleModel: false,\n\t\t\tuserModal: false,\n\t\t\tuserEditModal: false,\n\t\t\ttoggleDropdown: false,\n\t\t\ttotalUsers: 0,\n\t\t\tpendAudits: 0,\n\t\t\tcompAudits: 0,\n\t\t\tsubsStandards: 0,\n\t\t\tuser: null,\n\t\t\tdocumentName: '',\n\t\t\tdocumentDesc: '',\n\t\t\tdocumentIndex: null,\n\t\t\tuserIndex: null,\n\t\t\tuploadDocument: null,\n\t\t\tcurrentRole: null,\n\t\t\tloading: false,\n\t\t\tabout: '',\n\t\t\tname: '',\n\t\t\tpassword: '',\n\t\t\temail: '',\n\t\t\tclients: [],\n\t\t\tstandards: [],\n\t\t\tsubscriptions: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tlet type = reactLocalStorage.get('userType', true);\n\t\tconsole.warn(type)\n\t\tif (type == 3) {\n\t\t\tconsole.warn(\"here\")\n\t\t\taxios.post(constants[\"apiUrl\"] + '/admin/getDashboard')\n\t\t\t.then((res) => {\n\t\t\t\tlet data = res.data;\n\t\t\t\tconsole.warn(data)\n\t\t\t\tthis.setState({\n\t\t\t\t\tstandards: data.standards,\n\t\t\t\t\tclients: data.clients,\n\t\t\t\t\tsubscriptions: data.subscriptions\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t});\n\n\t\t}\n\t\telse {\n\t\t\tthis.props.history.push(\"/login\")\n\t\t}\n\n\t\t\n\t\t\n\t}\n\n\t\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<EmptyHeader\n\t\t\t\t/>\n\t\t\t\t{/* Page content */}\n\t\t\t\t<Container className=\"mt--7\" fluid>\n\t\t\t\t\t<Row className=\"mt-5\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Standards</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/master/standards',\n\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"Food Quality 1.3\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"success\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tSee All\n                        \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\" responsive>\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Description</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Version</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t{this.state.standards.map(standard => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th style={{width: 80}} scope=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{standard.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{ maxWidth: 150 }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<text style={{ whiteSpace: 'pre-wrap', overflowWrap: 'break-word' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{standard.description ? standard.description : '-'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{width: 40}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{standard.version}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{width: 40}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/master/view/standard/' + standard.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tView\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"mt-5\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Clients</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/master/clients',\n\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"Food Quality 1.3\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tSee All\n                        \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\" responsive>\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">User Count</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Description</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Website</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.clients.map(client => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th style={{width: 80}} scope=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{client.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{width: 40}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{client.user_count}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{ maxWidth: 150 }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<text style={{ whiteSpace: 'pre-wrap', overflowWrap: 'break-word' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{client.description ? client.description : '-'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{width: 40}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{client.website}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{width: 40}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/master/view/client/' + client.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tView\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"mt-5\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Subscriptions</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/master/subscription',\n\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"Food Quality 1.3\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tSee All\n                        \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\" responsive>\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Client</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Standard</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Notes</th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.subscriptions.map(sub => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope = \"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{sub.client.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{sub.standard.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{sub.notes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default SuperAdminIndex;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/SuperAdminClients.js",["335","336","337","338","339","340","341","342"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\n\n// reactstrap components\nimport {\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Modal,\n  Table,\n  Button,\n  Container,\n  Spinner,\n} from \"reactstrap\";\n\nimport Header from \"components/Manager/Headers/EmptyHeader.js\";\nimport { invalid } from \"moment\";\n\nclass SuperAdminClients extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      addModal: false,\n      editModal: false,\n      invalid: false,\n      currentClient: null,\n      clientIndex: null,\n      clients: [],\n      name: \"\",\n      website: \"\",\n      description: \"\",\n      userCount: 5,\n    };\n  }\n\n  componentDidMount() {\n\n    let type = reactLocalStorage.get('userType', true);\n\n\n    if (type == 3) {\n      axios.post(constants[\"apiUrl\"] + '/admin/getClients')\n      .then((res) => {\n        let data = res.data;\n        this.setState({\n          clients: data.clients,\n          loading: false\n        })\n      })\n      .catch((error) => {\n        console.warn(JSON.stringify(error));\n      });\n    } else {\n      this.props.history.push(\"/login\");\n    }\n\n    \n  }\n\n  openAddModal = () => {\n    this.setState({\n      addModal: true,\n    })\n  }\n\n  openEditModal = (client, index) => {\n    this.setState({\n      editModal: true,\n      currentClient: client,\n      clientIndex: index\n    })\n  }\n\n  closeAddModal = () => {\n    this.setState({\n      addModal: false,\n      name: '',\n      description: '',\n      website: '',\n      userCount: 5,\n      invalid: false\n    })\n  }\n\n  closeEditModal = () => {\n    this.setState({\n      editModal: false,\n      currentClient: null,\n      clientIndex: null,\n      invalid: false\n    })\n  }\n\n  handleName = (event) => {\n    this.setState({\n      name: event.target.value\n    })\n  }\n\n  handleDesc = (event) => {\n    this.setState({\n      description: event.target.value\n    })\n  }\n\n  handleWebsite = (event) => {\n    this.setState({\n      website: event.target.value\n    })\n  }\n\n  handleUserCount = (event) => {\n    this.setState({\n      userCount: event.target.value\n    })\n  }\n\n  handleAdd = () => {\n    if (this.state.name != '' && this.state.description != '' & this.state.website != '') {\n      const data = {\n        \"name\": this.state.name,\n        \"description\": this.state.description,\n        \"website\": this.state.website,\n        'user_count': this.state.userCount,\n        'profile_image': '-'\n      }\n\n      axios.post(constants[\"apiUrl\"] + '/admin/createClient', data)\n        .then((res) => {\n          let data = res.data;\n          let updatedClients = [...this.state.clients];\n          updatedClients.push(data.client);\n          this.setState({\n            clients: updatedClients,\n          })\n          this.closeAddModal()\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n    }\n    else {\n      this.setState({\n        invalid: true\n      })\n    }\n  }\n\n  handleDelete = (client, index) => {\n    if (client != null) {\n      const data = {\n        \"clientId\": client.id\n      }\n      let updatedClients = [...this.state.clients];\n      updatedClients.splice(index, 1);\n      axios.post(constants[\"apiUrl\"] + '/admin/deleteClient', data)\n        .then((res) => {\n          let data = res.data;\n          this.setState({\n            clients: updatedClients,\n          })\n          this.closeAddModal()\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n    }\n  }\n\n  handleEdit = () => {\n    if (this.state.currentClient != null) {\n      const data = {\n        \"clientId\": this.state.currentClient,\n        \"name\": this.state.name,\n        \"description\": this.state.description,\n        \"website\": this.state.website,\n        'user_count': this.state.userCount,\n        'profile_image': '-'\n      }\n      let updatedClients = [...this.state.clients];\n      axios.post(constants[\"apiUrl\"] + '/admin/editClient', data)\n        .then((res) => {\n          let data = res.data;\n          updatedClients[this.state.clientIndex] = data.client\n          this.setState({\n            clients: updatedClients,\n          })\n          this.closeEditModal()\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n    }\n  }\n\n\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Clients</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button color=\"success\" onClick={() => this.openAddModal()} size=\"md\">\n                        Add Client\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                {this.state.loading ?\n                  <CardBody>\n                    <div style={{ borderColor: 'black' }} className=\"text-center\">\n                      <Spinner st color=\"primary\" />\n                    </div>\n                  </CardBody>\n                  :\n                  <Table className=\"align-items-center table-flush\" responsive>\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">User Count</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Website</th>\n                        <th scope=\"col\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.clients.map((client, index) => {\n                        return (\n                          <tr key={index}>\n                            <th scope=\"row\">\n                              {client.name}\n                            </th>\n                            <td>\n                              {client.user_count ? client.user_count : \"-\"}\n                            </td>\n                            <td style={{ maxWidth: 150 }}>\n                              <text style={{ whiteSpace: 'pre-wrap', overflowWrap: 'break-word' }}>\n                                {client.description ? client.description : \"-\"}\n                              </text>\n                            </td>\n                            <td>\n                              {client.website}\n                            </td>\n                            <td>\n                              <Link to={{\n                                pathname: '/master/view/client/' + client.id,\n                              }}>\n                                <Button color=\"primary\" size=\"sm\">\n                                  View\n                                </Button>\n                              </Link>\n                              <Button style={{marginLeft:10}} color=\"primary\" size=\"sm\" onClick={() => this.openEditModal(client, index)}>\n                                Edit\n                              </Button>\n                              <Button color=\"danger\" size=\"sm\" onClick={() => this.handleDelete(client, index)}>\n                                Delete\n                                </Button>\n                            </td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </Table>\n                }\n              </Card>\n              <Modal\n                className=\"modal-dialog-centered\"\n                isOpen={this.state.addModal}\n                defaultValue={this.state.addModal}\n                toggle={() => this.closeAddModal()}\n              >\n                <div className=\"modal-header\">\n                  <h2 className=\"modal-title\" id=\"assignModelLabel\">\n                    Add New Client\n                  </h2>\n                  <button aria-label=\"Close\" className=\"close\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeAddModal()}>\n                    <span aria-hidden={true}>×</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <form>\n                    <div className=\"form-group\">\n                      <label for=\"recipient-name\" defaultValue={this.state.name} class=\"col-form-label\" >Name:</label>\n                      <input type=\"text\" class=\"form-control\" id=\"recipient-name\" onChange={this.handleName}></input>\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"message-text\" class=\"col-form-label\" defaultValue={this.state.desc}>Description:</label>\n                      <textarea class=\"form-control\" id=\"message-text\" id=\"message-text\" onChange={this.handleDesc}></textarea>\n                    </div>\n                    <div className=\"form-group\">\n                      <label for=\"recipient-website\" defaultValue={this.state.version} class=\"col-form-label\" >Website</label>\n                      <input type=\"link\" class=\"form-control\" id=\"recipient-website\" onChange={this.handleWebsite}></input>\n                    </div>\n                    <div className=\"form-group\">\n                      <label for=\"recipient-UserCount\" class=\"col-form-label\" >User Count</label>\n                      <input type=\"number\" defaultValue={5} class=\"form-control\" id=\"recipient-number\" onChange={this.handleUserCount}></input>\n                    </div>\n                  </form>\n                  {this.state.invalid ?\n                    <div className=\"text-center\">\n                      <text style={{ color: 'red' }}>Invalid Fields</text>\n                    </div>\n                    :\n                    null}\n                </div>\n                <div className=\"modal-footer\">\n                  <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeAddModal()}>\n                    Cancel\n                  </Button>\n                  <Button color=\"success\" type=\"button\" onClick={() => this.handleAdd()}>\n                    Add\n                  </Button>\n                </div>\n              </Modal>\n              <Modal\n                className=\"modal-dialog-centered\"\n                isOpen={this.state.editModal}\n                defaultValue={this.state.editModal}\n                toggle={() => this.closeEditModal()}\n              >\n                <div className=\"modal-header\">\n                  <h2 className=\"modal-title\" id=\"assignModelLabel\">\n                    Edit Client\n                  </h2>\n                  <button aria-label=\"Close\" className=\"close\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeEditModal()}>\n                    <span aria-hidden={true}>×</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  {this.state.currentClient ?\n                    <form>\n\n                      <div className=\"form-group\">\n                        <label for=\"recipient-name\" class=\"col-form-label\" >Name:</label>\n                        <input type=\"text\" defaultValue={this.state.currentClient.name} class=\"form-control\" id=\"recipient-name\" onChange={this.handleName}></input>\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"message-text\" class=\"col-form-label\">Description:</label>\n                        <textarea style={{ height: 100 }} class=\"form-control\" defaultValue={this.state.currentClient.description} id=\"message-text\" id=\"message-text\" onChange={this.handleDesc}></textarea>\n                      </div>\n                      <div className=\"form-group\">\n                        <label for=\"recipient-website\" class=\"col-form-label\" >Website</label>\n                        <input type=\"link\" class=\"form-control\" defaultValue={this.state.currentClient.website} id=\"recipient-website\" onChange={this.handleWebsite}></input>\n                      </div>\n                      <div className=\"form-group\">\n                        <label for=\"recipient-UserCount\" class=\"col-form-label\" >User Count</label>\n                        <input type=\"number\" defaultValue={5} class=\"form-control\" id=\"recipient-number\" onChange={this.handleUserCount}></input>\n                      </div>\n                    </form>\n                    :\n                    null\n                  }\n                </div>\n                <div className=\"modal-footer\">\n                  <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeEditModal()}>\n                    Cancel\n                  </Button>\n                  <Button color=\"success\" type=\"button\" onClick={() => this.handleEdit()}>\n                    Save\n                  </Button>\n                </div>\n              </Modal>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default SuperAdminClients;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/Views/Audit.js",["343","344","345"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../../constants.js';\nimport { Link } from \"react-router-dom\";\n\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Spinner,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nimport Header from \"components/User/Headers/EmptyHeader.js\";\n\nclass Audits extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    //Check if auth token in valid\n    let userId = reactLocalStorage.get('userId', true);\n    let clientId = reactLocalStorage.get('clientId', true);\n\n    let type = reactLocalStorage.get('userType', true);\n\n    if (type == 1) {\n      if (clientId != null && userId != null) {\n        const data = {\n          \"clientId\": clientId,\n          \"userId\": userId\n        }\n        axios.post(constants[\"apiUrl\"] + '/articles/getAssigned', data)\n          .then((res) => {\n            let data = res.data;\n            console.warn(JSON.stringify(data));\n            this.setState({\n              articles: data.articles,\n              loading: false\n            })\n          })\n          .catch((error) => {\n            console.warn(JSON.stringify(error));\n          });\n      } else {\n        this.props.history.push(\"/login\");\n      }\n    }\n    else {\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row className=\"mt-5\">\n            <Col xl>\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Assigned Articles</h3>\n                    </div>\n                  </Row>\n                </CardHeader>\n                {this.state.loading ?\n                  <CardBody>\n                    <div style={{ borderColor: 'black' }} className=\"text-center\">\n                      <Spinner st color=\"primary\" />\n                    </div>\n                  </CardBody>\n                  :\n                  <Table className=\"align-items-center table-flush\" responsive>\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">CheckList Count</th>\n                        <th scope=\"col\">Assigned By</th>\n                        <th scope=\"col\">Due By</th>\n                        <th scope=\"col\">Standard</th>\n                        <th scope=\"col\">Progress</th>\n                        <th scope=\"col\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.articles.map(article => {\n                        { this.state.pathname = '/user/view/article/' + article.id }\n                        return (\n                          <tr>\n                            <th scope=\"row\">{article.name}</th>\n                            <td>{article.checklistCount}</td>\n                            <td>{article.assignedBy.name}</td>\n                            <td>-</td>\n                            <td>{article.standard.name}</td>\n                            <td>\n                              <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                              {Number.isInteger(article.progress) ? article.progress : article.progress.toFixed(2)}%\n                          </td>\n                            <td>\n                              <Link to={{\n                                pathname: this.state.pathname,\n                                state: {\n                                  name: \"Food Quality 1.3\"\n                                }\n                              }}>\n                                <Button\n                                  color=\"primary\"\n                                  size=\"sm\"\n                                >\n                                  View\n                                </Button>\n                              </Link>\n                            </td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </Table>\n                }\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Audits;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/Views/Profile.js",["346"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport axios from 'axios';\nimport { constants } from '../../../constants';\nimport { reactLocalStorage } from 'reactjs-localstorage';\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Col,\n  Button,\n  Modal,\n  Spinner\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"../Headers/EmptyHeader\";\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      loading: true,\n      userModal: false,\n      username: '',\n      password: '',\n      email: '',\n      about: '',\n    }\n  }\n\n  componentDidMount() {\n    let userId = reactLocalStorage.get('userId', true);\n\n    let type = reactLocalStorage.get('userType', true);\n\n    if (type == 1) {\n      if (userId != null) {\n        const data = {\n          \"userId\": userId\n        }\n        axios.post(constants[\"apiUrl\"] + '/user/getUser', data)\n          .then((res) => {\n            let data = res.data;\n            console.warn(data.user);\n            this.setState({\n              user: data.user,\n              loading: false\n            })\n          })\n          .catch((error) => {\n            console.warn(JSON.stringify(error));\n          });\n      } else {\n        this.props.history.push(\"/login\");\n      }\n    }\n    else {\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  toggleModal = state => {\n    this.setState({\n      [state]: !this.state[state],\n      username: this.state.user.name,\n      email: this.state.user.email,\n      about: this.state.user.about,\n    });\n  };\n\n  handlePassword = (event) => {\n    this.setState({\n      password: event.target.value\n    })\n  }\n\n  handleUserEmail = (event) => {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handleUserName = (event) => {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  handleAbout = (event) => {\n    this.setState({\n      about: event.target.value\n    });\n  }\n\n  handleEditProfile = () => {\n    let userId = reactLocalStorage.get('userId', true);\n    let clientId = reactLocalStorage.get('clientId', true);\n\n    if (clientId != null && userId != null) {\n      let data;\n      if (this.state.password === '') {\n        data = {\n          \"about\": \"\" + this.state.about,\n          \"name\": \"\" + this.state.username,\n          \"userId\": \"\" + userId\n        }\n      }\n      else {\n        data = {\n          \"about\": \"\" + this.state.about,\n          \"name\": \"\" + this.state.username,\n          \"password\": \"\" + this.state.password,\n          \"userId\": \"\" + userId\n        }\n      }\n\n      axios.post(constants[\"apiUrl\"] + '/user/update', data)\n        .then((res) => {\n          let data = res.data;\n          this.setState({\n            username: '',\n            password: '',\n            email: '',\n            about: '',\n            user: data.user\n          })\n          this.toggleModal(\"userModal\");\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row className=\"justify-content-center\">\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"5\">\n              <Card className=\"card-profile shadow\">\n                {this.state.loading ?\n                  <CardBody>\n                    <div style={{ borderColor: 'black' }} className=\"text-center\">\n                      <Spinner st color=\"primary\" />\n                    </div>\n                  </CardBody>\n                  :\n                  <>\n                    <Row className=\"justify-content-center\">\n                      <Col className=\"order-lg-2\" lg=\"3\">\n                        <div className=\"card-profile-image\">\n                          <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                            {this.state.user.profile_image === null ?\n                              <img\n                                alt=\"...\"\n                                className=\"rounded-circle\"\n                                src={require(\"assets/img/default/defaultProfile.png\")}\n                              />\n                              :\n                              <img\n                                alt=\"...\"\n                                className=\"rounded-circle\"\n                                src={require(\"assets/img/default/defaultProfile.jpg\")}\n                              />\n                            }\n                          </a>\n                        </div>\n                      </Col>\n                    </Row>\n                    <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                    </CardHeader>\n                    <CardBody className=\"pt-0 pt-md-4\">\n                      <Row>\n                        <div className=\"col\">\n                          <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                            <div>\n                              <span className=\"heading\"></span>\n                              <span className=\"description\"></span>\n                            </div>\n                            <div>\n                              <span className=\"heading\"></span>\n                              <span className=\"description\"></span>\n                            </div>\n                            <div>\n                              <span className=\"heading\"></span>\n                              <span className=\"description\"></span>\n                            </div>\n                          </div>\n                        </div>\n                      </Row>\n                      <div className=\"text-center\">\n                        <h1>\n                          {this.state.user.name}\n                        </h1>\n                        <div className=\"h5 font-weight-300\">\n                          <i className=\"ni location_pin mr-2\" />\n                          {this.state.user.email}\n                        </div>\n                        <div className=\"h5 mt-5\">\n                          <i className=\"ni business_briefcase-24 mr-2\"></i>\n                          {this.state.user.about}\n                        </div>\n                        <div className=\"\">\n                          <i className=\"ni business_briefcase-24 mr-2\" />\n                          <span class=\"badge badge-primary\">Manager</span>\n\n                          <span class=\"badge badge-primary\">Doctor</span>\n\n                          <span class=\"badge badge-primary\">HealthExpert</span>\n                        </div>\n                        <hr className=\"my-4\" />\n                        <Button color=\"primary\" onClick={() => this.toggleModal(\"userModal\")} size=\"m\" >\n                          Edit Profile\n                      </Button>\n                      </div>\n                    </CardBody>\n                  </>\n                }\n                <Modal\n                  className=\"modal-dialog-centered\"\n                  isOpen={this.state.userModal}\n                  toggle={() => this.toggleModal(\"userModal\")}\n                >\n                  <div className=\"modal-header\">\n                    <h2 className=\"modal-title\" id=\"userModalLabel\">\n                      Edit Profile\n                          </h2>\n                    <button aria-label=\"Close\" className=\"close\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.toggleModal(\"userModal\")} >\n                      <span aria-hidden={true}>×</span>\n                    </button>\n                  </div>\n                  <div className=\"modal-body\">\n                    <form>\n                      <div class=\"form-group\">\n                        <label for=\"recipient-name\" class=\"col-form-label\" >Name:</label>\n                        <input type=\"text\" class=\"form-control\" id=\"recipient-name\" defaultValue={this.state.user.name} onChange={this.handleUserName}></input>\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"recipient-name\" class=\"col-form-label\" >Email:</label>\n                        <input type=\"text\" class=\"form-control\" id=\"recipient-name\" defaultValue={this.state.user.email} onChange={this.handleUserEmail}></input>\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"message-text\" class=\"col-form-label\">About:</label>\n                        <textarea class=\"form-control\" id=\"message-text\" defaultValue={this.state.user.about} onChange={this.handleAbout}></textarea>\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"recipient-name\" class=\"col-form-label\" >Password:</label>\n                        <input type=\"password\" placeholder=\"Enter New Password\" class=\"form-control\" id=\"recipient-name\" onChange={this.handlePassword}></input>\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"modal-footer\">\n                    <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.toggleModal(\"userModal\")}>\n                      Cancel\n                      </Button>\n                    <Button color=\"success\" type=\"button\" onClick={this.handleEditProfile}>\n                      Save\n                      </Button>\n                  </div>\n                </Modal>\n\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/Views/Document.js",["347","348"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { constants } from '../../../constants.js';\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Spinner,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nimport Header from \"components/User/Headers/EmptyHeader.js\";\n\nclass Workflows extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      documents: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    //Check if auth token in valid\n    let userId = reactLocalStorage.get('userId', true);\n    let type = reactLocalStorage.get('userType', true);\n\n    if (type == 1) {\n      if (userId != null) {\n        const data = {\n          \"userId\": userId\n        }\n        axios.post(constants[\"apiUrl\"] + '/documents/getAssigned', data)\n          .then((res) => {\n            let data = res.data;\n            console.warn(JSON.stringify(data));\n            this.setState({\n              documents: data.documents,\n              loading: false\n            })\n          })\n          .catch((error) => {\n            console.warn(JSON.stringify(error));\n          });\n      } else {\n        this.props.history.push(\"/login\");\n      }\n    }\n    else {\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  acceptDocument(index) {\n    this.state.documents[index].accepted = true;\n    this.forceUpdate();\n\n    let userId = reactLocalStorage.get('userId', true);\n    let clientId = reactLocalStorage.get('clientId', true);\n\n    if (clientId != null && userId != null) {\n      let data = new FormData();\n\n      console.warn(\"client ID: \" + clientId);\n\n      data.append(\"clientId\", clientId);\n      data.append(\"userId\", userId);\n      data.append(\"documentId\", this.state.documents[index].id);\n\n      axios.post(constants[\"apiUrl\"] + '/documents/accept', data)\n        .then((res) => {\n          let data = res.data;\n          console.warn(JSON.stringify(data));\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row className=\"mt-5\">\n            <Col xl>\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Assigned Documents</h3>\n                    </div>\n                  </Row>\n                </CardHeader>\n                {this.state.loading ?\n                  <CardBody>\n                    <div style={{ borderColor: 'black' }} className=\"text-center\">\n                      <Spinner st color=\"primary\" />\n                    </div>\n                  </CardBody>\n                  :\n                  <Table className=\"align-items-center table-flush\" responsive>\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">File Size</th>\n                        <th scope=\"col\">Assigned By</th>\n                        <th className=\"text-center\" scope=\"col\">Accepted</th>\n                        <th className=\"text-center\" scope=\"col\">File</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.documents.map((doc, index) => {\n                        return (\n                          <tr key={index}>\n                            <th scope=\"row\">{doc.name}</th>\n                            <td>{doc.size} KB</td>\n                            <th >{doc.assignedBy}</th>\n                            <td className=\"text-center\">\n                              {doc.accepted ? <i class=\"fas fa-check\"></i>\n                                : <Button color=\"success\" href=\"#pablo\" onClick={() => this.acceptDocument(index)} size=\"sm\"> Accept </Button>\n                              }\n                            </td>\n                            <td className=\"text-center\">\n                              <Link to={{\n                                pathname: '/user/view/document/' + doc.id\n                              }}>\n                                <Button\n                                  color=\"primary\"\n                                  href=\"#pablo\"\n                                  size=\"sm\"\n                                >\n                                  View\n                              </Button>\n                              </Link>\n                            </td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </Table>\n                }\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Workflows;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/Views/Workflows.js",["349","350"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { constants } from '../../../constants';\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Table,\n    Container,\n    Row,\n    Col,\n    CardBody,\n    Spinner\n} from \"reactstrap\";\n\nimport Header from \"components/User/Headers/EmptyHeader.js\";\n\nclass Workflows extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            workflows: [],\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        //Check if auth token in valid\n        let userId = reactLocalStorage.get('userId', true);\n        let clientId = reactLocalStorage.get('clientId', true);\n        let type = reactLocalStorage.get('userType', true);\n\n        if (type == 1) {\n            if (clientId != null) {\n                const data = {\n                    \"clientId\": clientId,\n                    \"userId\": userId\n                }\n                axios.post(constants[\"apiUrl\"] + '/workflows/getAssignedWorkflows', data)\n                    .then((res) => {\n                        let data = res.data;\n                        console.warn(JSON.stringify(data));\n                        this.setState({\n                            workflows: data.workflows,\n                            loading: false\n                        })\n                    })\n                    .catch((error) => {\n                        console.warn(JSON.stringify(error));\n                    });\n            }\n            else {\n                this.props.history.push(\"/login\");\n            }\n        }\n        else {\n            this.props.history.push(\"/login\");\n        }\n    }\n\n\n    render() {\n        return (\n            <>\n                <Header />\n                {/* Page content */}\n                <Container className=\"mt--7\" fluid>\n                    <Row className=\"mt-5\">\n                        <Col xl>\n                            <Card className=\"shadow\">\n                                <CardHeader className=\"border-0\">\n                                    <Row className=\"align-items-center\">\n                                        <div className=\"col\">\n                                            <h3 className=\"mb-0\">Assigned Workflows</h3>\n                                        </div>\n                                    </Row>\n                                </CardHeader>\n                                {this.state.loading ?\n                                    <CardBody>\n                                        <div style={{ borderColor: 'black' }} className=\"text-center\">\n                                            <Spinner st color=\"primary\" />\n                                        </div>\n                                    </CardBody>\n                                    :\n                                    <Table className=\"align-items-center table-flush\" responsive>\n                                        <thead className=\"thead-light\">\n                                            <tr>\n                                                <th scope=\"col\">Name</th>\n                                                <th scope=\"col\">Assigned By</th>\n                                                <th scope=\"col\">Due By</th>\n                                                <th scope=\"col\">Progress</th>\n                                                <th scope=\"col\"></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.workflows.map((w, index) => {\n                                                const date = new Date(w.updated_at).toLocaleString();\n                                                return (\n                                                    <tr key={index}>\n                                                        <th scope=\"row\">{w.name}</th>\n                                                        { w.user != null ? <td>{w.user.name}</td>\n                                                            : <td>-</td>\n                                                        }\n                                                        <td>-</td>\n                                                        <td>\n                                                            <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                                                            {w.progress != null ? w.progress + \"%\" : \"-\"}\n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <Link to={{\n                                                                pathname: '/user/view/workflow/' + w.id,\n                                                                state: {\n\n                                                                }\n                                                            }}>\n                                                                <Button color=\"primary\" size=\"sm\">\n                                                                    View\n                                                            </Button>\n                                                            </Link>\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            })}\n                                        </tbody>\n                                    </Table>\n                                }\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        );\n    }\n}\n\nexport default Workflows;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/Views/SuperAdminViewStandard.js",["351","352","353","354"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../../constants.js';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Table,\n  Container,\n  Row,\n  Col,\n  Spinner,\n  Modal\n} from \"reactstrap\";\n\nimport EmptyHeader from \"components/Manager/Headers/EmptyHeader.js\";\n\nclass SuperAdminViewStandards extends React.Component {\n\n    \n  constructor(props) {\n    super(props);\n    this.state = {\n      standard: [],\n      articles: [],\n      loading: true,\n      addModal: false,\n      name: null,\n      desc: null,\n    };\n  }\n\n  standardId = this.props.match.params.standardId;\n\n  componentDidMount() {\n\n    let type = reactLocalStorage.get('userType', true);\n\n    if (type == 3) {\n      const data = {\n        \"standardId\": this.standardId\n      }\n    \n\n    axios.post(constants[\"apiUrl\"] + '/admin/getStandard', data )\n      .then((res) => {\n        let data = res.data;\n        console.warn(data)\n        this.setState({\n          standard: data.standard,\n          articles: data.standard.articles,\n          loading: false,\n        })\n      })\n      .catch((error) => {\n        console.warn(JSON.stringify(error));\n      });\n\n    } else {\n      this.props.history.push(\"/login\");\n    }\n    \n\n    \n  }\n\n  openAddModal = () => {\n    this.setState({\n      addModal: true,\n    })\n  }\n\n  closeAddModal = () => {\n    this.setState({\n      addModal: false,\n      name: null,\n      desc: null\n    })\n  }\n\n  handleName = (event) => {\n    this.setState({\n      name: event.target.value\n    })\n\n  }\n\n  handleDesc = (event) => {\n    this.setState({\n      desc: event.target.value\n    })\n  }\n\n  handleAdd = () => {\n\n    if (this.state.name != null && this.state.desc != null) {\n        const data = {\n            \n          \"name\": this.state.name,\n          \"description\": this.state.desc,\n          \"standardId\": this.standardId\n        }\n        axios.post(constants[\"apiUrl\"] + '/admin/addArticle', data)\n          .then((res) => {\n            let data = res.data;\n            console.warn(res.data)\n            let temp = this.state.articles\n            temp.push(data.article)\n            this.setState({\n              articles: temp\n            })\n\n            this.forceUpdate()\n            this.closeAddModal()\n          })\n          .catch((error) => {\n            console.warn(JSON.stringify(error));\n          });\n      }\n  }\n\n  handleRemove = (id) => {\n    const data = {\n        \"articleId\": id\n    }\n    axios.post(constants[\"apiUrl\"] + '/admin/deleteArticle', data)\n    .then((res) => {\n        let data = res.data;\n        console.warn(res.data)\n        let temp = this.state.articles.filter(article => article.id != id)\n        this.setState({\n            articles: temp\n        })\n\n        this.forceUpdate()\n        this.closeAddModal()\n    })\n    .catch((error) => {\n        console.warn(JSON.stringify(error));\n    });\n}\n\n  render() {\n    return (\n        <>\n        <EmptyHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n            <Row className=\"mt-5 justify-content-center\">\n                <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n                    <Card className=\"shadow\">\n                        {this.state.loading ?\n                            <CardBody>\n                                <div style={{ borderColor: 'black' }} className=\"text-center\">\n                                    <Spinner st color=\"primary\" />\n                                </div>\n                            </CardBody>\n                            :\n                            <CardHeader className=\"border-0\">\n                                <Row className=\"align-items-center\" style={{ marginBottom: 10 }}>\n                                    <div className=\"col\">\n                                        <h1 className=\"mb-0\">{this.state.standard == null ? \"\" : this.state.standard.name}</h1>\n                                    </div>\n                                </Row>\n                                <Row className=\"align-items-center\">\n                                    <div className=\"col\">\n                                        <h4 className=\"mb-0\">{this.state.standard == null ? \"\" : this.state.standard.description}</h4>\n                                    </div>\n                                </Row>\n                            </CardHeader>\n                        }\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-5\">\n                <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n                    <Card className=\"shadow\">\n                        <CardHeader className=\"border-0\">\n                            <Row className=\"align-items-center\">\n                                <div className=\"col\">\n                                    <h3 className=\"mb-0\">{\"Standard \" + this.standardId}</h3>\n\n                                </div>\n\n                                <div className=\"col text-right\">\n                                    <Button color=\"success\" onClick={() => this.openAddModal()} size=\"sm\">\n                                        Add New Article\n                                    </Button>\n                                </div>\n\n                                \n                            </Row>\n                            <Modal\n                                className=\"modal-dialog-centered\"\n                                isOpen={this.state.addModal}\n                                defaultValue={this.state.addModal}\n                                toggle={() => this.closeAddModal()}\n                            >\n                                    <div className=\"modal-header\">\n                                    <h2 className=\"modal-title\" id=\"assignModelLabel\">\n                                        Add New Standard\n                                                    </h2>\n                                    <button\n                                        aria-label=\"Close\"\n                                        className=\"close\"\n                                        data-dismiss=\"modal\"\n                                        type=\"button\"\n                                        onClick={() => this.closeAddModal()}\n                                    >\n                                        <span aria-hidden={true}>×</span>\n                                    </button>\n                                    </div>\n                                    <div className=\"modal-body\">\n                                    <form>\n                                        <div className=\"form-group\">\n                                        <label for=\"recipient-name\" defaultValue={this.state.name} class=\"col-form-label\" >Name:</label>\n                                        <input type=\"text\" class=\"form-control\" id=\"recipient-name\" onChange={this.handleName}></input>\n                                        </div>\n                                        <div class=\"form-group\">\n                                        <label for=\"message-text\" class=\"col-form-label\" defaultValue={this.state.desc}>Description:</label>\n                                        <textarea class=\"form-control\" id=\"message-text\" id=\"message-text\" onChange={this.handleDesc}></textarea>\n                                        </div>\n                                    </form>\n                                    </div>\n                                    <div className=\"modal-footer\">\n                                    <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeAddModal()}>\n                                        Cancel\n                                                                    </Button>\n                                    <Button color=\"success\" type=\"button\" onClick={() => this.handleAdd()}>\n                                        Add\n                                                                    </Button>\n                                    </div>\n                                </Modal>\n                        </CardHeader>\n                        {this.state.loading ?\n                            <CardBody>\n                                <div style={{ borderColor: 'black' }} className=\"text-center\">\n                                    <Spinner st color=\"primary\" />\n                                </div>\n                            </CardBody>\n                            :\n                            <Table className=\"align-items-center table-flush\">\n                                <thead className=\"thead-light\">\n                                    <tr>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Description</th>\n                                        <th scope=\"col\"></th>\n                                        <th scope=\"col\"></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.articles.map(article => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th style={{width: 70}} scope=\"row\">{article.name}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{ maxWidth: 150 }}>\n                                <text style={{ whiteSpace: 'pre-wrap', overflowWrap: 'break-word' }}>\n                                    {article.description}\n                                </text>\n                            </td>\n                            <td style={{width: 40}}>\n\n                                <Link to={{\n                                    pathname: '/admin/view/article/' + article.id,\n                                }}>\n                                    <Button color=\"primary\" size=\"sm\">\n                                    View\n                                    </Button>\n                                </Link>\n                            </td>\n                            <td style={{width: 40}}>\n                                <div className=\"col text-center\">\n                                    <Button color=\"danger\" type=\"button\"  size=\"sm\"onClick={() => this.handleRemove(article.id)}>\n                                        Delete Item\n                                    </Button>\n\n                                </div>\n                            </td>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\n                                </tbody>\n                            </Table>\n                        }\n                    </Card>\n                </Col>\n            </Row>\n\n        </Container>\n    </>\n    );\n  }\n}\n\nexport default SuperAdminViewStandards;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/Views/SuperAdminViewClient.js",["355","356","357","358","359","360"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../../constants.js';\n\n// reactstrap components\nimport {\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Modal,\n  Table,\n  Button,\n  Container,\n  Spinner\n} from \"reactstrap\";\n\nimport Header from \"components/Manager/Headers/EmptyHeader.js\";\n\nclass SuperAdminViewClient extends React.Component {\n\n  clientId = this.props.match.params.clientId;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      invalid: false,\n      addModal: false,\n      managers: [],\n      name: \"\",\n      website: \"\",\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  componentDidMount() {\n\n    let type = reactLocalStorage.get('userType', true);\n\n    if (type == 3) {\n      const data = {\n        \"clientId\": this.clientId,\n      }\n      axios.post(constants[\"apiUrl\"] + '/admin/getManagers', data)\n        .then((res) => {\n          let data = res.data;\n          this.setState({\n            managers: data.managers,\n            loading: false\n          })\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n\n    } else {\n      this.props.history.push(\"/login\");\n    }\n    \n  }\n\n  openAddModal = () => {\n    this.setState({\n      addModal: true,\n    })\n  }\n\n  closeAddModal = () => {\n    this.setState({\n      addModal: false,\n      name: '',\n      email: '',\n      password: '',\n      website: ''\n    })\n  }\n\n  handleName = (event) => {\n    this.setState({\n      name: event.target.value\n    })\n  }\n\n  handlePassword = (event) => {\n    this.setState({\n      password: event.target.value\n    })\n  }\n\n\n  handleEmail = (event) => {\n    this.setState({\n      email: event.target.value\n    })\n  }\n\n  handleWebsite = (event) => {\n    this.setState({\n      website: event.target.value\n    })\n  }\n\n  handleAdd = () => {\n    if (this.state.name != '' && this.state.email != '' & this.state.website != '' & this.state.password != '') {\n      const data = {\n        \"name\": this.state.name,\n        \"email\": this.state.email,\n        \"website\": this.state.website,\n        'password': this.state.password,\n        'clientId': this.clientId\n      }\n\n      axios.post(constants[\"apiUrl\"] + '/admin/createManager', data)\n        .then((res) => {\n          let data = res.data;\n          console.log(data);\n          let updatedManagers = [...this.state.managers];\n          updatedManagers.push(data.manager);\n          this.setState({\n            managers: updatedManagers,\n          })\n          this.closeAddModal()\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n    }\n    else {\n      this.setState({\n        invalid: true\n      })\n    }\n  }\n\n  handleDelete = (manager, index) => {\n    if (manager != null) {\n      const data = {\n        \"managerId\": manager.id\n      }\n      let updatedManagers = [...this.state.managers];\n      updatedManagers.splice(index, 1);\n      axios.post(constants[\"apiUrl\"] + '/admin/deleteManager', data)\n        .then((res) => {\n          let data = res.data;\n          this.setState({\n            managers: updatedManagers,\n          })\n          this.closeAddModal()\n        })\n        .catch((error) => {\n          console.warn(JSON.stringify(error));\n        });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Managers</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button color=\"success\" onClick={() => this.openAddModal()} size=\"md\">\n                        Add Manager\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                {this.state.loading ?\n                  <CardBody>\n                    <div style={{ borderColor: 'black' }} className=\"text-center\">\n                      <Spinner st color=\"primary\" />\n                    </div>\n                  </CardBody>\n                  :\n                  <Table className=\"align-items-center table-flush\" responsive>\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.managers.map((manager, index) => {\n                        return (\n                          <tr key={index}>\n                            <th scope=\"row\">\n                              {manager.name}\n                            </th>\n                            <td>\n                              {manager.email}\n                            </td>\n                            <td>\n                              <Button color=\"danger\" size=\"sm\" onClick={() => this.handleDelete(manager, index)}>\n                                Delete\n                              </Button>\n                            </td>\n                          </tr>\n                        )\n                      })\n                      }\n                    </tbody>\n                  </Table>\n                }\n              </Card>\n              <Modal\n                className=\"modal-dialog-centered\"\n                isOpen={this.state.addModal}\n                defaultValue={this.state.addModal}\n                toggle={() => this.closeAddModal()}\n              >\n                <div className=\"modal-header\">\n                  <h2 className=\"modal-title\" id=\"assignModelLabel\">\n                    Add New Manager\n                      </h2>\n                  <button aria-label=\"Close\" className=\"close\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeAddModal()}>\n                    <span aria-hidden={true}>×</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <form>\n                    <div className=\"form-group\">\n                      <label for=\"recipient-name\" class=\"col-form-label\" >Name:</label>\n                      <input type=\"text\" class=\"form-control\" id=\"recipient-name\" onChange={this.handleName}></input>\n                    </div>\n                    <div className=\"form-group\">\n                      <label for=\"recipient-name\" class=\"col-form-label\" >Email:</label>\n                      <input type=\"email\" class=\"form-control\" id=\"recipient-name\" onChange={this.handleEmail}></input>\n                    </div>\n                    <div className=\"form-group\">\n                      <label for=\"recipient-website\" class=\"col-form-label\" >Website</label>\n                      <input type=\"link\" class=\"form-control\" id=\"recipient-website\" onChange={this.handleWebsite}></input>\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"recipient-name\" class=\"col-form-label\" >Password:</label>\n                      <input type=\"password\" placeholder=\"Enter New Password\" class=\"form-control\" id=\"recipient-name\" onChange={this.handlePassword}></input>\n                    </div>\n                  </form>\n                  {this.state.invalid ?\n                    <div className=\"text-center\">\n                      <text style={{ color: 'red' }}>Invalid Fields</text>\n                    </div>\n                    :\n                    null}\n                </div>\n                <div className=\"modal-footer\">\n                  <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeAddModal()}>\n                    Cancel\n                  </Button>\n                  <Button color=\"success\" type=\"button\" onClick={() => this.handleAdd()}>\n                    Add\n                  </Button>\n                </div>\n              </Modal>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default SuperAdminViewClient;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/views/examples/Login.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/views/examples/Register.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Shared/ViewArticle.js",["361","362","363","364","365"],"/*! Developed by Alinon */\nimport React from \"react\";\n\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\n\n// reactstrap components\nimport {\n\tButton,\n\tCard,\n\tCardHeader,\n\tTable,\n\tContainer,\n\tRow,\n\tCol,\n\tModal,\n\tCardBody,\n\tSpinner,\n\tUncontrolledDropdown,\n\tDropdownItem,\n\tDropdownMenu,\n\tDropdownToggle\n} from \"reactstrap\";\n\n\nimport EmptyHeader from \"components/Manager/Headers/EmptyHeader.js\";\n// import Roles from \"./Popups/Roles.js\"\n\nclass ViewArticle extends React.Component {\n\n\tarticleId = this.props.match.params.articleId;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchecklists: [],\n\t\t\tarticle: null,\n\t\t\tstandard: null,\n\t\t\tindex: null,\n\t\t\tdetModal: false,\n\t\t\tdocumentModel: false,\n\t\t\tuploadDocument: null,\n\t\t\tcurrentChecklistIndex: null,\n\t\t\tloading: true,\n\t\t\tuserType: null,\n\t\t\tusername: \"Select User\"\n\t\t};\n\t}\n\n\n\tcomponentDidMount() {\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\t\tlet type = reactLocalStorage.get('userType', true);\n\n\t\tthis.setState({\n\t\t\tuserType: type\n\t\t})\n\n\t\tif (type != 3) {\n      \n\t\t\t\n\t\t\tif (clientId !== null && userId !== null) {\n\t\t\t\tconst data = {\n\t\t\t\t\t\"clientId\": clientId,\n\t\t\t\t\t\"articleId\": this.articleId,\n\t\t\t\t\t\"userId\": userId\n\t\t\t\t}\n\t\t\t\taxios.post(constants[\"apiUrl\"] + '/checklists/get', data)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tlet data = res.data;\n\t\t\t\t\t\tconsole.warn(data);\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tchecklists: data.checklists,\n\t\t\t\t\t\t\tarticle: data.article,\n\t\t\t\t\t\t\tstandard: data.standard,\n\t\t\t\t\t\t\tuser: data.article.assignedTo,\n\t\t\t\t\t\t\tloading: false\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//TODO: go back to login\n\t\t\t}\n\n\t\t} else {\n\t\tthis.props.history.push(\"/login\");\n\t\t}\n\t\t\n\t\t\n\n\t\t\n\t\t\n\n\t\t//console.warn('user ' + userId + 'client ' + clientId + this.articleId);\n\n\t}\n\n\thandleCheckClick = (checklist, current) => {\n\t\t//Check if auth token in valid\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\n\t\tlet url = current == true ? \"/checklists/uncheck\" : \"/checklists/check\";\n\n\t\tif (clientId !== null && userId !== null) {\n\t\t\tconst data = {\n\t\t\t\t\"clientId\": clientId,\n\t\t\t\t\"checklistId\": checklist.id,\n\t\t\t\t\"userId\": userId\n\t\t\t}\n\t\t\taxios.post(constants[\"apiUrl\"] + url, data)\n\t\t\t\t.then((res) => {\n\n\t\t\t\t\tif (current)\n\t\t\t\t\t\tchecklist.progress = null;\n\t\t\t\t\telse\n\t\t\t\t\t\tchecklist.progress = res.data.progress;\n\n\t\t\t\t\tthis.forceUpdate();\n\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t});\n\t\t} else {\n\t\t\t//TODO: go back to login\n\t\t}\n\t}\n\n\ttoggleModal = (state, index) => {\n\t\tthis.setState({\n\t\t\t[state]: !this.state[state],\n\t\t\tcurrentChecklistIndex: index\n\t\t});\n\t};\n\n\tchooseFile = (event) => {\n\t\tthis.setState({\n\t\t\tuploadDocument: event.target.files[0],\n\t\t});\n\t}\n\n\thandleUpload = () => {\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\n\t\tif (clientId !== null && userId !== null) {\n\t\t\tlet data = new FormData();\n\n\t\t\tdata.append(\"clientId\", clientId);\n\t\t\tdata.append(\"userId\", userId);\n\t\t\tdata.append('checklistId', this.state.checklists[this.state.currentChecklistIndex].id);\n\t\t\tdata.append(\"file\", this.state.uploadDocument);\n\n\t\t\t// console.warn(...data);\n\n\t\t\taxios.post(constants[\"apiUrl\"] + '/checklists/attachDocument', data)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tlet data = res.data;\n\t\t\t\t\tthis.state.checklists[this.state.currentChecklistIndex].progress.document_id = res.data.uploaded.id;\n\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\tconsole.warn(JSON.stringify(data));\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tuploadDocument: null,\n\t\t\tdocumentModel: false,\n\t\t})\n\t}\n\n\topenDetModal = (itemId) => {\n\t\tthis.setState({\n\t\t\tdetModal: true,\n\t\t\tindex: itemId\n\t\t})\n\t}\n\n\tcloseDetModal = () => {\n\t\tthis.setState({\n\t\t\tdetModal: false,\n\t\t\tindex: null\n\t\t})\n\t}\n\n\thandleItemDet = (event) => {\n\t\tthis.setState({\n\t\t\tdetails: event.target.value\n\t\t})\n\n\t}\n\n\thandleAddDetail = () => {\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\t\tconst data = {\n\t\t\t\"userId\": userId,\n\t\t\t\"clientId\": clientId,\n\n\t\t\t\"checklistId\": this.state.index,\n\t\t\t\"description\": this.state.details\n\n\t\t}\n\t\taxios.post(constants[\"apiUrl\"] + '/checklists/addDesciption', data)\n\t\t\t.then((res) => {\n\t\t\t\tlet data = res.data;\n\t\t\t\tconsole.warn(JSON.stringify(data));\n\t\t\t\tthis.closeDetModal()\n\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t});\n\t}\n\n\tremoveAssign = () => {\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\t\tconst data = {\n\t\t\t\"clientId\": clientId,\n\t\t\t\"articleId\": this.articleId,\n\t\t\t\"userId\": this.state.user.id\n\t\t}\n\t\taxios.post(constants[\"apiUrl\"] + '/articles/removeAssignment', data)\n\t\t.then((res) => {\n\t\t\tlet data = res.data;\n\t\t\tconsole.warn(JSON.stringify(data));\n\t\t\tthis.setState({\n\t\t\t\tuser: null,\n\t\t\t})\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.warn(JSON.stringify(error));\n\t\t});\n\t}\n\n\topenAssignModal = () => {\n\t\tthis.setState({\n\t\t  assignModal: true,\n\t\t});\n\t\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\t\n\t\t//console.warn('user ' + userId + 'client ' + clientId);\n\t\n\t\tif (clientId != null) {\n\t\t  const data = {\n\t\t\t\"clientId\": clientId,\n\t\t  }\n\t\t  axios.post(constants[\"apiUrl\"] + '/user/get', data)\n\t\t\t.then((res) => {\n\t\t\t  let data = res.data;\n\t\t\t  \n\t\t\t  console.warn(JSON.stringify(data));\n\t\t\t  this.setState({\n\t\t\t\tusers: data.users,\n\t\t\t  })\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t  console.warn(JSON.stringify(error));\n\t\t\t});\n\t\n\t\t}\n\n\n\t  }\n\n\t  handleSelect = (username, userId) => {\n\t\tthis.setState({\n\t\t\tusername: username,\n\t\t\tassignId: userId\n\t\t})\n\t\n\t\t}\n\n\t\tcloseAssignModal = () => {\n\t\t\tthis.setState({\n\t\t\t  assignModal: false\n\t\t\t})\n\t\t}\n\t\n\t\thandleAssign = () => {\n\t\n\t\t\tconsole.warn(\"This is response\")\n\t\t\tconsole.warn(this.state.assignId)\n\t\t\t\n\t\t\tlet managerId = reactLocalStorage.get('userId', true);\n\t\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\t\t\tif (this.state.assignId != null) {\n\t\t\t  const data = {\n\t\t\t\t\"articleId\": this.articleId,\n\t\t\t\t\"userId\": this.state.assignId,\n\t\t\t\t\"clientId\": clientId,\n\t\t\t\t\"managerId\":managerId\n\n\t\t\t  }\n\t\t\n\t\t\t  axios.post(constants[\"apiUrl\"] + '/articles/assign', data)\n\t\t\t\t.then((res) => {\n\t\t\t\t  let data = res.data;\n\t\t\t\t  console.warn(data);\n\t\t\t\t  \n\t\t\t\t\tthis.closeAssignModal();\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tuser:data.article.assignedTo\n\t\t\t\t\t})\n\t\t\t\t\tthis.forceUpdate()\n\t\t\t\t  \n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t  console.warn(JSON.stringify(error));\n\t\t\t\t});\n\t\t\t}\n\t\t  }\n\n\trender() {\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<EmptyHeader />\n\t\t\t\t{/* Page content */}\n\t\t\t\t<Container className=\"mt--7\" fluid>\n\t\t\t\t\t<Row className=\"mt-5 justify-content-center\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div style={{ borderColor: 'black' }} className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-0 badge badge-primary\">{this.state.standard == null ? \"\" : this.state.standard.name}</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\" style={{ marginBottom: 10 }}>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h1 className=\"mb-0\">{this.state.article == null ? \"\" : this.state.article.name}</h1>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0\">{this.state.article == null ? \"\" : this.state.article.description}</h4>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t{this.state.userType == 2 ?\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.user != null ?\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Row style={{marginTop: 10}} className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\"><span className=\"badge badge-primary\">Assigned To: {this.state.user.name} </span></h3>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t<Button style={{marginTop: 10}} onClick={()=> this.removeAssign()} color=\"danger\"  size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\tUnassign\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Button style={{marginTop: 10}} color=\"success\" onClick={() => this.openAssignModal()}  size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\tAssign\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</div>:\n\t\t\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"modal-dialog-centered\"\n\t\t\t\t\t\t\t\t\t\t\tisOpen={this.state.assignModal}\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={this.state.index}\n\t\t\t\t\t\t\t\t\t\t\ttoggle={() => this.closeAssignModal()}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"modal-title\" id=\"assignModelLabel\">\n\t\t\t\t\t\t\t\t\t\t\t\tWorkflow {this.state.index}\n\t\t\t\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeAssignModal()}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Col xl=\"auto\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.users != null ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t<UncontrolledDropdown>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownToggle caret>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.username}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownMenu container=\"body\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.users.map((user, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem onClick={() => this.handleSelect(user.name, user.id)} key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{user.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</UncontrolledDropdown>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>Loading...</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeAssignModal()}>\n\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" type=\"button\" onClick={() => this.handleAssign()}>\n\t\t\t\t\t\t\t\t\t\t\t\tAssign\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<Row className=\"mt-5 justify-content-center\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Article  {this.articleId}</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col text-right\">\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div style={{ borderColor: 'black' }} className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\">\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Description</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Details</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.checklists.map((c, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-check\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{c.progress == null ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"form-check-input\" style={{ width: 17, height: 17 }} type=\"checkbox\" onChange={() => this.handleCheckClick(c, false)} id={\"Check\" + c.id} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"form-check-input\" style={{ width: 17, height: 17 }} type=\"checkbox\" onChange={() => this.handleCheckClick(c, true)} defaultChecked id={\"Check\" + c.id} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"form-check-label \" for=\"defaultCheck1\"></label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{c.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<text style={{ whiteSpace: 'pre-wrap', overflowWrap: 'break-word' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{c.details}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{c.progress !== null ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc.progress.description == \"\" ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" size=\"sm\" onClick={() => this.openDetModal(c.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Description\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{c.progress.description}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{c.progress == null ? null\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: (c.progress.document_id == null ? <Button color=\"success\" onClick={() => this.toggleModal(\"documentModel\", index)} size=\"sm\"> Add Document </Button> : <Button color=\"primary\" size=\"sm\"> View Document </Button>)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"modal-dialog-centered\"\n\t\t\t\t\t\t\t\t\t\t\tisOpen={this.state.documentModel}\n\t\t\t\t\t\t\t\t\t\t\ttoggle={() => this.toggleModal(\"documentModel\")}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"modal-title\" id=\"documentModelLabel\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Document\n                          \t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.toggleModal(\"documentModel\")}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"file\" name=\"file\" onChange={e => this.chooseFile(e)} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.toggleModal(\"documentModel\")}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n                          \t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" type=\"button\" onClick={this.handleUpload}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpload\n                          \t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"modal-dialog-centered\"\n\t\t\t\t\t\t\t\t\t\t\tisOpen={this.state.detModal}\n\t\t\t\t\t\t\t\t\t\t\ttoggle={() => this.closeDetModal()}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"modal-title\" id=\"userModelLabel\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Details\n\t\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeDetModal()}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t\t\t\t<form>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"message-text\" class=\"col-form-label\" defaultValue={this.state.itemDesc}>Details:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<textarea type=\"text\" class=\"form-control\" id=\"message-text\" onChange={this.handleItemDet}></textarea>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeDetModal()}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" type=\"button\" onClick={() => this.handleAddDetail()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default ViewArticle;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Shared/ViewWorkflow.js",["366","367","368","369","370","371","372","373","374","375","376"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\n\n// reactstrap components\nimport {\n\tButton,\n\tCard,\n\tCardHeader,\n\tTable,\n\tContainer,\n\tRow,\n\tCol,\n\tModal,\n\tCardBody,\n\tSpinner,\n\tUncontrolledDropdown,\n\tDropdownMenu, \n\tDropdownItem,\n\tDropdownToggle,\n} from \"reactstrap\";\n\nimport EmptyHeader from \"components/Manager/Headers/EmptyHeader.js\";\n// import Roles from \"./Popups/Roles.js\"\n\nclass ViewWorkflow extends React.Component {\n\n\tworkflowId = this.props.match.params.workflowId;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: null,\n\t\t\titemName: null,\n\t\t\titemDesc: null,\n\t\t\tdesc: null,\n\t\t\titems: [],\n\t\t\tdetModal: false,\n\t\t\tdetails: null,\n\t\t\tindex: null,\n\t\t\taddItemModal: false,\n\t\t\tdocumentModal: false,\n\t\t\tuploadDocument: null,\n\t\t\tloading: true,\n\t\t\tusername: \"Select User\"\n\t\t};\n\t}\n\n\n\tcomponentDidMount() {\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\t\tlet type = reactLocalStorage.get('userType', true);\n\t\tthis.setState({\n\t\t\tuserType: type\n\t\t})\n\n\t\tif (type != 3) {\n      \n\t\t\t\n\t\t\tif (clientId !== null && userId !== null) {\n\t\t\t\tconst data = {\n\t\n\t\t\t\t\t\"workflowId\": this.workflowId,\n\t\n\t\t\t\t}\n\t\t\t\taxios.post(constants[\"apiUrl\"] + '/workflows/get', data)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tlet data = res.data;\n\t\t\t\t\t\tconsole.warn(JSON.stringify(data));\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tname: data.workflow.name,\n\t\t\t\t\t\t\tdesc: data.workflow.description,\n\t\t\t\t\t\t\tuser: data.workflow.user,\n\t\t\t\t\t\t\titems: data.workflow.items,\n\t\t\t\t\t\t\tworkflowId: data.workflow.id,\n\t\t\t\t\t\t\tloading: false\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//TODO: go back to login\n\t\t\t}\n\n\t\t} else {\n\t\tthis.props.history.push(\"/login\");\n\t\t}\n\n\t\t//console.warn('user ' + userId + 'client ' + clientId + this.articleId);\n\n\t\t\n\t}\n\n\thandleItemName = (event) => {\n\n\t\tthis.setState({ itemName: event.target.value })\n\n\t}\n\n\thandleItemDesc = (event) => {\n\t\tconsole.warn(this.state.itemDesc)\n\t\tthis.setState({\n\t\t\titemDesc: event.target.value\n\t\t})\n\t}\n\n\thandleAddNewItem = () => {\n\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\t\tif (clientId !== null) {\n\t\t\tconst data = {\n\n\t\t\t\t\"workflowId\": this.workflowId,\n\t\t\t\t\"name\": this.state.itemName,\n\t\t\t\t\"description\": this.state.itemDesc\n\n\t\t\t}\n\t\t\taxios.post(constants[\"apiUrl\"] + '/workflows/addWorkflowItem', data)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tlet data = res.data;\n\t\t\t\t\tconsole.warn((data));\n\t\t\t\t\tthis.closeAddItemModal();\n\t\t\t\t\tlet temp = this.state.items;\n\t\t\t\t\ttemp.push(data.item);\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\titems: temp,\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.forceUpdate()\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t});\n\t\t} else {\n\t\t\t//TODO: go back to login\n\t\t}\n\n\n\n\t}\n\n\topenAddItemModal = () => {\n\t\tthis.setState({\n\t\t\taddItemModal: true\n\t\t})\n\n\t}\n\n\tcloseAddItemModal = () => {\n\t\tthis.setState({\n\t\t\taddItemModal: false,\n\t\t\tindex: null\n\t\t})\n\t}\n\n\thandleCheck = (itemId) => {\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tconst data = {\n\n\t\t\t\"workflowItemId\": itemId,\n\t\t\t\"userId\": userId\n\n\t\t}\n\t\taxios.post(constants[\"apiUrl\"] + '/workflows/check', data)\n\t\t\t.then((res) => {\n\t\t\t\tlet data = res.data;\n\t\t\t\tconsole.warn((data));\n\t\t\t\tlet temp = this.state.items;\n\t\t\t\tlet index = temp.findIndex(item => item.id == itemId)\n\t\t\t\ttemp[index].done = 1;\n\t\t\t\tthis.setState({\n\t\t\t\t\titems: temp,\n\t\t\t\t})\n\n\t\t\t\tthis.forceUpdate()\n\t\t\t\t\n\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t});\n\n\t}\n\n\thandleUncheck = (itemId) => {\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tconst data = {\n\n\t\t\t\"workflowItemId\": itemId,\n\t\t\t\"userId\": userId\n\n\t\t}\n\t\taxios.post(constants[\"apiUrl\"] + '/workflows/uncheck', data)\n\t\t\t.then((res) => {\n\t\t\t\tlet data = res.data;\n\t\t\t\tconsole.warn(JSON.stringify(data));\n\t\t\t\tlet temp = this.state.items;\n\t\t\t\tlet index = temp.findIndex(item => item.id == itemId)\n\t\t\t\ttemp[index].done = 0;\n\t\t\t\tthis.setState({\n\t\t\t\t\titems: temp,\n\t\t\t\t})\n\n\t\t\t\tthis.forceUpdate()\n\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t});\n\t}\n\n\topenDocumentModal = (index) => {\n\t\tthis.setState({\n\t\t\tdocumentModal: true,\n\t\t\tindex: index\n\t\t})\n\n\t}\n\n\tcloseDocumentModal = () => {\n\t\tthis.setState({\n\t\t\tdocumentModal: false,\n\t\t\tindex: null,\n\t\t})\n\t}\n\n\tchooseFile = (event) => {\n\t\tthis.setState({\n\t\t\tuploadDocument: event.target.files[0],\n\t\t});\n\t}\n\n\thandleUpload = () => {\n\t\tlet userId = reactLocalStorage.get('userId', true);\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\n\t\tif (clientId !== null && userId !== null) {\n\t\t\tlet data = new FormData();\n\n\t\t\tdata.append(\"workflowItemId\", this.state.index);\n\t\t\tdata.append(\"userId\", userId);\n\t\t\tdata.append(\"clientId\", clientId);\n\t\t\tdata.append(\"file\", this.state.uploadDocument);\n\n\t\t\t// console.warn(...data);\n\n\t\t\taxios.post(constants[\"apiUrl\"] + '/workflows/attachDocument', data)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tlet data = res.data;\n\t\t\t\t\tthis.state.checklists[this.state.currentChecklistIndex].progress.document_id = res.data.uploaded.id;\n\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\tconsole.warn(JSON.stringify(data));\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tuploadDocument: null,\n\t\t\tdocumentModel: false,\n\t\t})\n\t}\n\n\topenDetModal = (itemId) => {\n\t\tthis.setState({\n\t\t\tdetModal: true,\n\t\t\tindex: itemId\n\t\t})\n\t}\n\n\tcloseDetModal = () => {\n\t\tthis.setState({\n\t\t\tdetModal: false,\n\t\t\tindex: null\n\t\t})\n\t}\n\n\thandleItemDet = (event) => {\n\t\tthis.setState({\n\t\t\tdetails: event.target.value\n\t\t})\n\t}\n\n\thandleAddDetail = () => {\n\t\tconst data = {\n\n\t\t\t\"workflowItemId\": this.state.index,\n\t\t\t\"description\": this.state.details\n\n\t\t}\n\t\taxios.post(constants[\"apiUrl\"] + '/workflows/addDesciption', data)\n\t\t\t.then((res) => {\n\t\t\t\tlet data = res.data;\n\t\t\t\tconsole.warn(data);\n\t\t\t\tlet temp = this.state.items;\n\t\t\t\tlet index = temp.findIndex(item => item.id == this.state.index)\n\t\t\t\ttemp[index].description = this.state.details\n\n\t\t\t\tthis.setState({\n\t\t\t\t\titems : temp,\n\t\t\t\t})\n\n\t\t\t\tthis.forceUpdate()\n\t\t\t\tthis.closeDetModal()\n\t\t\t\t\n\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t});\n\t}\n\n\tremoveAssign = () => {\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\t\tconst data = {\n\t\t\"workflowId\": this.state.workflowId,\n\t\t\"userId\": this.state.user.id\n\t\t}\n\t\taxios.post(constants[\"apiUrl\"] + '/workflows/removeAssignment', data)\n\t\t.then((res) => {\n\t\t\tlet data = res.data;\n\t\t\tconsole.warn(JSON.stringify(data));\n\t\t\tthis.setState({\n\t\t\t\tuser: null,\n\t\t\t})\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.warn(JSON.stringify(error));\n\t\t});\n\t}\n\n\tcloseAssignModal = () => {\n\t\tthis.setState({\n\t\t  assignModal: false\n\t\t})\n\t}\n\n\thandleSelect = (username, userId) => {\n\tthis.setState({\n\t\tusername: username,\n\t\tassignId: userId\n\t})\n\n\t}\n\n\thandleAssign = () => {\n\n\t\tconsole.warn(\"This is response\")\n\t\tconsole.warn(this.state.assignId)\n\t\tif (this.state.assignId != null) {\n\t\t  const data = {\n\t\t\t\"workflowId\": this.state.workflowId,\n\t\t\t\"userId\": this.state.assignId,\n\t\t  }\n\t\n\t\t  axios.post(constants[\"apiUrl\"] + '/workflows/assign', data)\n\t\t\t.then((res) => {\n\t\t\t  let data = res.data;\n\t\t\t  console.warn(JSON.stringify(data));\n\t\t\t  if (data.done == '1') {\n\t\t\t\tthis.closeAssignModal();\n\t\t\t\tthis.setState({\n\t\t\t\t\tuser:data.workflow.user\n\t\t\t\t})\n\t\t\t\tthis.forceUpdate()\n\t\t\t  }\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t  console.warn(JSON.stringify(error));\n\t\t\t});\n\t\t}\n\t  }\n\n\topenAssignModal = () => {\n\t\tthis.setState({\n\t\t  assignModal: true,\n\t\t  index: this.state.workflowId\n\t\t});\n\t\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\t\n\t\t//console.warn('user ' + userId + 'client ' + clientId);\n\t\n\t\tif (clientId != null) {\n\t\t  const data = {\n\t\t\t\"clientId\": clientId,\n\t\t  }\n\t\t  axios.post(constants[\"apiUrl\"] + '/user/get', data)\n\t\t\t.then((res) => {\n\t\t\t  let data = res.data;\n\t\t\t  \n\t\t\t  console.warn(JSON.stringify(data));\n\t\t\t  this.setState({\n\t\t\t\tusers: data.users,\n\t\t\t  })\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t  console.warn(JSON.stringify(error));\n\t\t\t});\n\t\n\t\n\t\t}\n\t  }\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<EmptyHeader />\n\t\t\t\t{/* Page content */}\n\t\t\t\t<Container className=\"mt--7\" fluid>\n\t\t\t\t\t<Row className=\"mt-5 justify-content-center\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div style={{ borderColor: 'black' }} className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\" style={{ marginBottom: 10 }}>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h1 className=\"mb-0\">{this.state.name == null ? \"\" : this.state.name}</h1>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0\">{this.state.desc == null ? \"\" : this.state.desc}</h4>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t{this.state.userType == 2 ?\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.user != null ?\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Row style={{marginTop: 10}} className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\"><span className=\"badge badge-primary\">Assigned To: {this.state.user.name} </span></h3>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t<Button style={{marginTop: 10}} onClick={()=> this.removeAssign()} color=\"danger\"  size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\tUnassign\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Button style={{marginTop: 10}} color=\"success\" onClick={() => this.openAssignModal()}  size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\tAssign\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</div>:\n\t\t\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\tclassName=\"modal-dialog-centered\"\n\t\t\t\t\t\t\t\t\tisOpen={this.state.assignModal}\n\t\t\t\t\t\t\t\t\tdefaultValue={this.state.index}\n\t\t\t\t\t\t\t\t\ttoggle={() => this.closeAssignModal()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"modal-title\" id=\"assignModelLabel\">\n\t\t\t\t\t\t\t\t\t\tWorkflow {this.state.index}\n\t\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeAssignModal()}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t\t\t\t\t\t<Col xl=\"auto\">\n\t\t\t\t\t\t\t\t\t\t\t{this.state.users != null ?\n\t\t\t\t\t\t\t\t\t\t\t<UncontrolledDropdown>\n\t\t\t\t\t\t\t\t\t\t\t\t<DropdownToggle caret>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.username}\n\t\t\t\t\t\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t\t\t\t\t\t<DropdownMenu container=\"body\">\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.users.map((user, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem onClick={() => this.handleSelect(user.name, user.id)} key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{user.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t\t</UncontrolledDropdown>\n\n\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t<div>Loading...</div>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t<Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeAssignModal()}>\n\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" type=\"button\" onClick={() => this.handleAssign()}>\n\t\t\t\t\t\t\t\t\t\tAssign\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"mt-5 justify-content-center\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"mb-0\">Workflow Items</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t\t\t\t\t\t\t{this.state.userType == 2? \n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" onClick={() => this.openAddItemModal()} size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd New Item\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>:\n\t\t\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"modal-dialog-centered\"\n\t\t\t\t\t\t\t\t\t\t\t\tisOpen={this.state.addItemModal}\n\t\t\t\t\t\t\t\t\t\t\t\ttoggle={() => this.closeAddItemModal()}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"modal-title\" id=\"userModelLabel\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd New Item\n\t\t\t\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeAddItemModal()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"recipient-name\" defaultValue={this.state.itemName} class=\"col-form-label\" >Name:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"recipient-name\" onChange={this.handleItemName}></input>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"message-text\" class=\"col-form-label\" defaultValue={this.state.itemDesc}>Description:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<textarea type=\"text\" class=\"form-control\" id=\"message-text\" onChange={this.handleItemDesc}></textarea>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeAddItemModal()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" type=\"button\" onClick={() => this.handleAddNewItem()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t{this.state.loading ?\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<div style={{ borderColor: 'black' }} className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner st color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Table className=\"align-items-center table-flush\">\n\t\t\t\t\t\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Description</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Details</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.items.map(item => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-check\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.done == 0 ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"form-check-input\" style={{ width: 17, height: 17 }} type=\"checkbox\" onClick={() => this.handleCheck(item.id)} id={\"Check\" + item.id} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"form-check-input\" style={{ width: 17, height: 17 }} type=\"checkbox\" onClick={() => this.handleUncheck(item.id)} defaultChecked id={\"Check\" + item.id} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"form-check-label \" for=\"defaultCheck1\"></label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.details}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.done !== 0 ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.description == null ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" size=\"sm\" onClick={() => this.openDetModal(item.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Description\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.description}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.done == 0 ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p></p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.document_id == null ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" size=\"sm\" onClick={() => this.openDocumentModal(item.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Document\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/manager/view/document/' + item.document_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tView Document\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"modal-dialog-centered\"\n\t\t\t\t\t\t\t\t\t\t\tisOpen={this.state.documentModal}\n\t\t\t\t\t\t\t\t\t\t\ttoggle={() => this.closeDocumentModal()}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"modal-title\" id=\"documentModelLabel\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Document\n                          \t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeDocumentModal()}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"file\" name=\"file\" onChange={e => this.chooseFile(e)} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeDocumentModal()}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n                          \t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" type=\"button\" onClick={() => this.handleUpload()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpload\n                          \t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"modal-dialog-centered\"\n\t\t\t\t\t\t\t\t\t\t\tisOpen={this.state.detModal}\n\t\t\t\t\t\t\t\t\t\t\ttoggle={() => this.closeDetModal()}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"modal-title\" id=\"userModelLabel\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Details\n\t\t\t\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeDetModal()}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden={true}>×</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t\t\t\t<form>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"message-text\" class=\"col-form-label\" defaultValue={this.state.itemDesc}>Details:</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<textarea type=\"text\" class=\"form-control\" id=\"message-text\" onChange={this.handleItemDet}></textarea>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeDetModal()}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" type=\"button\" onClick={() => this.handleAddDetail()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default ViewWorkflow;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Shared/ViewDocument.js",["377","378","379"],"/*! Developed by Alinon */\nimport React, { useState, useEffect } from \"react\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../constants.js';\n\n// reactstrap components\nimport {\n\tButton,\n\tCard,\n\tCardHeader,\n\tTable,\n\tContainer,\n\tRow,\n\tCol\n} from \"reactstrap\";\n\nimport { Worker, Viewer } from '@react-pdf-viewer/core';\n\nimport EmptyHeader from \"components/Manager/Headers/EmptyHeader.js\";\n\nimport { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout';\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css';\n\nconst ViewDocument = (props) => {\n\tconst documentId = props.match.params.documentId;\n\tconst [document, setDocument] = useState( null);\n\n\tconst defaultLayoutPluginInstance = defaultLayoutPlugin();\n\n\tuseEffect(() => {\n\n\t\tlet clientId = reactLocalStorage.get('clientId', true);\n\n\t\tif (clientId != null) {\n\t\t\tconst data = {\n\t\t\t\t\"documentId\": documentId,\n\t\t\t\t\"clientId\": clientId,\n\n\t\t\t}\n\t\t\taxios.post(constants[\"apiUrl\"] + '/documents/get', data)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tlet data = res.data;\n\t\t\t\t\tsetDocument( data.document)\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.warn(JSON.stringify(error));\n\t\t\t\t});\n\t\t} else {\n\t\t\t//TODO: go back to login\n\t\t}\n\n\t}, [])\n\n\treturn (\n\t\t<Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.5.207/build/pdf.worker.js\">\n\t\t\t<>\n\t\t\t\t<EmptyHeader />\n\t\t\t\t{/* Page content */}\n\t\t\t\t<Container className=\"mt--7\" fluid>\n\t\t\t\t\t<Row className=\"mt-5 justify-content-center\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\" style={{ marginBottom: 10 }}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h1 className=\"mb-0\">{document != null ? document.name : \"\"}</h1>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0\">{document != null ? document.description : \"\"}</h4>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"mt-5 justify-content-center\">\n\t\t\t\t\t\t<Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n\t\t\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t\t\t<CardHeader className=\"border-0\">\n\t\t\t\t\t\t\t\t\t<Row className=\"align-items-center\" style={{ marginBottom: 10 }}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\" style={{\n\t\t\t\t\t\t\t\t\t\t\theight: '100%', width: '100%',\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t{document != null ?\n\t\t\t\t\t\t\t\t\t\t\t\t<Viewer\n\t\t\t\t\t\t\t\t\t\t\t\t\tplugins={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultLayoutPluginInstance\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfileUrl={\"https://cors-anywhere.herokuapp.com/\" + constants.appUrl + document.path} />\n\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardHeader>\n\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t</Worker>\n\t);\n\n}\nexport default ViewDocument;\n\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/Views/SuperAdminViewArticle.js",["380","381","382","383","384"],"/*! Developed by Alinon */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from 'axios';\nimport { constants } from '../../../constants.js';\n\n// reactstrap components\nimport {\nButton,\nCard,\nCardHeader,\nCardBody,\nTable,\nContainer,\nRow,\nCol,\nSpinner,\nModal\n} from \"reactstrap\";\n\nimport EmptyHeader from \"components/Manager/Headers/EmptyHeader.js\";\n\nclass SuperAdminViewArticle extends React.Component {\n\n    \nconstructor(props) {\n    super(props);\n    this.state = {\n    articles: null,\n    checklists: [],\n    loading: true,\n    addModal: false,\n    name: null,\n    desc: null,\n    };\n}\n\narticleId = this.props.match.params.articleId;\n\ncomponentDidMount() {\n\n    let type = reactLocalStorage.get('userType', true);\n\n\n    if (type == 3) {\n        const data = {\n            \"articleId\": this.articleId\n        }\n        \n    \n        axios.post(constants[\"apiUrl\"] + '/admin/getArticle', data )\n        .then((res) => {\n            let data = res.data;\n            console.warn(data)\n            this.setState({\n            article: data.article,\n            checklists: data.article.checklists,\n            loading: false,\n            })\n        })\n        .catch((error) => {\n            console.warn(JSON.stringify(error));\n        });\n\n    } else {\n      this.props.history.push(\"/login\");\n    }\n\n    \n}\n\nopenAddModal = () => {\n    this.setState({\n    addModal: true,\n    })\n}\n\ncloseAddModal = () => {\n    this.setState({\n    addModal: false,\n    name: null,\n    desc: null\n    })\n}\n\nhandleName = (event) => {\n    this.setState({\n    name: event.target.value\n    })\n\n}\n\nhandleDesc = (event) => {\n    this.setState({\n    desc: event.target.value\n    })\n}\n\nhandleAdd = () => {\n\n    if (this.state.name != null && this.state.desc != null) {\n        const data = {\n            \n        \"name\": this.state.name,\n        \"details\": this.state.desc,\n        \"standardId\": this.state.article.standard_id,\n        \"articleId\": this.articleId\n        }\n        axios.post(constants[\"apiUrl\"] + '/admin/addChecklist', data)\n        .then((res) => {\n            let data = res.data;\n            console.warn(res.data)\n            let temp = this.state.checklists\n            temp.push(data.checklist)\n            this.setState({\n            checklists: temp\n            })\n\n            this.forceUpdate()\n            this.closeAddModal()\n        })\n        .catch((error) => {\n            console.warn(JSON.stringify(error));\n        });\n    }\n}\n\n    handleRemove = (id) => {\n        const data = {\n            \"checklistId\": id\n        }\n        axios.post(constants[\"apiUrl\"] + '/admin/deleteChecklist', data)\n        .then((res) => {\n            let data = res.data;\n            console.warn(res.data)\n            let temp = this.state.checklists.filter(checklist => checklist.id != id)\n            this.setState({\n                checklists: temp\n            })\n\n            this.forceUpdate()\n            this.closeAddModal()\n        })\n        .catch((error) => {\n            console.warn(JSON.stringify(error));\n        });\n    }\n\nrender() {\n    return (\n        <>\n        <EmptyHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n            <Row className=\"mt-5 justify-content-center\">\n                <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n                    <Card className=\"shadow\">\n                        {this.state.loading ?\n                            <CardBody>\n                                <div style={{ borderColor: 'black' }} className=\"text-center\">\n                                    <Spinner st color=\"primary\" />\n                                </div>\n                            </CardBody>\n                            :\n                            <CardHeader className=\"border-0\">\n                                <Row className=\"align-items-center\" style={{ marginBottom: 10 }}>\n                                    <div className=\"col\">\n                                        <h1 className=\"mb-0\">{this.state.article == null ? \"\" : this.state.article.name}</h1>\n                                    </div>\n                                </Row>\n                                <Row className=\"align-items-center\">\n                                    <div className=\"col\">\n                                        <h4 className=\"mb-0\">{this.state.article == null ? \"\" : this.state.article.description}</h4>\n                                    </div>\n                                </Row>\n                            </CardHeader>\n                        }\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row className=\"mt-5\">\n                <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n                    <Card className=\"shadow\">\n                        <CardHeader className=\"border-0\">\n                            <Row className=\"align-items-center\">\n                                <div className=\"col\">\n                                    <h3 className=\"mb-0\">{\"Article \" + this.articleId}</h3>\n\n                                </div>\n\n                                <div className=\"col text-right\">\n                                    <Button color=\"success\" onClick={() => this.openAddModal()} size=\"sm\">\n                                        Add Checklist Item\n                                    </Button>\n                                </div>\n\n                                \n                            </Row>\n                            <Modal\n                                className=\"modal-dialog-centered\"\n                                isOpen={this.state.addModal}\n                                defaultValue={this.state.addModal}\n                                toggle={() => this.closeAddModal()}\n                            >\n                                    <div className=\"modal-header\">\n                                    <h2 className=\"modal-title\" id=\"assignModelLabel\">\n                                        Add New Standard\n                                                    </h2>\n                                    <button\n                                        aria-label=\"Close\"\n                                        className=\"close\"\n                                        data-dismiss=\"modal\"\n                                        type=\"button\"\n                                        onClick={() => this.closeAddModal()}\n                                    >\n                                        <span aria-hidden={true}>×</span>\n                                    </button>\n                                    </div>\n                                    <div className=\"modal-body\">\n                                    <form>\n                                        <div className=\"form-group\">\n                                        <label for=\"recipient-name\" defaultValue={this.state.name} class=\"col-form-label\" >Name:</label>\n                                        <input type=\"text\" class=\"form-control\" id=\"recipient-name\" onChange={this.handleName}></input>\n                                        </div>\n                                        <div class=\"form-group\">\n                                        <label for=\"message-text\" class=\"col-form-label\" defaultValue={this.state.desc}>Details:</label>\n                                        <textarea class=\"form-control\" id=\"message-text\" id=\"message-text\" onChange={this.handleDesc}></textarea>\n                                        </div>\n                                    </form>\n                                    </div>\n                                    <div className=\"modal-footer\">\n                                    <Button color=\"secondary\" data-dismiss=\"modal\" type=\"button\" onClick={() => this.closeAddModal()}>\n                                        Cancel\n                                                                    </Button>\n                                    <Button color=\"success\" type=\"button\" onClick={() => this.handleAdd()}>\n                                        Add\n                                                                    </Button>\n                                    </div>\n                                </Modal>\n                        </CardHeader>\n                        {this.state.loading ?\n                            <CardBody>\n                                <div style={{ borderColor: 'black' }} className=\"text-center\">\n                                    <Spinner st color=\"primary\" />\n                                </div>\n                            </CardBody>\n                            :\n                            <Table className=\"align-items-center table-flush\">\n                                <thead className=\"thead-light\">\n                                    <tr >\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Description</th>\n                                        <th scope=\"col\"></th>\n                                        \n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.checklists.map(item => {\n                                                return (\n                                                    <tr>\n                                                        <th style={{width: 60}} scope=\"row\">{item.name}</th>\n                                                        <td style={{ maxWidth: 170 }}>\n                                                            <text style={{ whiteSpace: 'pre-wrap', overflowWrap: 'break-word' }}>\n                                                                {item.details}\n                                                            </text>\n                                                        </td>\n                                        \n                                                        <td style={{width: 40}}>\n                                                            <div className=\"col text-center\">\n                                                                <Button color=\"danger\" type=\"button\"  size=\"sm\"onClick={() => this.handleRemove(item.id)}>\n                                                                    Delete Item\n                                                                </Button>\n\n                                                            </div>\n                                                            \n                                                        </td>\n\n                                                    </tr>\n                                                )\n                                            })}\n                                        \n                                </tbody>\n                            </Table>\n                        }\n                    </Card>\n                </Col>\n            </Row>\n\n        </Container>\n    </>\n    );\n}\n}\n\nexport default SuperAdminViewArticle;\n","/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/Headers/EmptyHeader.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/Headers/EmptyHeader.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/Headers/ProfileHeader.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/User/Headers/DashboardHeader.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/Manager/Headers/DashboardHeader.js",[],"/Users/mak/Data/Alinon/NeuronDelta/frontend/src/components/SuperAdmin/Headers/DashboardHeader.js",[],["385","386"],{"ruleId":"387","replacedBy":"388"},{"ruleId":"389","replacedBy":"390"},{"ruleId":"391","severity":1,"message":"392","line":13,"column":8,"nodeType":"393","messageId":"394","endLine":13,"endColumn":20},{"ruleId":"395","severity":1,"message":"396","line":56,"column":26,"nodeType":"397","messageId":"398","endLine":56,"endColumn":28},{"ruleId":"395","severity":1,"message":"396","line":59,"column":26,"nodeType":"397","messageId":"398","endLine":59,"endColumn":28},{"ruleId":"395","severity":1,"message":"396","line":115,"column":24,"nodeType":"397","messageId":"398","endLine":115,"endColumn":26},{"ruleId":"395","severity":1,"message":"396","line":122,"column":35,"nodeType":"397","messageId":"398","endLine":122,"endColumn":37},{"ruleId":"395","severity":1,"message":"396","line":124,"column":42,"nodeType":"397","messageId":"398","endLine":124,"endColumn":44},{"ruleId":"395","severity":1,"message":"396","line":192,"column":42,"nodeType":"397","messageId":"398","endLine":192,"endColumn":44},{"ruleId":"395","severity":1,"message":"396","line":245,"column":38,"nodeType":"397","messageId":"398","endLine":245,"endColumn":40},{"ruleId":"399","severity":1,"message":"400","line":91,"column":11,"nodeType":"401","endLine":91,"endColumn":48},{"ruleId":"399","severity":1,"message":"400","line":171,"column":42,"nodeType":"401","endLine":171,"endColumn":54},{"ruleId":"399","severity":1,"message":"400","line":174,"column":12,"nodeType":"401","endLine":174,"endColumn":57},{"ruleId":"399","severity":1,"message":"400","line":186,"column":42,"nodeType":"401","endLine":186,"endColumn":54},{"ruleId":"399","severity":1,"message":"400","line":189,"column":12,"nodeType":"401","endLine":189,"endColumn":57},{"ruleId":"399","severity":1,"message":"400","line":201,"column":42,"nodeType":"401","endLine":201,"endColumn":54},{"ruleId":"399","severity":1,"message":"400","line":204,"column":12,"nodeType":"401","endLine":204,"endColumn":57},{"ruleId":"399","severity":1,"message":"400","line":308,"column":11,"nodeType":"401","endLine":308,"endColumn":56},{"ruleId":"399","severity":1,"message":"400","line":335,"column":11,"nodeType":"401","endLine":335,"endColumn":56},{"ruleId":"399","severity":1,"message":"400","line":362,"column":11,"nodeType":"401","endLine":362,"endColumn":56},{"ruleId":"399","severity":1,"message":"400","line":525,"column":15,"nodeType":"401","endLine":525,"endColumn":27},{"ruleId":"399","severity":1,"message":"400","line":526,"column":15,"nodeType":"401","endLine":526,"endColumn":27},{"ruleId":"399","severity":1,"message":"400","line":527,"column":15,"nodeType":"401","endLine":527,"endColumn":27},{"ruleId":"399","severity":1,"message":"400","line":528,"column":15,"nodeType":"401","endLine":528,"endColumn":27},{"ruleId":"399","severity":1,"message":"400","line":535,"column":16,"nodeType":"401","endLine":535,"endColumn":28},{"ruleId":"399","severity":1,"message":"400","line":543,"column":16,"nodeType":"401","endLine":543,"endColumn":28},{"ruleId":"399","severity":1,"message":"400","line":551,"column":16,"nodeType":"401","endLine":551,"endColumn":28},{"ruleId":"399","severity":1,"message":"400","line":576,"column":5,"nodeType":"401","endLine":576,"endColumn":41},{"ruleId":"391","severity":1,"message":"402","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":14},{"ruleId":"391","severity":1,"message":"403","line":10,"column":2,"nodeType":"393","messageId":"394","endLine":10,"endColumn":8},{"ruleId":"395","severity":1,"message":"404","line":56,"column":12,"nodeType":"397","messageId":"398","endLine":56,"endColumn":14},{"ruleId":"395","severity":1,"message":"396","line":43,"column":12,"nodeType":"397","messageId":"398","endLine":43,"endColumn":14},{"ruleId":"405","severity":1,"message":"406","line":76,"column":3,"nodeType":"407","endLine":76,"endColumn":30},{"ruleId":"408","severity":1,"message":"409","line":149,"column":13,"nodeType":"410","messageId":"411","endLine":149,"endColumn":67},{"ruleId":"405","severity":1,"message":"406","line":149,"column":15,"nodeType":"407","endLine":149,"endColumn":25},{"ruleId":"391","severity":1,"message":"412","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":15},{"ruleId":"391","severity":1,"message":"413","line":3,"column":17,"nodeType":"393","messageId":"394","endLine":3,"endColumn":23},{"ruleId":"391","severity":1,"message":"414","line":3,"column":25,"nodeType":"393","messageId":"394","endLine":3,"endColumn":33},{"ruleId":"391","severity":1,"message":"415","line":9,"column":8,"nodeType":"393","messageId":"394","endLine":9,"endColumn":14},{"ruleId":"391","severity":1,"message":"416","line":21,"column":3,"nodeType":"393","messageId":"394","endLine":21,"endColumn":11},{"ruleId":"417","severity":1,"message":"418","line":46,"column":7,"nodeType":"419","messageId":"398","endLine":46,"endColumn":14},{"ruleId":"395","severity":1,"message":"396","line":56,"column":14,"nodeType":"397","messageId":"398","endLine":56,"endColumn":16},{"ruleId":"395","severity":1,"message":"396","line":148,"column":25,"nodeType":"397","messageId":"398","endLine":148,"endColumn":27},{"ruleId":"395","severity":1,"message":"396","line":150,"column":79,"nodeType":"397","messageId":"398","endLine":150,"endColumn":81},{"ruleId":"391","severity":1,"message":"420","line":240,"column":9,"nodeType":"393","messageId":"394","endLine":240,"endColumn":17},{"ruleId":"395","severity":1,"message":"396","line":249,"column":75,"nodeType":"397","messageId":"398","endLine":249,"endColumn":77},{"ruleId":"395","severity":1,"message":"404","line":276,"column":58,"nodeType":"397","messageId":"398","endLine":276,"endColumn":60},{"ruleId":"421","severity":1,"message":"422","line":341,"column":80,"nodeType":"423","endLine":341,"endColumn":97},{"ruleId":"395","severity":1,"message":"396","line":39,"column":12,"nodeType":"397","messageId":"398","endLine":39,"endColumn":14},{"ruleId":"405","severity":1,"message":"406","line":105,"column":25,"nodeType":"407","endLine":105,"endColumn":35},{"ruleId":"391","severity":1,"message":"403","line":11,"column":3,"nodeType":"393","messageId":"394","endLine":11,"endColumn":9},{"ruleId":"395","severity":1,"message":"396","line":42,"column":12,"nodeType":"397","messageId":"398","endLine":42,"endColumn":14},{"ruleId":"424","severity":1,"message":"425","line":106,"column":31,"nodeType":"423","endLine":106,"endColumn":42},{"ruleId":"395","severity":1,"message":"396","line":41,"column":12,"nodeType":"397","messageId":"398","endLine":41,"endColumn":14},{"ruleId":"395","severity":1,"message":"396","line":52,"column":12,"nodeType":"397","messageId":"398","endLine":52,"endColumn":14},{"ruleId":"395","severity":1,"message":"404","line":169,"column":35,"nodeType":"397","messageId":"398","endLine":169,"endColumn":37},{"ruleId":"391","severity":1,"message":"426","line":180,"column":12,"nodeType":"393","messageId":"394","endLine":180,"endColumn":16},{"ruleId":"395","severity":1,"message":"404","line":199,"column":38,"nodeType":"397","messageId":"398","endLine":199,"endColumn":40},{"ruleId":"391","severity":1,"message":"427","line":27,"column":10,"nodeType":"393","messageId":"394","endLine":27,"endColumn":23},{"ruleId":"395","severity":1,"message":"396","line":73,"column":12,"nodeType":"397","messageId":"398","endLine":73,"endColumn":14},{"ruleId":"391","severity":1,"message":"426","line":251,"column":10,"nodeType":"393","messageId":"394","endLine":251,"endColumn":14},{"ruleId":"395","severity":1,"message":"404","line":262,"column":35,"nodeType":"397","messageId":"398","endLine":262,"endColumn":37},{"ruleId":"391","severity":1,"message":"426","line":273,"column":12,"nodeType":"393","messageId":"394","endLine":273,"endColumn":16},{"ruleId":"395","severity":1,"message":"404","line":292,"column":38,"nodeType":"397","messageId":"398","endLine":292,"endColumn":40},{"ruleId":"391","severity":1,"message":"412","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":15},{"ruleId":"391","severity":1,"message":"413","line":3,"column":17,"nodeType":"393","messageId":"394","endLine":3,"endColumn":23},{"ruleId":"391","severity":1,"message":"414","line":3,"column":25,"nodeType":"393","messageId":"394","endLine":3,"endColumn":33},{"ruleId":"391","severity":1,"message":"415","line":10,"column":8,"nodeType":"393","messageId":"394","endLine":10,"endColumn":14},{"ruleId":"391","severity":1,"message":"416","line":22,"column":2,"nodeType":"393","messageId":"394","endLine":22,"endColumn":10},{"ruleId":"395","severity":1,"message":"396","line":64,"column":12,"nodeType":"397","messageId":"398","endLine":64,"endColumn":14},{"ruleId":"395","severity":1,"message":"404","line":107,"column":34,"nodeType":"397","messageId":"398","endLine":107,"endColumn":36},{"ruleId":"395","severity":1,"message":"396","line":119,"column":70,"nodeType":"397","messageId":"398","endLine":119,"endColumn":72},{"ruleId":"395","severity":1,"message":"396","line":146,"column":25,"nodeType":"397","messageId":"398","endLine":146,"endColumn":27},{"ruleId":"395","severity":1,"message":"396","line":201,"column":69,"nodeType":"397","messageId":"398","endLine":201,"endColumn":71},{"ruleId":"395","severity":1,"message":"396","line":49,"column":12,"nodeType":"397","messageId":"398","endLine":49,"endColumn":14},{"ruleId":"391","severity":1,"message":"426","line":215,"column":15,"nodeType":"393","messageId":"394","endLine":215,"endColumn":19},{"ruleId":"391","severity":1,"message":"426","line":241,"column":10,"nodeType":"393","messageId":"394","endLine":241,"endColumn":14},{"ruleId":"391","severity":1,"message":"402","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":14},{"ruleId":"395","severity":1,"message":"396","line":49,"column":18,"nodeType":"397","messageId":"398","endLine":49,"endColumn":20},{"ruleId":"391","severity":1,"message":"426","line":144,"column":25,"nodeType":"393","messageId":"394","endLine":144,"endColumn":29},{"ruleId":"391","severity":1,"message":"428","line":2,"column":17,"nodeType":"393","messageId":"394","endLine":2,"endColumn":24},{"ruleId":"395","severity":1,"message":"396","line":43,"column":14,"nodeType":"397","messageId":"398","endLine":43,"endColumn":16},{"ruleId":"395","severity":1,"message":"396","line":132,"column":25,"nodeType":"397","messageId":"398","endLine":132,"endColumn":27},{"ruleId":"395","severity":1,"message":"404","line":133,"column":76,"nodeType":"397","messageId":"398","endLine":133,"endColumn":78},{"ruleId":"395","severity":1,"message":"396","line":146,"column":68,"nodeType":"397","messageId":"398","endLine":146,"endColumn":70},{"ruleId":"395","severity":1,"message":"396","line":179,"column":78,"nodeType":"397","messageId":"398","endLine":179,"endColumn":80},{"ruleId":"421","severity":1,"message":"422","line":304,"column":72,"nodeType":"423","endLine":304,"endColumn":89},{"ruleId":"421","severity":1,"message":"422","line":349,"column":96,"nodeType":"423","endLine":349,"endColumn":113},{"ruleId":"391","severity":1,"message":"429","line":16,"column":2,"nodeType":"393","messageId":"394","endLine":16,"endColumn":7},{"ruleId":"391","severity":1,"message":"416","line":18,"column":2,"nodeType":"393","messageId":"394","endLine":18,"endColumn":10},{"ruleId":"391","severity":1,"message":"430","line":19,"column":2,"nodeType":"393","messageId":"394","endLine":19,"endColumn":16},{"ruleId":"391","severity":1,"message":"431","line":20,"column":2,"nodeType":"393","messageId":"394","endLine":20,"endColumn":14},{"ruleId":"391","severity":1,"message":"432","line":21,"column":2,"nodeType":"393","messageId":"394","endLine":21,"endColumn":14},{"ruleId":"391","severity":1,"message":"433","line":25,"column":8,"nodeType":"393","messageId":"394","endLine":25,"endColumn":23},{"ruleId":"391","severity":1,"message":"427","line":27,"column":10,"nodeType":"393","messageId":"394","endLine":27,"endColumn":23},{"ruleId":"395","severity":1,"message":"396","line":65,"column":12,"nodeType":"397","messageId":"398","endLine":65,"endColumn":14},{"ruleId":"391","severity":1,"message":"434","line":23,"column":10,"nodeType":"393","messageId":"394","endLine":23,"endColumn":17},{"ruleId":"395","severity":1,"message":"396","line":48,"column":14,"nodeType":"397","messageId":"398","endLine":48,"endColumn":16},{"ruleId":"395","severity":1,"message":"404","line":126,"column":25,"nodeType":"397","messageId":"398","endLine":126,"endColumn":27},{"ruleId":"395","severity":1,"message":"404","line":126,"column":57,"nodeType":"397","messageId":"398","endLine":126,"endColumn":59},{"ruleId":"395","severity":1,"message":"404","line":126,"column":84,"nodeType":"397","messageId":"398","endLine":126,"endColumn":86},{"ruleId":"391","severity":1,"message":"426","line":165,"column":15,"nodeType":"393","messageId":"394","endLine":165,"endColumn":19},{"ruleId":"421","severity":1,"message":"422","line":304,"column":72,"nodeType":"423","endLine":304,"endColumn":89},{"ruleId":"421","severity":1,"message":"422","line":355,"column":150,"nodeType":"423","endLine":355,"endColumn":167},{"ruleId":"395","severity":1,"message":"396","line":40,"column":14,"nodeType":"397","messageId":"398","endLine":40,"endColumn":16},{"ruleId":"408","severity":1,"message":"409","line":104,"column":25,"nodeType":"410","messageId":"411","endLine":104,"endColumn":85},{"ruleId":"405","severity":1,"message":"406","line":104,"column":27,"nodeType":"407","endLine":104,"endColumn":37},{"ruleId":"395","severity":1,"message":"396","line":40,"column":14,"nodeType":"397","messageId":"398","endLine":40,"endColumn":16},{"ruleId":"395","severity":1,"message":"396","line":36,"column":14,"nodeType":"397","messageId":"398","endLine":36,"endColumn":16},{"ruleId":"405","severity":1,"message":"406","line":63,"column":5,"nodeType":"407","endLine":63,"endColumn":32},{"ruleId":"395","severity":1,"message":"396","line":37,"column":18,"nodeType":"397","messageId":"398","endLine":37,"endColumn":20},{"ruleId":"391","severity":1,"message":"435","line":101,"column":55,"nodeType":"393","messageId":"394","endLine":101,"endColumn":59},{"ruleId":"395","severity":1,"message":"396","line":45,"column":14,"nodeType":"397","messageId":"398","endLine":45,"endColumn":16},{"ruleId":"391","severity":1,"message":"426","line":134,"column":13,"nodeType":"393","messageId":"394","endLine":134,"endColumn":17},{"ruleId":"395","severity":1,"message":"404","line":136,"column":69,"nodeType":"397","messageId":"398","endLine":136,"endColumn":71},{"ruleId":"421","severity":1,"message":"422","line":228,"column":90,"nodeType":"423","endLine":228,"endColumn":107},{"ruleId":"395","severity":1,"message":"396","line":45,"column":14,"nodeType":"397","messageId":"398","endLine":45,"endColumn":16},{"ruleId":"395","severity":1,"message":"404","line":109,"column":25,"nodeType":"397","messageId":"398","endLine":109,"endColumn":27},{"ruleId":"395","severity":1,"message":"404","line":109,"column":51,"nodeType":"397","messageId":"398","endLine":109,"endColumn":53},{"ruleId":"395","severity":1,"message":"404","line":109,"column":78,"nodeType":"397","messageId":"398","endLine":109,"endColumn":80},{"ruleId":"395","severity":1,"message":"404","line":109,"column":106,"nodeType":"397","messageId":"398","endLine":109,"endColumn":108},{"ruleId":"391","severity":1,"message":"426","line":149,"column":15,"nodeType":"393","messageId":"394","endLine":149,"endColumn":19},{"ruleId":"395","severity":1,"message":"404","line":61,"column":12,"nodeType":"397","messageId":"398","endLine":61,"endColumn":14},{"ruleId":"395","severity":1,"message":"396","line":107,"column":21,"nodeType":"397","messageId":"398","endLine":107,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":165,"column":6,"nodeType":"407","endLine":165,"endColumn":70},{"ruleId":"395","severity":1,"message":"396","line":356,"column":32,"nodeType":"397","messageId":"398","endLine":356,"endColumn":34},{"ruleId":"395","severity":1,"message":"396","line":496,"column":41,"nodeType":"397","messageId":"398","endLine":496,"endColumn":43},{"ruleId":"395","severity":1,"message":"404","line":61,"column":12,"nodeType":"397","messageId":"398","endLine":61,"endColumn":14},{"ruleId":"395","severity":1,"message":"396","line":174,"column":48,"nodeType":"397","messageId":"398","endLine":174,"endColumn":50},{"ruleId":"395","severity":1,"message":"396","line":203,"column":48,"nodeType":"397","messageId":"398","endLine":203,"endColumn":50},{"ruleId":"405","severity":1,"message":"406","line":255,"column":6,"nodeType":"407","endLine":255,"endColumn":70},{"ruleId":"395","severity":1,"message":"396","line":302,"column":48,"nodeType":"397","messageId":"398","endLine":302,"endColumn":50},{"ruleId":"391","severity":1,"message":"420","line":320,"column":7,"nodeType":"393","messageId":"394","endLine":320,"endColumn":15},{"ruleId":"395","severity":1,"message":"396","line":366,"column":20,"nodeType":"397","messageId":"398","endLine":366,"endColumn":22},{"ruleId":"395","severity":1,"message":"396","line":438,"column":32,"nodeType":"397","messageId":"398","endLine":438,"endColumn":34},{"ruleId":"395","severity":1,"message":"396","line":531,"column":33,"nodeType":"397","messageId":"398","endLine":531,"endColumn":35},{"ruleId":"395","severity":1,"message":"396","line":615,"column":29,"nodeType":"397","messageId":"398","endLine":615,"endColumn":31},{"ruleId":"395","severity":1,"message":"396","line":648,"column":28,"nodeType":"397","messageId":"398","endLine":648,"endColumn":30},{"ruleId":"391","severity":1,"message":"403","line":9,"column":2,"nodeType":"393","messageId":"394","endLine":9,"endColumn":8},{"ruleId":"391","severity":1,"message":"436","line":12,"column":2,"nodeType":"393","messageId":"394","endLine":12,"endColumn":7},{"ruleId":"437","severity":1,"message":"438","line":53,"column":5,"nodeType":"439","endLine":53,"endColumn":7,"suggestions":"440"},{"ruleId":"391","severity":1,"message":"402","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":14},{"ruleId":"395","severity":1,"message":"396","line":46,"column":14,"nodeType":"397","messageId":"398","endLine":46,"endColumn":16},{"ruleId":"391","severity":1,"message":"426","line":135,"column":17,"nodeType":"393","messageId":"394","endLine":135,"endColumn":21},{"ruleId":"395","severity":1,"message":"404","line":137,"column":79,"nodeType":"397","messageId":"398","endLine":137,"endColumn":81},{"ruleId":"421","severity":1,"message":"422","line":229,"column":90,"nodeType":"423","endLine":229,"endColumn":107},{"ruleId":"387","replacedBy":"441"},{"ruleId":"389","replacedBy":"442"},"no-native-reassign",["443"],"no-negated-in-lhs",["444"],"no-unused-vars","'ViewStandard' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'Button' is defined but never used.","Expected '!==' and instead saw '!='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'routes' is defined but never used.","'Dropdown' is defined but never used.","no-dupe-keys","Duplicate key 'loading'.","ObjectExpression","'clientId' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/scope","The scope prop can only be used on <th> elements.","'data' is assigned a value but never used.","'createPrinter' is defined but never used.","'version' is defined but never used.","'Modal' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'DashboardHeader' is defined but never used.","'invalid' is defined but never used.","'date' is assigned a value but never used.","'Table' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'documentId'. Either include it or remove the dependency array.","ArrayExpression",["445"],["443"],["444"],"no-global-assign","no-unsafe-negation",{"desc":"446","fix":"447"},"Update the dependencies array to be: [documentId]",{"range":"448","text":"449"},[1245,1247],"[documentId]"]